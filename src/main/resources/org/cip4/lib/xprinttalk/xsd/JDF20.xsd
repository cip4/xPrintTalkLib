<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://www.CIP4.org/JDFSchema_2_0" xmlns="http://www.CIP4.org/JDFSchema_2_0" xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<xs:simpleType name="boolean">
		<xs:restriction base="xs:boolean" />
	</xs:simpleType>

	<xs:simpleType name="string">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="gYearMonth">
		<xs:restriction base="xs:gYearMonth" />
	</xs:simpleType>

	<xs:simpleType name="shortString">
		<xs:restriction base="string" />
	</xs:simpleType>

	<xs:simpleType name="NMTOKEN">
		<xs:restriction base="xs:NMTOKEN" />
	</xs:simpleType>

	<xs:simpleType name="NMTOKENS">
		<xs:restriction base="xs:NMTOKENS" />
	</xs:simpleType>

	<xs:simpleType name="ID">
		<xs:restriction base="xs:ID" />
	</xs:simpleType>

	<xs:simpleType name="IDREF">
		<xs:restriction base="xs:IDREF" />
	</xs:simpleType>

	<xs:simpleType name="IDREFS">
		<xs:restriction base="xs:IDREFS" />
	</xs:simpleType>

	<xs:simpleType name="language">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="languages">
		<xs:list itemType="language" />
	</xs:simpleType>

	<xs:simpleType name="hexBinary">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="dateTime">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="DateTimeRangeList">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="PDFPath">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="duration">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="DurationRangeList">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="rectangle">
		<xs:list itemType="xs:double" />
	</xs:simpleType>

	<xs:simpleType name="RectangleRangeList">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="integer">
		<xs:restriction base="xs:int" />
	</xs:simpleType>

	<xs:simpleType name="IntegerRangeList">
		<xs:restriction base="xs:int" />
	</xs:simpleType>

	<xs:simpleType name="IntegerRange">
		<xs:restriction base="xs:int" />
	</xs:simpleType>

	<xs:simpleType name="IntegerList">
		<xs:list itemType="integer" />
	</xs:simpleType>

	<xs:simpleType name="double">
		<xs:restriction base="xs:double" />
	</xs:simpleType>

	<xs:simpleType name="NumberList">
		<xs:list itemType="double" />
	</xs:simpleType>

	<xs:simpleType name="NumberRangeList">
		<xs:list itemType="double" />
	</xs:simpleType>

	<xs:simpleType name="shape">
		<xs:restriction base="NumberList" />
	</xs:simpleType>

	<xs:simpleType name="ShapeRangeList">
		<xs:restriction base="NumberList" />
	</xs:simpleType>

	<xs:simpleType name="URI">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="URL">
		<xs:restriction base="URI" />
	</xs:simpleType>

	<xs:simpleType name="XPath">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="RegExp">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="XYPair">
		<xs:restriction base="NumberList" />
	</xs:simpleType>

	<xs:simpleType name="XYPairRangeList">
		<xs:restriction base="NumberList" />
	</xs:simpleType>

	<xs:simpleType name="matrix">
		<xs:restriction base="NumberList" />
	</xs:simpleType>

	<xs:simpleType name="Any">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="LabColor">
		<xs:restriction base="NumberList" />
	</xs:simpleType>

	<xs:simpleType name="RGBColor">
		<xs:restriction base="NumberList" />
	</xs:simpleType>

	<xs:simpleType name="CMYKColor">
		<xs:restriction base="NumberList" />
	</xs:simpleType>

	<xs:simpleType name="TransferFunction">
		<xs:restriction base="NumberList" />
	</xs:simpleType>

	<xs:simpleType name="NameRangeList">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="unbounded">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<!-- Enums -->
	<xs:simpleType name="EnumJDFJMFVersion">
		<xs:restriction base="xs:string">
			<xs:enumeration value="2.0" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumXYRelation">
		<xs:restriction base="xs:NMTOKEN">
			<xs:enumeration value="gt" />
			<xs:enumeration value="ge" />
			<xs:enumeration value="ne" />
			<xs:enumeration value="eq" />
			<xs:enumeration value="lt" />
			<xs:enumeration value="le" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumAnchor">
		<xs:restriction base="xs:string">
			<xs:enumeration value="TopLeft" />
			<xs:enumeration value="TopCenter" />
			<xs:enumeration value="TopRight" />
			<xs:enumeration value="CenterLeft" />
			<xs:enumeration value="Center" />
			<xs:enumeration value="CenterRight" />
			<xs:enumeration value="BottomLeft" />
			<xs:enumeration value="BottomCenter" />
			<xs:enumeration value="BottomRight" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumPrintPreference">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Balanced" />
			<xs:enumeration value="CostEffective" />
			<xs:enumeration value="Fastest" />
			<xs:enumeration value="HightestQuality" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumNamedColor">
		<xs:restriction base="xs:string">
			<xs:enumeration value="White" />
			<xs:enumeration value="Black" />
			<xs:enumeration value="Gray" />
			<xs:enumeration value="Red" />
			<xs:enumeration value="Yellow" />
			<xs:enumeration value="Green" />
			<xs:enumeration value="Blue" />
			<xs:enumeration value="Turquoise" />
			<xs:enumeration value="Violet" />
			<xs:enumeration value="Orange" />
			<xs:enumeration value="Brown" />
			<xs:enumeration value="Gold" />
			<xs:enumeration value="Silver" />
			<xs:enumeration value="Pink" />
			<xs:enumeration value="Buff" />
			<xs:enumeration value="Ivory" />
			<xs:enumeration value="Goldenrod" />
			<xs:enumeration value="DarkWhite" />
			<xs:enumeration value="DarkBlack" />
			<xs:enumeration value="DarkGray" />
			<xs:enumeration value="DarkRed" />
			<xs:enumeration value="DarkYellow" />
			<xs:enumeration value="DarkGreen" />
			<xs:enumeration value="DarkBlue" />
			<xs:enumeration value="DarkTurquoise" />
			<xs:enumeration value="DarkViolet" />
			<xs:enumeration value="DarkOrange" />
			<xs:enumeration value="DarkBrown" />
			<xs:enumeration value="DarkGold" />
			<xs:enumeration value="DarkSilver" />
			<xs:enumeration value="DarkPink" />
			<xs:enumeration value="DarkBuff" />
			<xs:enumeration value="DarkIvory" />
			<xs:enumeration value="DarkGoldenrod" />
			<xs:enumeration value="DarkMustard" />
			<xs:enumeration value="LightWhite" />
			<xs:enumeration value="LightBlack" />
			<xs:enumeration value="LightGray" />
			<xs:enumeration value="LightRed" />
			<xs:enumeration value="LightYellow" />
			<xs:enumeration value="LightGreen" />
			<xs:enumeration value="LightBlue" />
			<xs:enumeration value="LightTurquoise" />
			<xs:enumeration value="LightViolet" />
			<xs:enumeration value="LightOrange" />
			<xs:enumeration value="LightBrown" />
			<xs:enumeration value="LightGold" />
			<xs:enumeration value="LightSilver" />
			<xs:enumeration value="LightPink" />
			<xs:enumeration value="LightBuff" />
			<xs:enumeration value="LightIvory" />
			<xs:enumeration value="LightGoldenrod" />
			<xs:enumeration value="LightMustard" />
			<xs:enumeration value="ClearWhite" />
			<xs:enumeration value="ClearBlack" />
			<xs:enumeration value="ClearGray" />
			<xs:enumeration value="ClearRed" />
			<xs:enumeration value="ClearGreen" />
			<xs:enumeration value="ClearBlue" />
			<xs:enumeration value="ClearTurquoise" />
			<xs:enumeration value="ClearViolet" />
			<xs:enumeration value="ClearOrange" />
			<xs:enumeration value="ClearBrown" />
			<xs:enumeration value="ClearGold" />
			<xs:enumeration value="ClearSilver" />
			<xs:enumeration value="ClearPink" />
			<xs:enumeration value="ClearBuff" />
			<xs:enumeration value="ClearIvory" />
			<xs:enumeration value="ClearGoldenrod" />
			<xs:enumeration value="ClearMustard" />
			<xs:enumeration value="ClearDarkWhite" />
			<xs:enumeration value="ClearDarkBlack" />
			<xs:enumeration value="ClearDarkGray" />
			<xs:enumeration value="ClearDarkRed" />
			<xs:enumeration value="ClearDarkYellow" />
			<xs:enumeration value="ClearDarkGreen" />
			<xs:enumeration value="ClearDarkBlue" />
			<xs:enumeration value="ClearDarkTurquoise" />
			<xs:enumeration value="ClearDarkViolet" />
			<xs:enumeration value="ClearDarkOrange" />
			<xs:enumeration value="ClearDarkBrown" />
			<xs:enumeration value="ClearDarkGold" />
			<xs:enumeration value="ClearDarkSilver" />
			<xs:enumeration value="ClearDarkPink" />
			<xs:enumeration value="ClearDarkBuff" />
			<xs:enumeration value="ClearDarkIvory" />
			<xs:enumeration value="ClearDarkGoldenrod" />
			<xs:enumeration value="ClearLightWhite" />
			<xs:enumeration value="ClearLightBlack" />
			<xs:enumeration value="ClearLightGray" />
			<xs:enumeration value="ClearLightRed" />
			<xs:enumeration value="ClearLightYellow" />
			<xs:enumeration value="ClearLightGreen" />
			<xs:enumeration value="ClearLightBlue" />
			<xs:enumeration value="ClearLightTurquoise" />
			<xs:enumeration value="ClearLightViolet" />
			<xs:enumeration value="ClearLightOrange" />
			<xs:enumeration value="ClearLightBrown" />
			<xs:enumeration value="ClearLightGold" />
			<xs:enumeration value="ClearLightSilver" />
			<xs:enumeration value="ClearLightPink" />
			<xs:enumeration value="ClearLightBuff" />
			<xs:enumeration value="ClearLightIvory" />
			<xs:enumeration value="ClearLightGoldenrod" />
			<xs:enumeration value="ClearLightMustard" />
			<xs:enumeration value="MultiColor" />
			<xs:enumeration value="NoColor" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumNodeStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Waiting" />
			<xs:enumeration value="Setup" />
			<xs:enumeration value="InProgress" />
			<xs:enumeration value="Cleanup" />
			<xs:enumeration value="Suspended" />
			<xs:enumeration value="Stopped" />
			<xs:enumeration value="Completed" />
			<xs:enumeration value="Aborted" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumResStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Incomplete" />
			<xs:enumeration value="Rejected" />
			<xs:enumeration value="Unavailable" />
			<xs:enumeration value="InUse" />
			<xs:enumeration value="Draft" />
			<xs:enumeration value="Complete" />
			<xs:enumeration value="Available" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumOrientation">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Flip0" />
			<xs:enumeration value="Flip90" />
			<xs:enumeration value="Flip180" />
			<xs:enumeration value="Flip270" />
			<xs:enumeration value="Rotate0" />
			<xs:enumeration value="Rotate90" />
			<xs:enumeration value="Rotate180" />
			<xs:enumeration value="Rotate270" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumWorkStyle">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Simplex" />
			<xs:enumeration value="Perfecting" />
			<xs:enumeration value="WorkAndBack" />
			<xs:enumeration value="WorkAndTurn" />
			<xs:enumeration value="WorkAndTumble" />
			<xs:enumeration value="WorkAndTwist" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumCoatings">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None" />
			<xs:enumeration value="Coated" />
			<xs:enumeration value="Glossy" />
			<xs:enumeration value="HighGloss" />
			<xs:enumeration value="InkJet" />
			<xs:enumeration value="Matte" />
			<xs:enumeration value="Polymer" />
			<xs:enumeration value="Silver" />
			<xs:enumeration value="Satin" />
			<xs:enumeration value="Semigloss" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumDeviceStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unknown" />
			<xs:enumeration value="Idle" />
			<xs:enumeration value="Down" />
			<xs:enumeration value="Setup" />
			<xs:enumeration value="Running" />
			<xs:enumeration value="Cleanup" />
			<xs:enumeration value="Stopped" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumListType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="CompleteList" />
			<xs:enumeration value="CompleteOrderedList" />
			<xs:enumeration value="ContainedList" />
			<xs:enumeration value="List" />
			<xs:enumeration value="OrderedList" />
			<xs:enumeration value="OrderedRangeList" />
			<xs:enumeration value="Range" />
			<xs:enumeration value="RangeList" />
			<xs:enumeration value="SingleValue" />
			<xs:enumeration value="Span" />
			<xs:enumeration value="UniqueList" />
			<xs:enumeration value="UniqueRangeList" />
			<xs:enumeration value="UniqueOrderedList" />
			<xs:enumeration value="UniqueOrderedRangeList" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumAvailability">
		<xs:restriction base="xs:string">
			<xs:enumeration value="NotInstalled" />
			<xs:enumeration value="NotLicensed" />
			<xs:enumeration value="Disabled" />
			<xs:enumeration value="Installed" />
			<xs:enumeration value="Module" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumUserDisplay">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Display" />
			<xs:enumeration value="Hide" />
			<xs:enumeration value="Dependent" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumPartIDKeys">
		<xs:restriction base="xs:string">
			<xs:enumeration value="BinderySignatureName" />
			<xs:enumeration value="BlockName" />
			<xs:enumeration value="BundleItemIndex" />
			<xs:enumeration value="CellIndex" />
			<xs:enumeration value="Condition" />
			<xs:enumeration value="DocCopies" />
			<xs:enumeration value="DocIndex" />
			<xs:enumeration value="DocRunIndex" />
			<xs:enumeration value="DocSheetIndex" />
			<xs:enumeration value="FountainNumber" />
			<xs:enumeration value="ItemNames" />
			<xs:enumeration value="LayerIDs" />
			<xs:enumeration value="Location" />
			<xs:enumeration value="Option" />
			<xs:enumeration value="PageNumber" />
			<xs:enumeration value="PartVersion" />
			<xs:enumeration value="PreflightRule" />
			<xs:enumeration value="PreviewType" />
			<xs:enumeration value="RibbonName" />
			<xs:enumeration value="Run" />
			<xs:enumeration value="RunIndex" />
			<xs:enumeration value="RunTags" />
			<xs:enumeration value="RunPage" />
			<xs:enumeration value="Separation" />
			<xs:enumeration value="SectionIndex" />
			<xs:enumeration value="SetDocIndex" />
			<xs:enumeration value="SetSheetIndex" />
			<xs:enumeration value="SetIndex" />
			<xs:enumeration value="SetRunIndex" />
			<xs:enumeration value="SheetIndex" />
			<xs:enumeration value="SheetName" />
			<xs:enumeration value="Side" />
			<xs:enumeration value="SignatureName" />
			<xs:enumeration value="TileID" />
			<xs:enumeration value="WebName" />
			<xs:enumeration value="DeliveryUnit0" />
			<xs:enumeration value="DeliveryUnit1" />
			<xs:enumeration value="DeliveryUnit2" />
			<xs:enumeration value="DeliveryUnit3" />
			<xs:enumeration value="DeliveryUnit4" />
			<xs:enumeration value="DeliveryUnit5" />
			<xs:enumeration value="DeliveryUnit6" />
			<xs:enumeration value="DeliveryUnit7" />
			<xs:enumeration value="DeliveryUnit8" />
			<xs:enumeration value="DeliveryUnit9" />
			<xs:enumeration value="Edition" />
			<xs:enumeration value="EditionVersion" />
			<xs:enumeration value="PageTags" />
			<xs:enumeration value="PlateLayout" />
			<xs:enumeration value="RunSet" />
			<xs:enumeration value="DocTags" />
			<xs:enumeration value="SetTags" />
			<xs:enumeration value="SubRun" />
			<xs:enumeration value="WebProduct" />
			<xs:enumeration value="StationName" />
			<xs:enumeration value="WebSetup" />
			<xs:enumeration value="Metadata0" />
			<xs:enumeration value="Metadata1" />
			<xs:enumeration value="Metadata2" />
			<xs:enumeration value="Metadata3" />
			<xs:enumeration value="Metadata4" />
			<xs:enumeration value="Metadata5" />
			<xs:enumeration value="Metadata6" />
			<xs:enumeration value="Metadata7" />
			<xs:enumeration value="Metadata8" />
			<xs:enumeration value="Metadata9" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumAcknowledgeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Received" />
			<xs:enumeration value="Applied" />
			<xs:enumeration value="Completed" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumURLTypes">
		<xs:restriction base="xs:string">
			<xs:enumeration value="JDFError" />
			<xs:enumeration value="JDFInput" />
			<xs:enumeration value="JDFOutput" />
			<xs:enumeration value="JMF" />
			<xs:enumeration value="SecureJMF" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumClasses">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Event" />
			<xs:enumeration value="Information" />
			<xs:enumeration value="Warning" />
			<xs:enumeration value="Error" />
			<xs:enumeration value="Fatal" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumPreviewUsages">
		<xs:restriction base="xs:string">
			<xs:enumeration value="3D" />
			<xs:enumeration value="Animation" />
			<xs:enumeration value="Separation" />
			<xs:enumeration value="SeparationRaw" />
			<xs:enumeration value="SeparatedThumbNail" />
			<xs:enumeration value="ThumbNail" />
			<xs:enumeration value="Viewable" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumStatusList">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Running" />
			<xs:enumeration value="Waiting" />
			<xs:enumeration value="Held" />
			<xs:enumeration value="Removed" />
			<xs:enumeration value="Suspended" />
			<xs:enumeration value="PendingReturn" />
			<xs:enumeration value="Completed" />
			<xs:enumeration value="Aborted" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumPackaging">
		<xs:restriction base="xs:string">
			<xs:enumeration value="MIME" />
			<xs:enumeration value="None" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumIconUsage">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unknown" />
			<xs:enumeration value="Idle" />
			<xs:enumeration value="Down" />
			<xs:enumeration value="Setup" />
			<xs:enumeration value="Running" />
			<xs:enumeration value="Cleanup" />
			<xs:enumeration value="Stopped" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumValueList">
		<xs:restriction base="xs:string">
			<xs:enumeration value="true" />
			<xs:enumeration value="false" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumPresentValueList">
		<xs:restriction base="xs:string">
			<xs:enumeration value="true" />
			<xs:enumeration value="false" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumAllowedValueList">
		<xs:restriction base="xs:string">
			<xs:enumeration value="true" />
			<xs:enumeration value="false" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumComponentType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Block" />
			<xs:enumeration value="Other" />
			<xs:enumeration value="Ribbon" />
			<xs:enumeration value="Sheet" />
			<xs:enumeration value="Web" />
			<xs:enumeration value="FinalProduct" />
			<xs:enumeration value="PartialProduct" />
			<xs:enumeration value="Proof" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumSourceCSs">
		<xs:restriction base="xs:string">
			<xs:enumeration value="CalGray" />
			<xs:enumeration value="CalRGB" />
			<xs:enumeration value="Calibrated" />
			<xs:enumeration value="CIEBased" />
			<xs:enumeration value="CMYK" />
			<xs:enumeration value="DeviceN" />
			<xs:enumeration value="DevIndep" />
			<xs:enumeration value="RGB" />
			<xs:enumeration value="Gray" />
			<xs:enumeration value="ICCBased" />
			<xs:enumeration value="ICCCMYK" />
			<xs:enumeration value="ICCGray" />
			<xs:enumeration value="ICCLAB" />
			<xs:enumeration value="ICCRGB" />
			<xs:enumeration value="Lab" />
			<xs:enumeration value="Separtation" />
			<xs:enumeration value="YUV" />
			<xs:enumeration value="All" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumHoleType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None" />
			<xs:enumeration value="S1-generic" />
			<xs:enumeration value="S-generic" />
			<xs:enumeration value="R2-generic" />
			<xs:enumeration value="R2m-DIN" />
			<xs:enumeration value="R2m-ISO" />
			<xs:enumeration value="R2m-MIB" />
			<xs:enumeration value="R2i-US-a" />
			<xs:enumeration value="R2i-US-b" />
			<xs:enumeration value="R3-generic" />
			<xs:enumeration value="R3i-US" />
			<xs:enumeration value="R4-generic" />
			<xs:enumeration value="R4m-DIN-A4" />
			<xs:enumeration value="R4m-DIN-A5" />
			<xs:enumeration value="R4m-swedish" />
			<xs:enumeration value="R4i-US" />
			<xs:enumeration value="R5-generic" />
			<xs:enumeration value="R5i-US-a" />
			<xs:enumeration value="R5i-US-b" />
			<xs:enumeration value="R5i-US-c" />
			<xs:enumeration value="R6-generic" />
			<xs:enumeration value="R6m-4h2s" />
			<xs:enumeration value="R6m-DIN-A5" />
			<xs:enumeration value="R7-generic" />
			<xs:enumeration value="R7i-US-a" />
			<xs:enumeration value="R7i-US-b" />
			<xs:enumeration value="R7i-US-c" />
			<xs:enumeration value="R11m-7h4s" />
			<xs:enumeration value="P16_9i-rect-0t" />
			<xs:enumeration value="P12m-rect-0t" />
			<xs:enumeration value="W2_1i-round-0t" />
			<xs:enumeration value="W2_1i-square-0t" />
			<xs:enumeration value="W3_1i-square-0t" />
			<xs:enumeration value="C9.5m-round-0t" />
			<xs:enumeration value="Explicit" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnumSourceObjects">
		<xs:restriction base="xs:string">
			<xs:enumeration value="All" />
			<xs:enumeration value="ImagePhotographic" />
			<xs:enumeration value="ImageScreenShot" />
			<xs:enumeration value="Text" />
			<xs:enumeration value="LineArt" />
			<xs:enumeration value="SmoothShades" />
		</xs:restriction>
	</xs:simpleType>

	<!-- ** Complex type definition for Resource ** -->
	<xs:complexType name="telem">
		<xs:simpleContent>
			<xs:extension base="string" />
		</xs:simpleContent>
	</xs:complexType>

	<xs:element name="Resource">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="1" ref="ResourceType" />
				<xs:element minOccurs="0" maxOccurs="1" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="GeneralID" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Comment" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
			</xs:sequence>
			<xs:attribute name="AmountProduced" type="double" use="optional" />
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="Status" type="EnumResStatus" use="optional" />
			<xs:attribute name="ResourceWeight" type="double" use="optional" />
			<xs:attribute name="GrossWeight" type="double" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="LotControl" use="optional" />
			<xs:attribute name="Amount" type="double" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="AmountRequired" type="double" use="optional" />
			<xs:attribute name="ID" type="ID" use="required" />
			<xs:attribute name="AlternateBrand" type="string" use="optional" />
			<xs:attribute name="Manufacturer" type="string" use="optional" />
			<xs:attribute name="Unit" type="NMTOKEN" use="optional" />
			<xs:attribute name="PartUsage" use="optional" />
			<xs:attribute name="BatchID" type="string" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Brand" type="string" use="optional" />
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
			<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
			<xs:attribute name="AmountGood" type="double" use="optional" />
			<xs:attribute name="AmountWaste" type="double" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!--** abstract type for substitution only ** -->
	<xs:element abstract="true" name="ResourceType" type="ResourceType" />
	<xs:complexType name="ResourceType" />

	<!-- ** Complex type definition for Parameter ** -->
	<xs:element name="Parameter">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="1" ref="ParameterType" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="AmountPool" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="GeneralID" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Comment" />
			</xs:sequence>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="Status" type="EnumResStatus" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="NoOp" type="boolean" use="optional" />
			<xs:attribute name="PartUsage" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!--** abstract type for substitution only ** -->
	<xs:element abstract="true" name="ParameterType" type="ParameterType" />
	<xs:complexType name="ParameterType" />

	<!-- ** Complex type definition for Intent ** -->
	<xs:element name="Intent">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="IntentType" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="GeneralID" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Comment" />
			</xs:sequence>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Name" type="NMTOKEN" use="required" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="Status" type="EnumResStatus" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="PartUsage" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!--** abstract type for substitution only ** -->
	<xs:element abstract="true" name="PlacedObject" type="PlacedObject" />
	<xs:complexType name="PlacedObject">
		<xs:attribute name="CTM" type="matrix" use="optional" />
	</xs:complexType>


	<!--** abstract type for substitution only ** -->
	<xs:element abstract="true" name="IntentType" type="IntentType" />
	<xs:complexType name="IntentType" />

	<!--** abstract type for substitution only ** -->
	<xs:element abstract="true" name="SetType" type="SetType" />
	<xs:complexType name="SetType" />

	<!-- ** Complex type definition for IntentSet ** -->
	<xs:element name="IntentSet" />
	
	<!-- ** Complex type definition for AmountPool ** -->
	<xs:element name="AmountPool">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PartAmount" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<!-- ** Complex type definition for PartAmount ** -->
	<xs:element name="PartAmount">
		<xs:complexType>
			<xs:attribute name="Amount" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ChildProduct ** -->
	<xs:element name="ChildProduct">
		<xs:complexType>
			<xs:attribute name="ChildRef" type="IDREF" use="required" />
			<xs:attribute name="Amount" type="integer" use="optional" />
			<xs:attribute name="ProductUsage" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Product ** -->
	<xs:element name="Product">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="GeneralID" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Comment" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ChildProduct" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Intent" />
			</xs:sequence>
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="IsRoot" type="boolean" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
			<xs:attribute name="Amount" type="integer" use="optional" />
			<xs:attribute name="ProductID" type="shortString" use="optional" />
			<xs:attribute name="ProductType" type="NMTOKEN" use="optional" />
			<xs:attribute name="ProductTypeDetails" type="string" use="optional" />
			<xs:attribute name="AssemblyIDs" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ProductList ** -->
	<xs:element name="ProductList">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="GeneralID" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Comment" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Product" />
			</xs:sequence>
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="TextElement">
		<xs:restriction base="string" />
	</xs:simpleType>

	<!-- ** Complex type definition for ElementState ** -->
	<xs:element name="ElementState">
		<xs:complexType>
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="MaxOccurs" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Dependent ** -->
	<xs:element name="Dependent">
		<xs:complexType>
			<xs:attribute name="JobID" type="shortString" use="required" />
			<xs:attribute name="JobPartID" type="shortString" use="required" />
			<xs:attribute name="JMFURL" type="URL" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ** -->
	<xs:element name="XJDF">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="1" ref="AuditPool" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="GeneralID" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Comment" />
				<xs:element minOccurs="0" maxOccurs="1" ref="ProductList" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="SetType" />
			</xs:sequence>
			<xs:attribute name="ID" type="ID" use="required" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
			<xs:attribute name="Types" type="NMTOKENS" use="optional" />
			<xs:attribute name="CommentURL" type="URL" use="optional" />
			<xs:attribute name="JobID" type="string" use="optional" />
			<xs:attribute name="ICSVersions" type="NMTOKENS" use="optional" />
			<xs:attribute name="Category" type="NMTOKEN" use="optional" />
			<xs:attribute name="RelatedJobPartID" type="string" use="optional" />
			<xs:attribute name="ProjectID" type="string" use="optional" />
			<xs:attribute name="Version" use="required" />
			<xs:attribute name="MaxVersion" type="EnumJDFJMFVersion" use="optional" />
			<xs:attribute name="JobPartID" type="string" use="optional" />
			<xs:attribute name="TemplateVersion" type="string" use="optional" />
			<xs:attribute name="TemplateID" type="string" use="optional" />
			<xs:attribute name="RelatedJobID" type="string" use="optional" />
			<xs:attribute name="Activation" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ResourceSet ** -->
	<xs:element name="ResourceSet" type="ResourceSet" substitutionGroup="SetType" />
	<xs:complexType name="ResourceSet">
		<xs:complexContent>
			<xs:extension base="SetType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Resource" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Dependent" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="GeneralID" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Comment" />
				</xs:sequence>
				<xs:attribute name="ID" type="ID" use="required" />
				<xs:attribute name="DescriptiveName" type="string" use="optional" />
				<xs:attribute name="Name" type="NMTOKEN" use="required" />
				<xs:attribute name="Usage" use="optional" />
				<xs:attribute name="ProcessUsage" type="NMTOKEN" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ParameterSet ** -->
	<xs:element name="ParameterSet" type="ParameterSet" substitutionGroup="SetType" />
	<xs:complexType name="ParameterSet">
		<xs:complexContent>
			<xs:extension base="SetType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Parameter" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Dependent" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="GeneralID" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Comment" />
				</xs:sequence>
				<xs:attribute name="ID" type="ID" use="optional" />
				<xs:attribute name="DescriptiveName" type="string" use="optional" />
				<xs:attribute name="Name" type="NMTOKEN" use="required" />
				<xs:attribute name="Usage" use="optional" />
				<xs:attribute name="ProcessUsage" type="NMTOKEN" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Comment ** -->
	<xs:element name="Comment">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="string">
					<xs:attribute name="Language" type="language" use="optional" />
					<xs:attribute name="Attribute" type="NMTOKEN" use="optional" />
					<xs:attribute name="ID" type="ID" use="optional" />
					<xs:attribute name="Name" type="NMTOKEN" use="optional" />
					<xs:attribute name="TimeStamp" type="dateTime" use="optional" />
					<xs:attribute name="Path" type="PDFPath" use="optional" />
					<xs:attribute name="Box" type="rectangle" use="optional" />
					<xs:attribute name="Author" type="string" use="optional" />
					<xs:attribute name="AgentName" type="string" use="optional" />
					<xs:attribute name="AgentVersion" type="string" use="optional" />
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Constants ** -->
	<xs:element name="Constants" />

	<!-- ** Complex type definition for CustomerInfo ** -->
	<xs:element name="CustomerInfo" type="CustomerInfo" substitutionGroup="ParameterType" />
	<xs:complexType name="CustomerInfo">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="CustomerMessage" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
				<xs:attribute name="CustomerProjectID" type="string" use="optional" />
				<xs:attribute name="BillingCode" type="string" use="optional" />
				<xs:attribute name="CustomerID" type="string" use="optional" />
				<xs:attribute name="CustomerOrderID" type="string" use="optional" />
				<xs:attribute name="CustomerJobName" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for CustomerMessage ** -->
	<xs:element name="CustomerMessage">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ComChannel" />
			</xs:sequence>
			<xs:attribute name="MessageEvents" type="NMTOKENS" use="optional" />
			<xs:attribute name="Language" type="language" use="optional" />
			<xs:attribute name="ShowList" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for NodeInfo ** -->
	<xs:element name="NodeInfo" type="NodeInfo" substitutionGroup="ParameterType" />
	<xs:complexType name="NodeInfo">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="NotificationFilter" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="MISDetails" />
				</xs:sequence>
				<xs:attribute name="DueLevel" use="optional" />
				<xs:attribute name="LastStart" type="dateTime" use="optional" />
				<xs:attribute name="FirstEnd" type="dateTime" use="optional" />
				<xs:attribute name="TotalDuration" type="duration" use="optional" />
				<xs:attribute name="NodeStatus" type="EnumNodeStatus" use="optional" />
				<xs:attribute name="SetupDuration" type="duration" use="optional" />
				<xs:attribute name="JobPriority" type="integer" use="optional" />
				<xs:attribute name="WorkStepID" type="string" use="optional" />
				<xs:attribute name="NaturalLang" type="language" use="optional" />
				<xs:attribute name="CleanupDuration" type="duration" use="optional" />
				<xs:attribute name="FirstStart" type="dateTime" use="optional" />
				<xs:attribute name="Start" type="dateTime" use="optional" />
				<xs:attribute name="End" type="dateTime" use="optional" />
				<xs:attribute name="NodeStatusDetails" type="string" use="optional" />
				<xs:attribute name="LastEnd" type="dateTime" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Parser ** -->
	<xs:element name="Parser" />

	<!-- ** Complex type definition for Versions ** -->
	<xs:element name="Versions" />

	<!-- ** Complex type definition for BaseDataTypes ** -->
	<xs:element name="BaseDataTypes" />

	<!-- ** Complex type definition for CMYKColor ** -->
	<xs:element name="CMYKColor" />

	<!-- ** Complex type definition for DateTimeRange ** -->
	<xs:element name="DateTimeRange" />

	<!-- ** Complex type definition for DateTimeRangeList ** -->
	<xs:element name="DateTimeRangeList" />

	<!-- ** Complex type definition for DurationRange ** -->
	<xs:element name="DurationRange" />

	<!-- ** Complex type definition for DurationRangeList ** -->
	<xs:element name="DurationRangeList" />

	<!-- ** Complex type definition for IntegerList ** -->
	<xs:element name="IntegerList" />

	<!-- ** Complex type definition for IntegerRange ** -->
	<xs:element name="IntegerRange" />

	<!-- ** Complex type definition for IntegerRangeList ** -->
	<xs:element name="IntegerRangeList" />

	<!-- ** Complex type definition for LabColor ** -->
	<xs:element name="LabColor" />

	<!-- ** Complex type definition for Matrix ** -->
	<xs:element name="Matrix" />

	<!-- ** Complex type definition for NameRange ** -->
	<xs:element name="NameRange" />

	<!-- ** Complex type definition for NameRangeList ** -->
	<xs:element name="NameRangeList" />

	<!-- ** Complex type definition for NumberList ** -->
	<xs:element name="NumberList" />

	<!-- ** Complex type definition for NumberRange ** -->
	<xs:element name="NumberRange" />

	<!-- ** Complex type definition for NumberRangeList ** -->
	<xs:element name="NumberRangeList" />

	<!-- ** Complex type definition for NumList ** -->
	<xs:element name="NumList" />

	<!-- ** Complex type definition for Path ** -->
	<xs:element name="Path" />

	<!-- ** Complex type definition for Range ** -->
	<xs:element name="Range">
		<xs:complexType>
			<xs:attribute name="Language" type="language" use="optional" />
			<xs:attribute name="Attribute" type="NMTOKEN" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="Name" type="NMTOKEN" use="optional" />
			<xs:attribute name="TimeStamp" type="dateTime" use="optional" />
			<xs:attribute name="Path" type="PDFPath" use="optional" />
			<xs:attribute name="Box" type="rectangle" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for RangeList ** -->
	<xs:element name="RangeList" />

	<!-- ** Complex type definition for Rectangle ** -->
	<xs:element name="Rectangle" />

	<!-- ** Complex type definition for RectangleRange ** -->
	<xs:element name="RectangleRange" />

	<!-- ** Complex type definition for RectangleRangeList ** -->
	<xs:element name="RectangleRangeList" />

	<!-- ** Complex type definition for RGBColor ** -->
	<xs:element name="RGBColor" />

	<!-- ** Complex type definition for Shape ** -->
	<xs:element name="Shape" type="Shape" substitutionGroup="ParameterType" />
	<xs:complexType name="Shape">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Shape" />
				</xs:sequence>
				<xs:attribute name="CutOut" type="boolean" use="optional" />
				<xs:attribute name="CutType" use="optional" />
				<xs:attribute name="DDESCutType" type="integer" use="optional" />
				<xs:attribute name="ShapeDepth" type="double" use="optional" />
				<xs:attribute name="TeethPerDimension" type="double" use="optional" />
				<xs:attribute name="LockOrigins" type="boolean" use="optional" />
				<xs:attribute name="CutPath" type="PDFPath" use="optional" />
				<xs:attribute name="Material" type="string" use="optional" />
				<xs:attribute name="ShapeType" use="optional" />
				<xs:attribute name="CutBox" type="rectangle" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ShapeRange ** -->
	<xs:element name="ShapeRange" />

	<!-- ** Complex type definition for ShapeRangeList ** -->
	<xs:element name="ShapeRangeList" />

	<!-- ** Complex type definition for TransferFunction ** -->
	<xs:element name="TransferFunction" />

	<!-- ** Complex type definition for XYPair ** -->
	<xs:element name="XYPair" />

	<!-- ** Complex type definition for XYPairRange ** -->
	<xs:element name="XYPairRange" />

	<!-- ** Complex type definition for XYPairRangeList ** -->
	<xs:element name="XYPairRangeList" />

	<!-- ** Complex type definition for EnumXYRelation ** -->
	<xs:element name="EnumXYRelation" />

	<!-- ** Complex type definition for Acknowledge ** -->
	<xs:element name="Acknowledge">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Notification" />
			</xs:sequence>
			<xs:attribute name="AcknowledgeType" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumAcknowledgeType" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="SenderID" type="shortString" use="optional" />
			<xs:attribute name="Version" type="EnumJDFJMFVersion" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="refID" type="NMTOKEN" use="optional" />
			<xs:attribute name="Time" type="dateTime" use="optional" />
			<xs:attribute name="ICSVersions" type="NMTOKENS" use="optional" />
			<xs:attribute name="Type" type="NMTOKEN" use="optional" />
			<xs:attribute name="ReturnCode" type="integer" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Added ** -->
	<xs:element name="Added" />

	<!-- ** Complex type definition for AuthenticationCmdParams ** -->
	<xs:element name="AuthenticationCmdParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Certificate" />
			</xs:sequence>
			<xs:attribute name="Reason" use="optional" />
			<xs:attribute name="URL" type="URL" use="optional" />
			<xs:attribute name="ReasonDetails" type="string" use="optional" />
			<xs:attribute name="AuthenticationType" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for AuthenticationQuParams ** -->
	<xs:element name="AuthenticationQuParams">
		<xs:complexType>
			<xs:attribute name="AuthenticationType" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for AuthenticationResp ** -->
	<xs:element name="AuthenticationResp">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Certificate" />
			</xs:sequence>
			<xs:attribute name="URL" type="URL" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Certificate ** -->
	<xs:element name="Certificate" />

	<!-- ** Complex type definition for ChangedPath ** -->
	<xs:element name="ChangedPath">
		<xs:complexType>
			<xs:attribute name="Path" type="XPath" use="optional" />
			<xs:attribute name="Modification" use="optional" />
			<xs:attribute name="OldValue" type="string" use="optional" />
			<xs:attribute name="NewValue" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Command ** -->
	<xs:element name="Command">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
			</xs:sequence>
			<xs:attribute name="AcknowledgeType" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumAcknowledgeType" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="SenderID" type="shortString" use="optional" />
			<xs:attribute name="Version" type="EnumJDFJMFVersion" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="AcknowledgeFormat" type="string" use="optional" />
			<xs:attribute name="Time" type="dateTime" use="optional" />
			<xs:attribute name="ICSVersions" type="NMTOKENS" use="optional" />
			<xs:attribute name="TransactionID" type="string" use="optional" />
			<xs:attribute name="AcknowledgeTemplate" type="string" use="optional" />
			<xs:attribute name="RelatedCommands" type="NMTOKENS" use="optional" />
			<xs:attribute name="Type" type="NMTOKEN" use="optional" />
			<xs:attribute name="AcknowledgeURL" type="URL" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ControllerFilter ** -->
	<xs:element name="ControllerFilter">
		<xs:complexType>
			<xs:attribute name="URLTypes" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumURLTypes" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="ControllerID" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DeviceFilter ** -->
	<xs:element name="DeviceFilter">
		<xs:complexType>
			<xs:attribute name="Localization" type="languages" use="optional" />
			<xs:attribute name="DeviceDetails" use="optional" />
			<xs:attribute name="DeviceRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DeviceInfo ** -->
	<xs:element name="DeviceInfo">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ModuleStatus" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="JobPhase" />
			</xs:sequence>
			<xs:attribute name="DeviceCondition" use="optional" />
			<xs:attribute name="DeviceStatus" type="EnumDeviceStatus" use="optional" />
			<xs:attribute name="StatusDetails" type="shortString" use="optional" />
			<xs:attribute name="DeviceOperationMode" use="optional" />
			<xs:attribute name="CounterUnit" type="string" use="optional" />
			<xs:attribute name="Speed" type="double" use="optional" />
			<xs:attribute name="IdleStartTime" type="dateTime" use="optional" />
			<xs:attribute name="HourCounter" type="duration" use="optional" />
			<xs:attribute name="PowerOnTime" type="dateTime" use="optional" />
			<xs:attribute name="TotalProductionCounter" type="double" use="optional" />
			<xs:attribute name="ProductionCounter" type="double" use="optional" />
			<xs:attribute name="DeviceID" type="string" use="optional" />
			<xs:attribute name="DeviceRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for EmployeeDef ** -->
	<xs:element name="EmployeeDef">
		<xs:complexType>
			<xs:attribute name="PersonalID" type="shortString" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for FlushedResources ** -->
	<xs:element name="FlushedResources" />

	<!-- ** Complex type definition for FlushQueueInfo ** -->
	<xs:element name="FlushQueueInfo">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="QueueFilter" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for FlushQueueParams ** -->
	<xs:element name="FlushQueueParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="QueueFilter" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for FlushResourceParams ** -->
	<xs:element name="FlushResourceParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="QueueFilter" />
			</xs:sequence>
			<xs:attribute name="FlushPolicy" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for GangCmdFilter ** -->
	<xs:element name="GangCmdFilter">
		<xs:complexType>
			<xs:attribute name="GangNames" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for GangInfo ** -->
	<xs:element name="GangInfo">
		<xs:complexType>
			<xs:attribute name="GangName" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for GangQuFilter ** -->
	<xs:element name="GangQuFilter">
		<xs:complexType>
			<xs:attribute name="GangNames" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for IDInfo ** -->
	<xs:element name="IDInfo">
		<xs:complexType>
			<xs:attribute name="ParentJobID" type="string" use="optional" />
			<xs:attribute name="ParentJobPartID" type="string" use="optional" />
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="Category" type="NMTOKEN" use="optional" />
			<xs:attribute name="Type" type="NMTOKEN" use="optional" />
			<xs:attribute name="Types" type="NMTOKENS" use="optional" />
			<xs:attribute name="DeviceRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for JDFController ** -->
	<xs:element name="JDFController">
		<xs:complexType>
			<xs:attribute name="URLType" use="optional" />
			<xs:attribute name="URL" type="URL" use="optional" />
			<xs:attribute name="ControllerID" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for JDFService ** -->
	<xs:element name="JDFService" />

	<!-- ** Complex type definition for JMF ** -->
	<xs:element name="JMF">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Acknowledge" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Response" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Query" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Signal" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Registration" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Command" />
			</xs:sequence>
			<xs:attribute name="SenderID" type="shortString" use="optional" />
			<xs:attribute name="Version" type="EnumJDFJMFVersion" use="optional" />
			<xs:attribute name="MaxVersion" use="optional" />
			<xs:attribute name="ICSVersions" type="NMTOKENS" use="optional" />
			<xs:attribute name="TimeStamp" type="dateTime" use="optional" />
			<xs:attribute name="ResponseURL" type="URL" use="optional" />
			<xs:attribute name="DeviceID" type="shortString" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for JobPhase ** -->
	<xs:element name="JobPhase">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ModuleStatus" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="MISDetails" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="CostCenter" />
			</xs:sequence>
			<xs:attribute name="PhaseAmount" type="double" use="optional" />
			<xs:attribute name="StatusDetails" type="shortString" use="optional" />
			<xs:attribute name="TotalAmount" type="double" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="PhaseStartTime" type="dateTime" use="optional" />
			<xs:attribute name="Speed" type="double" use="optional" />
			<xs:attribute name="Status" type="EnumNodeStatus" use="optional" />
			<xs:attribute name="Waste" type="double" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="Amount" type="double" use="optional" />
			<xs:attribute name="URL" type="URL" use="optional" />
			<xs:attribute name="StartTime" type="dateTime" use="optional" />
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="PhaseWaste" type="double" use="optional" />
			<xs:attribute name="DeadLine" use="optional" />
			<xs:attribute name="PercentCompleted" type="double" use="optional" />
			<xs:attribute name="RestTime" type="duration" use="optional" />
			<xs:attribute name="Activation" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for KnownMsgQuParams ** -->
	<xs:element name="KnownMsgQuParams">
		<xs:complexType>
			<xs:attribute name="Persistent" type="boolean" use="optional" />
			<xs:attribute name="ListSignals" type="boolean" use="optional" />
			<xs:attribute name="ListQueries" type="boolean" use="optional" />
			<xs:attribute name="ChannelMode" use="optional" />
			<xs:attribute name="ListRegistrations" type="boolean" use="optional" />
			<xs:attribute name="ListCommands" type="boolean" use="optional" />
			<xs:attribute name="Exact" type="boolean" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Message ** -->
	<xs:element name="Message">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
			</xs:sequence>
			<xs:attribute name="SenderID" type="shortString" use="optional" />
			<xs:attribute name="Version" type="EnumJDFJMFVersion" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="Time" type="dateTime" use="optional" />
			<xs:attribute name="ICSVersions" type="NMTOKENS" use="optional" />
			<xs:attribute name="Type" type="NMTOKEN" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for MessageService ** -->
	<xs:element name="MessageService">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ModulePool" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="TestPool" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ActionPool" />
			</xs:sequence>
			<xs:attribute name="Persistent" type="boolean" use="optional" />
			<xs:attribute name="ChannelMode" use="optional" />
			<xs:attribute name="GenericAttributes" type="NMTOKENS" use="optional" />
			<xs:attribute name="Acknowledge" type="boolean" use="optional" />
			<xs:attribute name="URLSchemes" type="NMTOKENS" use="optional" />
			<xs:attribute name="JMFRole" use="optional" />
			<xs:attribute name="Query" type="boolean" use="optional" />
			<xs:attribute name="Type" type="NMTOKEN" use="optional" />
			<xs:attribute name="Signal" type="boolean" use="optional" />
			<xs:attribute name="Registration" type="boolean" use="optional" />
			<xs:attribute name="Command" type="boolean" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ModifyNodeCmdParams ** -->
	<xs:element name="ModifyNodeCmdParams">
		<xs:complexType>
			<xs:attribute name="JobID" type="string" use="optional" />
			<xs:attribute name="JobPartID" type="string" use="optional" />
			<xs:attribute name="Activation" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for MsgFilter ** -->
	<xs:element name="MsgFilter">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
			</xs:sequence>
			<xs:attribute name="MessageType" type="NMTOKEN" use="optional" />
			<xs:attribute name="Family" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="MessageRefID" type="NMTOKEN" use="optional" />
			<xs:attribute name="MessageID" type="NMTOKEN" use="optional" />
			<xs:attribute name="After" type="dateTime" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="Before" type="dateTime" use="optional" />
			<xs:attribute name="ReceiverURL" type="URL" use="optional" />
			<xs:attribute name="DeviceID" type="shortString" use="optional" />
			<xs:attribute name="Count" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for NewJDFCmdParams ** -->
	<xs:element name="NewJDFCmdParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="IDInfo" />
			</xs:sequence>
			<xs:attribute name="JDFDetails" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for NewJDFQuParams ** -->
	<xs:element name="NewJDFQuParams">
		<xs:complexType>
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for NodeInfoCmdParams ** -->
	<xs:element name="NodeInfoCmdParams" />

	<!-- ** Complex type definition for NodeInfoQuParams ** -->
	<xs:element name="NodeInfoQuParams" />

	<!-- ** Complex type definition for NodeInfoResp ** -->
	<xs:element name="NodeInfoResp" />

	<!-- ** Complex type definition for NotificationDef ** -->
	<xs:element name="NotificationDef">
		<xs:complexType>
			<xs:attribute name="SignalType" type="NMTOKEN" use="optional" />
			<xs:attribute name="Type" type="NMTOKEN" use="optional" />
			<xs:attribute name="Classes" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumClasses" />
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Occupation ** -->
	<xs:element name="Occupation">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
			</xs:sequence>
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="Busy" type="double" use="optional" />
			<xs:attribute name="DeviceRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PipeParams ** -->
	<xs:element name="PipeParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Resource" />
			</xs:sequence>
			<xs:attribute name="PipeID" type="shortString" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="UpdatedStatus" type="EnumResStatus" use="optional" />
			<xs:attribute name="Status" type="EnumNodeStatus" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Query ** -->
	<xs:element name="Query">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Subscription" />
			</xs:sequence>
			<xs:attribute name="AcknowledgeType" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumAcknowledgeType" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="SenderID" type="shortString" use="optional" />
			<xs:attribute name="Version" type="EnumJDFJMFVersion" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="AcknowledgeFormat" type="string" use="optional" />
			<xs:attribute name="Time" type="dateTime" use="optional" />
			<xs:attribute name="ICSVersions" type="NMTOKENS" use="optional" />
			<xs:attribute name="AcknowledgeTemplate" type="string" use="optional" />
			<xs:attribute name="Type" type="NMTOKEN" use="optional" />
			<xs:attribute name="AcknowledgeURL" type="URL" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Queue ** -->
	<xs:element name="Queue">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="QueueEntry" />
			</xs:sequence>
			<xs:attribute name="DeviceID" type="shortString" use="optional" />
			<xs:attribute name="QueueSize" type="integer" use="optional" />
			<xs:attribute name="Status" use="optional" />
			<xs:attribute name="DeviceRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for QueueEntry ** -->
	<xs:element name="QueueEntry">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="JobPhase" />
			</xs:sequence>
			<xs:attribute name="GangName" type="NMTOKEN" use="optional" />
			<xs:attribute name="StartTime" type="dateTime" use="optional" />
			<xs:attribute name="EndTime" type="dateTime" use="optional" />
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="SubmissionTime" type="dateTime" use="optional" />
			<xs:attribute name="Status" use="optional" />
			<xs:attribute name="Priority" type="integer" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="DeviceID" type="shortString" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for QueueEntryDef ** -->
	<xs:element name="QueueEntryDef">
		<xs:complexType>
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for QueueEntryPosParams ** -->
	<xs:element name="QueueEntryPosParams">
		<xs:complexType>
			<xs:attribute name="PrevQueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="Position" type="integer" use="optional" />
			<xs:attribute name="NextQueueEntryID" type="shortString" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for QueueEntryPriParams ** -->
	<xs:element name="QueueEntryPriParams">
		<xs:complexType>
			<xs:attribute name="Priority" type="integer" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for QueueFilter ** -->
	<xs:element name="QueueFilter">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="QueueEntryDef" />
			</xs:sequence>
			<xs:attribute name="OlderThan" type="dateTime" use="optional" />
			<xs:attribute name="UpgradeGranularity" use="optional" />
			<xs:attribute name="MaxEntries" type="integer" use="optional" />
			<xs:attribute name="JobPartID" type="string" use="optional" />
			<xs:attribute name="JobID" type="string" use="optional" />
			<xs:attribute name="PreviewUsages" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPreviewUsages" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="NewerThan" type="dateTime" use="optional" />
			<xs:attribute name="GangNames" type="NMTOKENS" use="optional" />
			<xs:attribute name="QueueEntryDetails" use="optional" />
			<xs:attribute name="StatusList" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumStatusList" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="DeviceRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for QueueSubmissionParams ** -->
	<xs:element name="QueueSubmissionParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Disposition" />
			</xs:sequence>
			<xs:attribute name="ReturnURL" type="URL" use="optional" />
			<xs:attribute name="WatchURL" type="URL" use="optional" />
			<xs:attribute name="PrevQueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="URL" type="URL" use="optional" />
			<xs:attribute name="GangName" type="NMTOKEN" use="optional" />
			<xs:attribute name="ReturnJMF" type="URL" use="optional" />
			<xs:attribute name="refID" type="NMTOKEN" use="optional" />
			<xs:attribute name="NextQueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="GangPolicy" use="optional" />
			<xs:attribute name="Priority" type="integer" use="optional" />
			<xs:attribute name="Hold" type="boolean" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Registration ** -->
	<xs:element name="Registration">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Subscription" />
			</xs:sequence>
			<xs:attribute name="SenderID" type="shortString" use="optional" />
			<xs:attribute name="Version" type="EnumJDFJMFVersion" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="Time" type="dateTime" use="optional" />
			<xs:attribute name="ICSVersions" type="NMTOKENS" use="optional" />
			<xs:attribute name="Type" type="NMTOKEN" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for RemoveLink ** -->
	<xs:element name="RemoveLink">
		<xs:complexType>
			<xs:attribute name="ParentJobID" type="string" use="optional" />
			<xs:attribute name="ParentJobPartID" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for RequestQueueEntryParams ** -->
	<xs:element name="RequestQueueEntryParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Queue" />
			</xs:sequence>
			<xs:attribute name="SubmitPolicy" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="QueueURL" type="URL" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ResourceCmdParams ** -->
	<xs:element name="ResourceCmdParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="MISDetails" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Resource" />
			</xs:sequence>
			<xs:attribute name="UpdateMethod" use="optional" />
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="ProductionAmount" type="double" use="optional" />
			<xs:attribute name="UpdateIDs" type="NMTOKENS" use="optional" />
			<xs:attribute name="Status" type="EnumResStatus" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="ResourceName" type="NMTOKEN" use="optional" />
			<xs:attribute name="ProductID" type="shortString" use="optional" />
			<xs:attribute name="ResourceID" type="NMTOKEN" use="optional" />
			<xs:attribute name="ProcessUsage" type="NMTOKEN" use="optional" />
			<xs:attribute name="Exact" type="boolean" use="optional" />
			<xs:attribute name="Activation" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ResourceInfo ** -->
	<xs:element name="ResourceInfo">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Lot" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="MISDetails" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="CostCenter" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Resource" />
			</xs:sequence>
			<xs:attribute name="Level" use="optional" />
			<xs:attribute name="CommandResult" use="optional" />
			<xs:attribute name="Status" type="EnumResStatus" use="optional" />
			<xs:attribute name="Usage" use="optional" />
			<xs:attribute name="Unit" type="string" use="optional" />
			<xs:attribute name="ModuleID" type="string" use="optional" />
			<xs:attribute name="ResourceName" type="NMTOKEN" use="optional" />
			<xs:attribute name="Location" type="string" use="optional" />
			<xs:attribute name="ActualAmount" type="double" use="optional" />
			<xs:attribute name="ProductID" type="shortString" use="optional" />
			<xs:attribute name="ResourceID" type="NMTOKEN" use="optional" />
			<xs:attribute name="AvailableAmount" type="double" use="optional" />
			<xs:attribute name="LotControlled" type="boolean" use="optional" />
			<xs:attribute name="Amount" type="double" use="optional" />
			<xs:attribute name="ModuleIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="ProcessUsage" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ResourcePullParams ** -->
	<xs:element name="ResourcePullParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Disposition" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="MISDetails" />
			</xs:sequence>
			<xs:attribute name="ReturnURL" type="URL" use="optional" />
			<xs:attribute name="WatchURL" type="URL" use="optional" />
			<xs:attribute name="PrevQueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="NextQueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="Priority" type="integer" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="RepeatPolicy" use="optional" />
			<xs:attribute name="ResourceID" type="shortString" use="optional" />
			<xs:attribute name="Amount" type="double" use="optional" />
			<xs:attribute name="Hold" type="boolean" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ResourceQuParams ** -->
	<xs:element name="ResourceQuParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
			</xs:sequence>
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="LotDetails" use="optional" />
			<xs:attribute name="Usage" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="LotID" type="string" use="optional" />
			<xs:attribute name="ResourceName" type="NMTOKENS" use="optional" />
			<xs:attribute name="Location" type="string" use="optional" />
			<xs:attribute name="ProductID" type="shortString" use="optional" />
			<xs:attribute name="ResourceID" type="NMTOKEN" use="optional" />
			<xs:attribute name="Classes" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumClasses" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="ResourceDetails" use="optional" />
			<xs:attribute name="Exact" type="boolean" use="optional" />
			<xs:attribute name="ProcessUsage" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Response ** -->
	<xs:element name="Response">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Notification" />
			</xs:sequence>
			<xs:attribute name="Acknowledged" type="boolean" use="optional" />
			<xs:attribute name="SenderID" type="shortString" use="optional" />
			<xs:attribute name="Version" type="EnumJDFJMFVersion" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="refID" type="NMTOKEN" use="optional" />
			<xs:attribute name="Time" type="dateTime" use="optional" />
			<xs:attribute name="ICSVersions" type="NMTOKENS" use="optional" />
			<xs:attribute name="Type" type="NMTOKEN" use="optional" />
			<xs:attribute name="ReturnCode" type="integer" use="optional" />
			<xs:attribute name="Subscribed" type="boolean" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ResubmissionParams ** -->
	<xs:element name="ResubmissionParams">
		<xs:complexType>
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="URL" type="URL" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ReturnQueueEntryParams ** -->
	<xs:element name="ReturnQueueEntryParams">
		<xs:complexType>
			<xs:attribute name="Priority" type="integer" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="URL" type="URL" use="optional" />
			<xs:attribute name="Aborted" type="NMTOKENS" use="optional" />
			<xs:attribute name="Completed" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ShutDownCmdParams ** -->
	<xs:element name="ShutDownCmdParams">
		<xs:complexType>
			<xs:attribute name="ShutDownType" use="optional" />
			<xs:attribute name="FlushQueueParamsRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Signal ** -->
	<xs:element name="Signal">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Trigger" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Notification" />
			</xs:sequence>
			<xs:attribute name="SenderID" type="shortString" use="optional" />
			<xs:attribute name="Version" type="EnumJDFJMFVersion" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="refID" type="NMTOKEN" use="optional" />
			<xs:attribute name="Time" type="dateTime" use="optional" />
			<xs:attribute name="ICSVersions" type="NMTOKENS" use="optional" />
			<xs:attribute name="ChannelMode" use="optional" />
			<xs:attribute name="Type" type="NMTOKEN" use="optional" />
			<xs:attribute name="LastRepeat" type="boolean" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for StatusQuParams ** -->
	<xs:element name="StatusQuParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
			</xs:sequence>
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="DeviceDetails" use="optional" />
			<xs:attribute name="JobDetails" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="EmployeeInfo" type="boolean" use="optional" />
			<xs:attribute name="QueueInfo" type="boolean" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for StopPersChParams ** -->
	<xs:element name="StopPersChParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
			</xs:sequence>
			<xs:attribute name="MessageType" type="NMTOKEN" use="optional" />
			<xs:attribute name="URL" type="URL" use="optional" />
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="ChannelID" type="NMTOKEN" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="DeviceID" type="shortString" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for SubmissionMethods ** -->
	<xs:element name="SubmissionMethods">
		<xs:complexType>
			<xs:attribute name="Packaging" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPackaging" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="URLSchemes" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Subscription ** -->
	<xs:element name="Subscription">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ObservationTarget" />
			</xs:sequence>
			<xs:attribute name="URL" type="URL" use="optional" />
			<xs:attribute name="RepeatStep" type="integer" use="optional" />
			<xs:attribute name="RepeatTime" type="double" use="optional" />
			<xs:attribute name="ChannelMode" use="optional" />
			<xs:attribute name="RetryPolicy" use="optional" />
			<xs:attribute name="MinDelayTime" type="duration" use="optional" />
			<xs:attribute name="Format" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for SubscriptionFilter ** -->
	<xs:element name="SubscriptionFilter">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
			</xs:sequence>
			<xs:attribute name="MessageTypes" type="NMTOKENS" use="optional" />
			<xs:attribute name="URL" type="URL" use="optional" />
			<xs:attribute name="JobPartID" type="string" use="optional" />
			<xs:attribute name="JobID" type="string" use="optional" />
			<xs:attribute name="ChannelID" type="NMTOKEN" use="optional" />
			<xs:attribute name="QueueEntryID" type="string" use="optional" />
			<xs:attribute name="DeviceID" type="string" use="optional" />
			<xs:attribute name="Families" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for SubscriptionInfo ** -->
	<xs:element name="SubscriptionInfo">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Subscription" />
			</xs:sequence>
			<xs:attribute name="MessageType" type="NMTOKEN" use="optional" />
			<xs:attribute name="SenderID" type="string" use="optional" />
			<xs:attribute name="Family" type="NMTOKEN" use="optional" />
			<xs:attribute name="JobPartID" type="string" use="optional" />
			<xs:attribute name="JobID" type="string" use="optional" />
			<xs:attribute name="ChannelID" type="NMTOKEN" use="optional" />
			<xs:attribute name="QueueEntryID" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for TrackFilter ** -->
	<xs:element name="TrackFilter">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
			</xs:sequence>
			<xs:attribute name="ProjectID" type="shortString" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="Status" type="EnumNodeStatus" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for TrackResult ** -->
	<xs:element name="TrackResult">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
			</xs:sequence>
			<xs:attribute name="ProjectID" type="shortString" use="optional" />
			<xs:attribute name="URL" type="URL" use="optional" />
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="IsDevice" type="boolean" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Trigger ** -->
	<xs:element name="Trigger" type="Trigger" substitutionGroup="ParameterType" />
	<xs:complexType name="Trigger">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ChangedPath" />
				</xs:sequence>
				<xs:attribute name="RepeatTime" type="double" use="optional" />
				<xs:attribute name="RepeatStep" type="integer" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for WakeUpCmdParams ** -->
	<xs:element name="WakeUpCmdParams" />

	<!-- ** Complex type definition for AuditPool ** -->
	<xs:element name="AuditPool">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Notification" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ResourceAudit" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Modified" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Created" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PhaseTime" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ProcessRun" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Deleted" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Pool ** -->
	<xs:element name="Pool" />

	<!-- ** Complex type definition for PreflightConstraintsPool ** -->
	<xs:element name="PreflightConstraintsPool" />

	<!-- ** Complex type definition for PreflightResultsPool ** -->
	<xs:element name="PreflightResultsPool" />

	<!-- ** Complex type definition for StatusPool ** -->
	<xs:element name="StatusPool" />

	<!-- ** Complex type definition for AdhesiveBindingParams ** -->
	<xs:element name="AdhesiveBindingParams" type="AdhesiveBindingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="AdhesiveBindingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="CoverApplicationParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="SpineTapingParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="SpinePreparationParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Band ** -->
	<xs:element name="Band">
		<xs:complexType>
			<xs:attribute name="Mask" type="URL" use="optional" />
			<xs:attribute name="Width" type="integer" use="optional" />
			<xs:attribute name="Height" type="integer" use="optional" />
			<xs:attribute name="WasMarked" type="boolean" use="optional" />
			<xs:attribute name="Data" type="URL" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Barcode ** -->
	<xs:element name="Barcode">
		<xs:complexType>
			<xs:attribute name="Code" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for BindList ** -->
	<xs:element name="BindList" />

	<!-- ** Complex type definition for BlockPreparationParams ** -->
	<xs:element name="BlockPreparationParams" type="BlockPreparationParams" substitutionGroup="ParameterType" />
	<xs:complexType name="BlockPreparationParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="RegisterRibbon" />
				</xs:sequence>
				<xs:attribute name="Rounding" type="double" use="optional" />
				<xs:attribute name="Backing" type="double" use="optional" />
				<xs:attribute name="TightBacking" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for BoxPackingParams ** -->
	<xs:element name="BoxPackingParams" type="BoxPackingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="BoxPackingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="MaxWeight" type="double" use="optional" />
				<xs:attribute name="Pattern" type="string" use="optional" />
				<xs:attribute name="Layers" type="integer" use="optional" />
				<xs:attribute name="Ties" type="IntegerList" use="optional" />
				<xs:attribute name="FillMaterial" type="NMTOKEN" use="optional" />
				<xs:attribute name="UnderLays" type="IntegerList" use="optional" />
				<xs:attribute name="ComponentsPerRow" type="integer" use="optional" />
				<xs:attribute name="ComponentOrientation" use="optional" />
				<xs:attribute name="Copies" type="integer" use="optional" />
				<xs:attribute name="Rows" type="integer" use="optional" />
				<xs:attribute name="Columns" type="integer" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for BufferParams ** -->
	<xs:element name="BufferParams" type="BufferParams" substitutionGroup="ParameterType" />
	<xs:complexType name="BufferParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="MinimumWait" type="duration" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Bundle ** -->
	<xs:element name="Bundle" type="Bundle" substitutionGroup="ResourceType" />
	<xs:complexType name="Bundle">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BundleItem" />
				</xs:sequence>
				<xs:attribute name="TotalAmount" type="integer" use="optional" />
				<xs:attribute name="BundleType" use="optional" />
				<xs:attribute name="FolioCount" type="integer" use="optional" />
				<xs:attribute name="ReaderPageCount" type="integer" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for BundleItem ** -->
	<xs:element name="BundleItem">
		<xs:complexType>
			<xs:attribute name="ItemName" type="NMTOKEN" use="optional" />
			<xs:attribute name="Orientation" type="EnumOrientation" use="optional" />
			<xs:attribute name="Amount" type="integer" use="optional" />
			<xs:attribute name="Transformation" type="matrix" use="optional" />
			<xs:attribute name="ComponentRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for CaseMakingParams ** -->
	<xs:element name="CaseMakingParams" type="CaseMakingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="CaseMakingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueLine" />
				</xs:sequence>
				<xs:attribute name="TopFoldIn" type="double" use="optional" />
				<xs:attribute name="FrontFoldIn" type="double" use="optional" />
				<xs:attribute name="Height" type="double" use="optional" />
				<xs:attribute name="JointWidth" type="double" use="optional" />
				<xs:attribute name="SpineWidth" type="double" use="optional" />
				<xs:attribute name="BottomFoldIn" type="double" use="optional" />
				<xs:attribute name="CornerType" type="NMTOKEN" use="optional" />
				<xs:attribute name="CoverWidth" type="double" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for CasingInParams ** -->
	<xs:element name="CasingInParams" type="CasingInParams" substitutionGroup="ParameterType" />
	<xs:complexType name="CasingInParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueApplication" />
				</xs:sequence>
				<xs:attribute name="CaseRadius" type="double" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ChangedAttribute ** -->
	<xs:element name="ChangedAttribute">
		<xs:complexType>
			<xs:attribute name="OldValue" type="string" use="optional" />
			<xs:attribute name="AttributeName" type="NMTOKEN" use="optional" />
			<xs:attribute name="NewValue" type="string" use="optional" />
			<xs:attribute name="ElementType" type="NMTOKEN" use="optional" />
			<xs:attribute name="ElementID" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for CoilBindingParams ** -->
	<xs:element name="CoilBindingParams" type="CoilBindingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="CoilBindingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="ColorDetails" type="string" use="optional" />
				<xs:attribute name="Tucked" type="boolean" use="optional" />
				<xs:attribute name="Color" type="string" use="optional" />
				<xs:attribute name="Diameter" type="double" use="optional" />
				<xs:attribute name="Thickness" type="double" use="optional" />
				<xs:attribute name="Material" use="optional" />
				<xs:attribute name="HoleMakingParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ColorMeasurementConditions ** -->
	<xs:element name="ColorMeasurementConditions" type="ColorMeasurementConditions" substitutionGroup="ParameterType" />
	<xs:complexType name="ColorMeasurementConditions">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Illumination" use="optional" />
				<xs:attribute name="WhiteBase" use="optional" />
				<xs:attribute name="DensityStandard" use="optional" />
				<xs:attribute name="Observer" type="integer" use="optional" />
				<xs:attribute name="InkState" use="optional" />
				<xs:attribute name="SampleBacking" use="optional" />
				<xs:attribute name="Instrumentation" type="string" use="optional" />
				<xs:attribute name="MeasurementFilter" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ContactCopyParams ** -->
	<xs:element name="ContactCopyParams" type="ContactCopyParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ContactCopyParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="ContactScreen" type="boolean" use="optional" />
				<xs:attribute name="Cycle" type="integer" use="optional" />
				<xs:attribute name="PolarityChange" type="boolean" use="optional" />
				<xs:attribute name="Vacuum" type="double" use="optional" />
				<xs:attribute name="Diffusion" use="optional" />
				<xs:attribute name="RepeatStep" type="XYPair" use="optional" />
				<xs:attribute name="ScreeningParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for CounterReset ** -->
	<xs:element name="CounterReset">
		<xs:complexType>
			<xs:attribute name="LastCount" type="integer" use="optional" />
			<xs:attribute name="CounterID" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for CoverApplicationParams ** -->
	<xs:element name="CoverApplicationParams" type="CoverApplicationParams" substitutionGroup="ParameterType" />
	<xs:complexType name="CoverApplicationParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Score" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueApplication" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for CreasingParams ** -->
	<xs:element name="CreasingParams" type="CreasingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="CreasingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Crease" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Created ** -->
	<xs:element name="Created">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
			</xs:sequence>
			<xs:attribute name="XPath" type="XPath" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="refID" type="IDREF" use="optional" />
			<xs:attribute name="ref" type="IDREF" use="optional" />
			<xs:attribute name="TemplateVersion" type="string" use="optional" />
			<xs:attribute name="TimeStamp" type="dateTime" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="TemplateID" type="shortString" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for CreditCard ** -->
	<xs:element name="CreditCard" />

	<!-- ** Complex type definition for CuttingParams ** -->
	<xs:element name="CuttingParams" type="CuttingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="CuttingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="CutBlock" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Cut" />
				</xs:sequence>
				<xs:attribute name="NUpSeparation" type="XYPair" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for DBSchema ** -->
	<xs:element name="DBSchema" type="DBSchema" substitutionGroup="ParameterType" />
	<xs:complexType name="DBSchema">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="DBSchemaType" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Deleted ** -->
	<xs:element name="Deleted">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
			</xs:sequence>
			<xs:attribute name="XPath" type="XPath" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="refID" type="IDREF" use="optional" />
			<xs:attribute name="TimeStamp" type="dateTime" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DevelopingParams ** -->
	<xs:element name="DevelopingParams" type="DevelopingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="DevelopingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="PostBakeTime" type="duration" use="optional" />
				<xs:attribute name="PostExposeTime" type="duration" use="optional" />
				<xs:attribute name="PreHeatTime" type="duration" use="optional" />
				<xs:attribute name="PostBakeTemp" type="double" use="optional" />
				<xs:attribute name="PreHeatTemp" type="double" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Device ** -->
	<xs:element name="Device" type="Device" substitutionGroup="ResourceType" />
	<xs:complexType name="Device">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Module" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="DeviceCap" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="CostCenter" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="IconList" />
				</xs:sequence>
				<xs:attribute name="Directory" type="URL" use="optional" />
				<xs:attribute name="ModelName" type="string" use="optional" />
				<xs:attribute name="ICSVersions" type="NMTOKENS" use="optional" />
				<xs:attribute name="JDFErrorURL" type="URL" use="optional" />
				<xs:attribute name="JMFSenderID" type="shortString" use="optional" />
				<xs:attribute name="ModelURL" type="string" use="optional" />
				<xs:attribute name="JDFVersions" type="string" use="optional" />
				<xs:attribute name="ModelNumber" type="string" use="optional" />
				<xs:attribute name="KnownLocalizations" type="languages" use="optional" />
				<xs:attribute name="JDFInputURL" type="URL" use="optional" />
				<xs:attribute name="DeviceID" type="string" use="optional" />
				<xs:attribute name="JMFURL" type="URL" use="optional" />
				<xs:attribute name="ManufacturerURL" type="string" use="optional" />
				<xs:attribute name="JDFOutputURL" type="URL" use="optional" />
				<xs:attribute name="SecureJMFURL" type="URL" use="optional" />
				<xs:attribute name="UPC" type="string" use="optional" />
				<xs:attribute name="PresentationURL" type="string" use="optional" />
				<xs:attribute name="SerialNumber" type="string" use="optional" />
				<xs:attribute name="ModelDescription" type="string" use="optional" />
				<xs:attribute name="DeviceType" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for DeviceList ** -->
	<xs:element name="DeviceList">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="DeviceInfo" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DeviceMark ** -->
	<xs:element name="DeviceMark" type="DeviceMark" substitutionGroup="ParameterType" />
	<xs:complexType name="DeviceMark">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Anchor" type="EnumAnchor" use="optional" />
				<xs:attribute name="MarkOrientation" use="optional" />
				<xs:attribute name="HorizontalFitPolicy" use="optional" />
				<xs:attribute name="Font" type="NMTOKEN" use="optional" />
				<xs:attribute name="VerticalFitPolicy" use="optional" />
				<xs:attribute name="FontSize" type="double" use="optional" />
				<xs:attribute name="BarcodeReproParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for EdgeGluing ** -->
	<xs:element name="EdgeGluing">
		<xs:complexType>
			<xs:attribute name="EdgeGlue" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Emboss ** -->
	<xs:element name="Emboss">
		<xs:complexType>
			<xs:attribute name="Level" use="optional" />
			<xs:attribute name="Position" type="XYPair" use="optional" />
			<xs:attribute name="ImageSize" type="XYPair" use="optional" />
			<xs:attribute name="Direction" use="optional" />
			<xs:attribute name="Height" type="double" use="optional" />
			<xs:attribute name="EmbossingType" use="optional" />
			<xs:attribute name="EdgeAngle" type="double" use="optional" />
			<xs:attribute name="EdgeShape" use="optional" />
			<xs:attribute name="MediaRef" type="IDREF" use="optional" />
			<xs:attribute name="ToolRef" type="IDREF" use="optional" />
			<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for EmbossingItem ** -->
	<xs:element name="EmbossingItem">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Position" />
			</xs:sequence>
			<xs:attribute name="Direction" use="optional" />
			<xs:attribute name="EdgeShape" use="optional" />
			<xs:attribute name="EdgeAngle" type="double" use="optional" />
			<xs:attribute name="EmbossingType" type="string" use="optional" />
			<xs:attribute name="Height" type="double" use="optional" />
			<xs:attribute name="ImageSize" type="XYPair" use="optional" />
			<xs:attribute name="FoilColorDetails" type="string" use="optional" />
			<xs:attribute name="FoilColor" type="EnumNamedColor" use="optional" />
			<xs:attribute name="Level" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for EmbossingParams ** -->
	<xs:element name="EmbossingParams" type="EmbossingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="EmbossingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Emboss" />
				</xs:sequence>
				<xs:attribute name="ModuleIndex" type="integer" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for EndSheetGluingParams ** -->
	<xs:element name="EndSheetGluingParams" type="EndSheetGluingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="EndSheetGluingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="EndSheet" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Error ** -->
	<xs:element name="Error">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ErrorData" />
			</xs:sequence>
			<xs:attribute name="ErrorID" type="string" use="optional" />
			<xs:attribute name="Resend" use="optional" />
			<xs:attribute name="ReturnCode" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ErrorData ** -->
	<xs:element name="ErrorData">
		<xs:complexType>
			<xs:attribute name="Path" type="XPath" use="optional" />
			<xs:attribute name="FixExpression" type="Any" use="optional" />
			<xs:attribute name="ErrorURL" type="URI" use="optional" />
			<xs:attribute name="ErrorType" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Event ** -->
	<xs:element name="Event">
		<xs:complexType>
			<xs:attribute name="EventID" type="string" use="optional" />
			<xs:attribute name="EventValue" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for FCNKey ** -->
	<xs:element name="FCNKey">
		<xs:complexType>
			<xs:attribute name="Key" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for FitPolicy ** -->
	<xs:element name="FitPolicy" type="FitPolicy" substitutionGroup="ParameterType" />
	<xs:complexType name="FitPolicy">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="GutterPolicy" use="optional" />
				<xs:attribute name="RotatePolicy" use="optional" />
				<xs:attribute name="SizePolicy" use="optional" />
				<xs:attribute name="ClipOffset" type="XYPair" use="optional" />
				<xs:attribute name="MinGutter" type="XYPair" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for FormatConversionParams ** -->
	<xs:element name="FormatConversionParams" type="FormatConversionParams" substitutionGroup="ParameterType" />
	<xs:complexType name="FormatConversionParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="TIFFFormatParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="ImageCompressionParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
				<xs:attribute name="ColorRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for GatheringParams ** -->
	<xs:element name="GatheringParams" type="GatheringParams" substitutionGroup="ParameterType" />
	<xs:complexType name="GatheringParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Disjointing" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for GluingParams ** -->
	<xs:element name="GluingParams" type="GluingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="GluingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Glue" />
				</xs:sequence>
				<xs:attribute name="GluingProductionID" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for HardCoverBinding ** -->
	<xs:element name="HardCoverBinding">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="RegisterRibbon" />
			</xs:sequence>
			<xs:attribute name="TightBacking" use="optional" />
			<xs:attribute name="HeadBandColor" type="EnumNamedColor" use="optional" />
			<xs:attribute name="HeadBandColorDetails" type="string" use="optional" />
			<xs:attribute name="Thickness" type="double" use="optional" />
			<xs:attribute name="JapanBind" type="boolean" use="optional" />
			<xs:attribute name="SpineLevelling" type="boolean" use="optional" />
			<xs:attribute name="SpineSanding" type="boolean" use="optional" />
			<xs:attribute name="Jacket" use="optional" />
			<xs:attribute name="SpineFiberRoughing" type="boolean" use="optional" />
			<xs:attribute name="CoverStyle" type="NMTOKEN" use="optional" />
			<xs:attribute name="HeadBands" type="boolean" use="optional" />
			<xs:attribute name="SpineNotching" type="boolean" use="optional" />
			<xs:attribute name="SpineBrushing" type="boolean" use="optional" />
			<xs:attribute name="EndSheets" type="boolean" use="optional" />
			<xs:attribute name="StripMaterial" use="optional" />
			<xs:attribute name="BlockThreadSewing" type="boolean" use="optional" />
			<xs:attribute name="JacketFoldingWidth" type="double" use="optional" />
			<xs:attribute name="SpineGlue" use="optional" />
			<xs:attribute name="SpineShredding" type="boolean" use="optional" />
			<xs:attribute name="SpineMilling" type="boolean" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for HeadBandApplicationParams ** -->
	<xs:element name="HeadBandApplicationParams" type="HeadBandApplicationParams" substitutionGroup="ParameterType" />
	<xs:complexType name="HeadBandApplicationParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueLine" />
				</xs:sequence>
				<xs:attribute name="BottomColor" type="string" use="optional" />
				<xs:attribute name="BottomColorDetails" type="string" use="optional" />
				<xs:attribute name="TopColor" type="string" use="optional" />
				<xs:attribute name="TopBrand" type="string" use="optional" />
				<xs:attribute name="Width" type="double" use="optional" />
				<xs:attribute name="StripMaterial" use="optional" />
				<xs:attribute name="BottomLength" type="double" use="optional" />
				<xs:attribute name="TopColorDetails" type="string" use="optional" />
				<xs:attribute name="BottomBrand" type="string" use="optional" />
				<xs:attribute name="TopLength" type="double" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for HoleLine ** -->
	<xs:element name="HoleLine" type="HoleLine" substitutionGroup="ParameterType" />
	<xs:complexType name="HoleLine">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Hole" />
				</xs:sequence>
				<xs:attribute name="Pitch" type="double" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Icon ** -->
	<xs:element name="Icon">
		<xs:complexType>
			<xs:attribute name="Size" type="XYPair" use="optional" />
			<xs:attribute name="BitDepth" type="integer" use="optional" />
			<xs:attribute name="IconUsage" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumIconUsage" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for IconList ** -->
	<xs:element name="IconList">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Icon" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ImageCompression ** -->
	<xs:element name="ImageCompression">
		<xs:complexType>
			<xs:attribute name="ImageDownsampleType" use="optional" />
			<xs:attribute name="ConvertImagesToIndexed" type="boolean" use="optional" />
			<xs:attribute name="AntiAliasImages" type="boolean" use="optional" />
			<xs:attribute name="ImageDownsampleThreshold" type="double" use="optional" />
			<xs:attribute name="ImageFilter" type="NMTOKEN" use="optional" />
			<xs:attribute name="ImageResolution" type="double" use="optional" />
			<xs:attribute name="ImageAutoFilterStrategy" type="NMTOKEN" use="optional" />
			<xs:attribute name="DownsampleImages" type="boolean" use="optional" />
			<xs:attribute name="AutoFilterImages" type="boolean" use="optional" />
			<xs:attribute name="JPXQuality" type="integer" use="optional" />
			<xs:attribute name="EncodeImages" type="boolean" use="optional" />
			<xs:attribute name="DCTQuality" type="double" use="optional" />
			<xs:attribute name="ImageDepth" type="integer" use="optional" />
			<xs:attribute name="ImageType" use="optional" />
			<xs:attribute name="JBIG2ParamsRef" type="IDREF" use="optional" />
			<xs:attribute name="DCTParamsRef" type="IDREF" use="optional" />
			<xs:attribute name="CCITTFaxParamsRef" type="IDREF" use="optional" />
			<xs:attribute name="LZWParamsRef" type="IDREF" use="optional" />
			<xs:attribute name="JPEG2000ParamsRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ImageShift ** -->
	<xs:element name="ImageShift">
		<xs:complexType>
			<xs:attribute name="PositionX" use="optional" />
			<xs:attribute name="ShiftBack" type="XYPair" use="optional" />
			<xs:attribute name="ShiftFront" type="XYPair" use="optional" />
			<xs:attribute name="PositionY" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Insert ** -->
	<xs:element name="Insert">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueLine" />
			</xs:sequence>
			<xs:attribute name="WrapPages" type="IntegerRangeList" use="optional" />
			<xs:attribute name="Folio" type="IntegerRangeList" use="optional" />
			<xs:attribute name="Transformation" type="matrix" use="optional" />
			<xs:attribute name="GlueType" use="optional" />
			<xs:attribute name="Method" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for InsertingParams ** -->
	<xs:element name="InsertingParams" type="InsertingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="InsertingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueLine" />
				</xs:sequence>
				<xs:attribute name="InsertLocation" use="optional" />
				<xs:attribute name="FinishedPage" type="integer" use="optional" />
				<xs:attribute name="Method" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for InsertList ** -->
	<xs:element name="InsertList">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Insert" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for InterpretingParams ** -->
	<xs:element name="InterpretingParams" type="InterpretingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="InterpretingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="FitPolicy" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ObjectResolution" />
				</xs:sequence>
				<xs:attribute name="Scaling" type="XYPair" use="optional" />
				<xs:attribute name="Polarity" use="optional" />
				<xs:attribute name="ScalingOrigin" type="XYPair" use="optional" />
				<xs:attribute name="MirrorAround" use="optional" />
				<xs:attribute name="PrintQuality" use="optional" />
				<xs:attribute name="Center" type="boolean" use="optional" />
				<xs:attribute name="PosterOverlap" type="XYPair" use="optional" />
				<xs:attribute name="Poster" type="XYPair" use="optional" />
				<xs:attribute name="PDFInterpretingParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="MediaRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for JacketingParams ** -->
	<xs:element name="JacketingParams" type="JacketingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="JacketingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="FoldingWidth" type="double" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for JobField ** -->
	<xs:element name="JobField" type="JobField" substitutionGroup="ParameterType" />
	<xs:complexType name="JobField">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="ShowList" type="NMTOKENS" use="optional" />
				<xs:attribute name="JobFormat" type="string" use="optional" />
				<xs:attribute name="JobTemplate" type="string" use="optional" />
				<xs:attribute name="OperatorText" type="string" use="optional" />
				<xs:attribute name="UserText" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for JobSheet ** -->
	<xs:element name="JobSheet">
		<xs:complexType>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for LabelingParams ** -->
	<xs:element name="LabelingParams" type="LabelingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="LabelingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="CTM" type="matrix" use="optional" />
				<xs:attribute name="Position" use="optional" />
				<xs:attribute name="Application" type="NMTOKEN" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for LaminatingParams ** -->
	<xs:element name="LaminatingParams" type="LaminatingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="LaminatingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="AdhesiveType" type="string" use="optional" />
				<xs:attribute name="HardenerType" type="string" use="optional" />
				<xs:attribute name="Temperature" type="double" use="optional" />
				<xs:attribute name="LaminatingMethod" use="optional" />
				<xs:attribute name="NipWidth" type="double" use="optional" />
				<xs:attribute name="LaminatingBox" type="rectangle" use="optional" />
				<xs:attribute name="ModuleIndex" type="integer" use="optional" />
				<xs:attribute name="GapList" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for LayerDetails ** -->
	<xs:element name="LayerDetails" />

	<!-- ** Complex type definition for LayerList ** -->
	<xs:element name="LayerList">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="LayerDetails" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for LayoutPreparationParams ** -->
	<xs:element name="LayoutPreparationParams" type="LayoutPreparationParams" substitutionGroup="ParameterType" />
	<xs:complexType name="LayoutPreparationParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="FitPolicy" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="InsertSheet" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="PageCell" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="JobField" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="DeviceMark" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ImageShift" />
				</xs:sequence>
				<xs:attribute name="FinishingOrder" use="optional" />
				<xs:attribute name="ImplicitGutterMinimumLimit" type="XYPair" use="optional" />
				<xs:attribute name="GutterMinimumLimit" type="XYPair" use="optional" />
				<xs:attribute name="HorizontalCreep" type="IntegerList" use="optional" />
				<xs:attribute name="PresentationDirection" type="Any" use="optional" />
				<xs:attribute name="Rotate" use="optional" />
				<xs:attribute name="ImplicitGutter" type="XYPair" use="optional" />
				<xs:attribute name="StackDepth" type="integer" use="optional" />
				<xs:attribute name="NumberUp" type="XYPair" use="optional" />
				<xs:attribute name="Gutter" type="XYPair" use="optional" />
				<xs:attribute name="StepRepeat" type="string" use="optional" />
				<xs:attribute name="StepDocs" type="XYPair" use="optional" />
				<xs:attribute name="BindingEdge" use="optional" />
				<xs:attribute name="FoldCatalogOrientation" use="optional" />
				<xs:attribute name="FoldCatalog" type="string" use="optional" />
				<xs:attribute name="BackMarkList" type="NMTOKENS" use="optional" />
				<xs:attribute name="SurfaceContentsBox" type="rectangle" use="optional" />
				<xs:attribute name="PageOrder" type="NMTOKEN" use="optional" />
				<xs:attribute name="FrontMarkList" type="NMTOKENS" use="optional" />
				<xs:attribute name="VerticalCreep" type="IntegerList" use="optional" />
				<xs:attribute name="CreepValue" type="XYPair" use="optional" />
				<xs:attribute name="Sides" use="optional" />
				<xs:attribute name="PageDistributionScheme" type="NMTOKEN" use="optional" />
				<xs:attribute name="MediaRef" type="IDREF" use="optional" />
				<xs:attribute name="ExternalImpositionTemplateRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Location ** -->
	<xs:element name="Location">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Address" />
			</xs:sequence>
			<xs:attribute name="LocationName" type="string" use="optional" />
			<xs:attribute name="LocID" type="shortString" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for MarkActivation ** -->
	<xs:element name="MarkActivation">
		<xs:complexType>
			<xs:attribute name="Context" use="optional" />
			<xs:attribute name="Index" type="IntegerRangeList" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for MarkObject ** -->
	<xs:element name="MarkObject" substitutionGroup="PlacedObject" type="MarkObject" />
	<xs:complexType name="MarkObject">
		<xs:complexContent>
			<xs:extension base="PlacedObject">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ScavengerArea" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="DensityMeasuringField" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="CIELABMeasuringField" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ColorControlStrip" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="JobField" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="RegisterMark" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="DynamicField" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="CutMark" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="DeviceMark" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="RefAnchor" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="MarkActivation" />
				</xs:sequence>
				<xs:attribute name="CompensationCTMTemplate" type="string" use="optional" />
				<xs:attribute name="TrimClipPath" type="PDFPath" use="optional" />
				<xs:attribute name="ClipBox" type="rectangle" use="optional" />
				<xs:attribute name="OrdID" type="integer" use="optional" />
				<xs:attribute name="LogicalStackOrd" type="integer" use="optional" />
				<xs:attribute name="Anchor" type="EnumAnchor" use="optional" />
				<xs:attribute name="ClipBoxFormat" type="string" use="optional" />
				<xs:attribute name="TrimCTM" type="matrix" use="optional" />
				<xs:attribute name="LayerID" type="integer" use="optional" />
				<xs:attribute name="SourceClipPath" type="PDFPath" use="optional" />
				<xs:attribute name="ClipBoxTemplate" type="string" use="optional" />
				<xs:attribute name="ClipPath" type="PDFPath" use="optional" />
				<xs:attribute name="ContentRef" type="IDREF" use="optional" />
				<xs:attribute name="Ord" type="integer" use="optional" />
				<xs:attribute name="TrimSize" type="XYPair" use="optional" />
				<xs:attribute name="HalfTonePhaseOrigin" type="XYPair" use="optional" />
				<xs:attribute name="CompensationCTMFormat" type="string" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>


	<!-- ** Complex type definition for Milestone ** -->
	<xs:element name="Milestone">
		<xs:complexType>
			<xs:attribute name="TypeAmount" type="integer" use="optional" />
			<xs:attribute name="MilestoneType" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Modified ** -->
	<xs:element name="Modified">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
			</xs:sequence>
			<xs:attribute name="XPath" type="XPath" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="refID" type="IDREF" use="optional" />
			<xs:attribute name="TimeStamp" type="dateTime" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ModulePhase ** -->
	<xs:element name="ModulePhase">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
			</xs:sequence>
			<xs:attribute name="DeviceStatus" type="EnumDeviceStatus" use="optional" />
			<xs:attribute name="StatusDetails" type="shortString" use="optional" />
			<xs:attribute name="CombinedProcessIndex" type="IntegerList" use="optional" />
			<xs:attribute name="ModuleType" type="NMTOKEN" use="optional" />
			<xs:attribute name="ModuleID" type="shortString" use="optional" />
			<xs:attribute name="DeviceID" type="shortString" use="optional" />
			<xs:attribute name="ModuleIndex" type="IntegerRangeList" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ModuleStatus ** -->
	<xs:element name="ModuleStatus">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
			</xs:sequence>
			<xs:attribute name="DeviceStatus" type="EnumDeviceStatus" use="optional" />
			<xs:attribute name="StatusDetails" type="shortString" use="optional" />
			<xs:attribute name="CombinedProcessIndex" type="IntegerList" use="optional" />
			<xs:attribute name="ModuleType" type="NMTOKEN" use="optional" />
			<xs:attribute name="ModuleID" type="string" use="optional" />
			<xs:attribute name="ModuleIndex" type="IntegerRangeList" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Notification ** -->
	<xs:element name="Notification">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="CostCenter" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="CounterReset" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Milestone" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="FCNKey" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Error" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="SystemTimeSet" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Event" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Barcode" />
			</xs:sequence>
			<xs:attribute name="CombinedProcessIndex" type="IntegerList" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="JobID" type="string" use="optional" />
			<xs:attribute name="JobPartID" type="string" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="refID" type="IDREF" use="optional" />
			<xs:attribute name="TimeStamp" type="dateTime" use="optional" />
			<xs:attribute name="ModuleType" type="NMTOKEN" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="ModuleID" type="string" use="optional" />
			<xs:attribute name="Type" type="NMTOKEN" use="optional" />
			<xs:attribute name="ModuleIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for NumberingParams ** -->
	<xs:element name="NumberingParams" type="NumberingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="NumberingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="NumberingParam" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for NumberItem ** -->
	<xs:element name="NumberItem">
		<xs:complexType>
			<xs:attribute name="Step" type="integer" use="optional" />
			<xs:attribute name="StartValue" type="string" use="optional" />
			<xs:attribute name="ColorNameDetails" type="string" use="optional" />
			<xs:attribute name="YPosition" type="double" use="optional" />
			<xs:attribute name="Orientation" type="double" use="optional" />
			<xs:attribute name="XPosition" type="double" use="optional" />
			<xs:attribute name="ColorName" type="EnumNamedColor" use="optional" />
			<xs:attribute name="SeparationNames" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ObservationTarget ** -->
	<xs:element name="ObservationTarget">
		<xs:complexType>
			<xs:attribute name="ObservationPath" type="XPath" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PageCell ** -->
	<xs:element name="PageCell">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="FitPolicy" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="DeviceMark" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ImageShift" />
			</xs:sequence>
			<xs:attribute name="ClipBox" type="rectangle" use="optional" />
			<xs:attribute name="Rotate" use="optional" />
			<xs:attribute name="Border" type="double" use="optional" />
			<xs:attribute name="MarkList" type="NMTOKENS" use="optional" />
			<xs:attribute name="TrimSize" type="XYPair" use="optional" />
			<xs:attribute name="ColorRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PageCondition ** -->
	<xs:element name="PageCondition">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
			</xs:sequence>
			<xs:attribute name="RestrictedContentObjects" type="IntegerList" use="optional" />
			<xs:attribute name="RunListRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PageList ** -->
	<xs:element name="PageList" type="PageList" substitutionGroup="ParameterType" />
	<xs:complexType name="PageList">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="PageData" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Assembly" />
				</xs:sequence>
				<xs:attribute name="IsBlank" type="boolean" use="optional" />
				<xs:attribute name="JobID" type="shortString" use="optional" />
				<xs:attribute name="PageLabelSuffix" type="string" use="optional" />
				<xs:attribute name="SourceTrimBox" type="rectangle" use="optional" />
				<xs:attribute name="AssemblyIDs" type="NMTOKENS" use="optional" />
				<xs:attribute name="HasBleeds" type="boolean" use="optional" />
				<xs:attribute name="SourceClipBox" type="rectangle" use="optional" />
				<xs:attribute name="PageLabelPrefix" type="string" use="optional" />
				<xs:attribute name="IsTrapped" type="boolean" use="optional" />
				<xs:attribute name="IsPrintable" type="boolean" use="optional" />
				<xs:attribute name="SourceBleedBox" type="rectangle" use="optional" />
				<xs:attribute name="ElementColorParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="ContentListRef" type="IDREF" use="optional" />
				<xs:attribute name="ImageCompressionParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="ColorRef" type="IDREF" use="optional" />
				<xs:attribute name="ScreeningParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="SeparationNames" type="NMTOKENS" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Pallet ** -->
	<xs:element name="Pallet" type="Pallet" substitutionGroup="ResourceType" />
	<xs:complexType name="Pallet">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
				<xs:attribute name="PalletType" type="NMTOKEN" use="optional" />
				<xs:attribute name="Size" type="XYPair" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PalletizingParams ** -->
	<xs:element name="PalletizingParams" type="PalletizingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="PalletizingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Bundle" />
				</xs:sequence>
				<xs:attribute name="MaxWeight" type="double" use="optional" />
				<xs:attribute name="Pattern" type="string" use="optional" />
				<xs:attribute name="MaxHeight" type="double" use="optional" />
				<xs:attribute name="OverhangOffset" type="XYPair" use="optional" />
				<xs:attribute name="Overhang" type="XYPair" use="optional" />
				<xs:attribute name="LayerAmount" type="IntegerList" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Part ** -->
	<xs:element name="Part">
		<xs:complexType>
			<xs:attribute name="Metadata1" type="NameRangeList" use="optional" />
			<xs:attribute name="FountainNumber" type="integer" use="optional" />
			<xs:attribute name="PageTags" type="Any" use="optional" />
			<xs:attribute name="Metadata2" type="NameRangeList" use="optional" />
			<xs:attribute name="Metadata0" type="NameRangeList" use="optional" />
			<xs:attribute name="Metadata5" type="NameRangeList" use="optional" />
			<xs:attribute name="Metadata6" type="NameRangeList" use="optional" />
			<xs:attribute name="Metadata3" type="NameRangeList" use="optional" />
			<xs:attribute name="CellIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="Metadata4" type="NameRangeList" use="optional" />
			<xs:attribute name="Metadata9" type="NameRangeList" use="optional" />
			<xs:attribute name="Metadata7" type="NameRangeList" use="optional" />
			<xs:attribute name="Edition" type="NMTOKEN" use="optional" />
			<xs:attribute name="Metadata8" type="NameRangeList" use="optional" />
			<xs:attribute name="ItemNames" type="NMTOKENS" use="optional" />
			<xs:attribute name="RunIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="BundleItemIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="LayerIDs" type="IntegerRangeList" use="optional" />
			<xs:attribute name="WebProduct" type="NMTOKEN" use="optional" />
			<xs:attribute name="WebName" type="NMTOKEN" use="optional" />
			<xs:attribute name="Location" type="NMTOKEN" use="optional" />
			<xs:attribute name="Separation" type="string" use="optional" />
			<xs:attribute name="BinderySignatureName" type="NMTOKEN" use="optional" />
			<xs:attribute name="DeliveryUnit5" type="Any" use="optional" />
			<xs:attribute name="DeliveryUnit4" type="Any" use="optional" />
			<xs:attribute name="EditionVersion" type="NMTOKEN" use="optional" />
			<xs:attribute name="DeliveryUnit7" type="Any" use="optional" />
			<xs:attribute name="DeliveryUnit6" type="Any" use="optional" />
			<xs:attribute name="Run" type="NMTOKEN" use="optional" />
			<xs:attribute name="DocRunIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="DeliveryUnit1" type="Any" use="optional" />
			<xs:attribute name="DeliveryUnit0" type="Any" use="optional" />
			<xs:attribute name="DeliveryUnit3" type="Any" use="optional" />
			<xs:attribute name="PreflightRule" type="NMTOKEN" use="optional" />
			<xs:attribute name="SheetName" type="string" use="optional" />
			<xs:attribute name="SubRun" type="Any" use="optional" />
			<xs:attribute name="DeliveryUnit2" type="Any" use="optional" />
			<xs:attribute name="SetTags" type="Any" use="optional" />
			<xs:attribute name="SetSheetIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="RunPage" type="integer" use="optional" />
			<xs:attribute name="PartVersion" type="NMTOKENS" use="optional" />
			<xs:attribute name="SetRunIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="SignatureName" type="string" use="optional" />
			<xs:attribute name="TileID" type="XYPair" use="optional" />
			<xs:attribute name="DocCopies" type="IntegerRangeList" use="optional" />
			<xs:attribute name="DocTags" type="Any" use="optional" />
			<xs:attribute name="BlockName" type="NMTOKEN" use="optional" />
			<xs:attribute name="DeliveryUnit9" type="Any" use="optional" />
			<xs:attribute name="DocSheetIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="DeliveryUnit8" type="Any" use="optional" />
			<xs:attribute name="SetDocIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="SetIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="PlateLayout" type="Any" use="optional" />
			<xs:attribute name="RibbonName" type="NMTOKEN" use="optional" />
			<xs:attribute name="PageNumber" type="IntegerRangeList" use="optional" />
			<xs:attribute name="RunSet" type="NMTOKEN" use="optional" />
			<xs:attribute name="StationName" type="Any" use="optional" />
			<xs:attribute name="PreviewType" use="optional" />
			<xs:attribute name="RunPageRange" type="Any" use="optional" />
			<xs:attribute name="WebSetup" type="NMTOKEN" use="optional" />
			<xs:attribute name="Side" use="optional" />
			<xs:attribute name="SheetIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="DocIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="SectionIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="RunTags" type="NMTOKENS" use="optional" />
			<xs:attribute name="Option" type="NMTOKEN" use="optional" />
			<xs:attribute name="BinderySignaturePaginationIndex" type="Any" use="optional" />
			<xs:attribute name="Condition" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Payment ** -->
	<xs:element name="Payment" />

	<!-- ** Complex type definition for PDFInterpretingParams ** -->
	<xs:element name="PDFInterpretingParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="OCGControl" />
			</xs:sequence>
			<xs:attribute name="OCGProcess" use="optional" />
			<xs:attribute name="OCGDefault" use="optional" />
			<xs:attribute name="EmitPDFBG" type="boolean" use="optional" />
			<xs:attribute name="OCGIntent" type="NMTOKEN" use="optional" />
			<xs:attribute name="EmitPDFHalftones" type="boolean" use="optional" />
			<xs:attribute name="EmitPDFUCR" type="boolean" use="optional" />
			<xs:attribute name="PrintPDFAnnotations" type="boolean" use="optional" />
			<xs:attribute name="PrintTrapAnnotations" type="boolean" use="optional" />
			<xs:attribute name="TransparencyRenderingQuality" type="double" use="optional" />
			<xs:attribute name="HonorPDFOverprint" type="boolean" use="optional" />
			<xs:attribute name="EmitPDFTransfers" type="boolean" use="optional" />
			<xs:attribute name="ICCColorAsDeviceColor" type="boolean" use="optional" />
			<xs:attribute name="OCGZoom" type="double" use="optional" />
			<xs:attribute name="ReferenceXObjParamsRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PerforatingParams ** -->
	<xs:element name="PerforatingParams" type="PerforatingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="PerforatingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Perforate" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Performance ** -->
	<xs:element name="Performance">
		<xs:complexType>
			<xs:attribute name="MaxCleanup" type="duration" use="optional" />
			<xs:attribute name="MaxAmount" type="double" use="optional" />
			<xs:attribute name="AverageCleanup" type="duration" use="optional" />
			<xs:attribute name="DevCapsRef" type="IDREF" use="optional" />
			<xs:attribute name="MinCleanup" type="duration" use="optional" />
			<xs:attribute name="AverageAmount" type="double" use="optional" />
			<xs:attribute name="MaxSetup" type="duration" use="optional" />
			<xs:attribute name="Unit" type="NMTOKEN" use="optional" />
			<xs:attribute name="MinSetup" type="duration" use="optional" />
			<xs:attribute name="MinAmount" type="double" use="optional" />
			<xs:attribute name="AverageSetup" type="duration" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PhaseTime ** -->
	<xs:element name="PhaseTime">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ModulePhase" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="MISDetails" />
			</xs:sequence>
			<xs:attribute name="StatusDetails" type="shortString" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="refID" type="IDREF" use="optional" />
			<xs:attribute name="Status" type="EnumNodeStatus" use="optional" />
			<xs:attribute name="TimeStamp" type="dateTime" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="Start" type="dateTime" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="End" type="dateTime" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="DeviceRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PlaceHolderResource ** -->
	<xs:element name="PlaceHolderResource" type="PlaceHolderResource" substitutionGroup="ResourceType" />
	<xs:complexType name="PlaceHolderResource">
		<xs:complexContent>
			<xs:extension base="ResourceType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PreflightAnalysis ** -->
	<xs:element name="PreflightAnalysis" type="PreflightAnalysis" substitutionGroup="ParameterType" />
	<xs:complexType name="PreflightAnalysis">
		<xs:complexContent>
			<xs:extension base="ParameterType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ProcessRun ** -->
	<xs:element name="ProcessRun">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
			</xs:sequence>
			<xs:attribute name="EndStatus" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="Duration" type="duration" use="optional" />
			<xs:attribute name="refID" type="IDREF" use="optional" />
			<xs:attribute name="SubmissionTime" type="dateTime" use="optional" />
			<xs:attribute name="ReturnTime" type="dateTime" use="optional" />
			<xs:attribute name="TimeStamp" type="dateTime" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="Start" type="dateTime" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="End" type="dateTime" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ProofItem ** -->
	<xs:element name="ProofItem" type="ProofItem" />
	<xs:complexType name="ProofItem">
		<xs:attribute name="Contract" type="boolean" use="optional" />
		<xs:attribute name="PageIndex" type="IntegerRangeList" use="optional" />
		<xs:attribute name="ProofTarget" type="URL" use="optional" />
		<xs:attribute name="ProofName" type="string" use="optional" />
		<xs:attribute name="ApprovalParamsRef" type="IDREF" use="optional" />
		<xs:attribute name="ProofType" use="optional" />
		<xs:attribute name="Amount" type="integer" use="optional" />
		<xs:attribute name="HalfTone" type="boolean" use="optional" />
		<xs:attribute name="SeparationNames" type="NMTOKENS" use="optional" />
		<xs:attribute name="ColorType" use="optional" />
		<xs:attribute name="ImageStrategy" use="optional" />
		<xs:attribute name="BrandName" type="string" use="optional" />
		<xs:attribute name="Technology" type="NMTOKEN" use="optional" />
	</xs:complexType>

	<!-- ** Complex type definition for QueueEntryDefList ** -->
	<xs:element name="QueueEntryDefList" />

	<!-- ** Complex type definition for RefAnchor ** -->
	<xs:element name="RefAnchor" type="RefAnchor" substitutionGroup="ParameterType" />
	<xs:complexType name="RefAnchor">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Anchor" type="EnumAnchor" use="optional" />
				<xs:attribute name="rRef" type="IDREF" use="optional" />
				<xs:attribute name="AnchorType" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for RegisterRibbon ** -->
	<xs:element name="RegisterRibbon" type="RegisterRibbon" substitutionGroup="ResourceType" />
	<xs:complexType name="RegisterRibbon">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
				<xs:attribute name="RibbonColorDetails" type="string" use="optional" />
				<xs:attribute name="VisibleLength" type="double" use="optional" />
				<xs:attribute name="LengthOverall" type="double" use="optional" />
				<xs:attribute name="RibbonColor" type="string" use="optional" />
				<xs:attribute name="RibbonEnd" type="NMTOKEN" use="optional" />
				<xs:attribute name="Material" type="string" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Removed ** -->
	<xs:element name="Removed" />

	<!-- ** Complex type definition for ResourceAudit ** -->
	<xs:element name="ResourceAudit">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="MISDetails" />
			</xs:sequence>
			<xs:attribute name="Reason" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="NodeStatus" type="EnumNodeStatus" use="optional" />
			<xs:attribute name="refID" type="IDREF" use="optional" />
			<xs:attribute name="TimeStamp" type="dateTime" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="ContentsModified" type="boolean" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ResourceParam ** -->
	<xs:element name="ResourceParam">
		<xs:complexType>
			<xs:attribute name="DefaultJDF" type="URL" use="optional" />
			<xs:attribute name="DefaultPriority" use="optional" />
			<xs:attribute name="DefaultID" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ScavengerArea ** -->
	<xs:element name="ScavengerArea" type="ScavengerArea" substitutionGroup="ParameterType" />
	<xs:complexType name="ScavengerArea">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Rotation" type="double" use="optional" />
				<xs:attribute name="Size" type="XYPair" use="optional" />
				<xs:attribute name="Center" type="XYPair" use="optional" />
				<xs:attribute name="SeparationNames" type="NMTOKENS" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ShapeCuttingParams ** -->
	<xs:element name="ShapeCuttingParams" type="ShapeCuttingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ShapeCuttingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Shape" />
				</xs:sequence>
				<xs:attribute name="DeliveryMode" use="optional" />
				<xs:attribute name="SheetLay" use="optional" />
				<xs:attribute name="ModuleIndex" type="integer" use="optional" />
				<xs:attribute name="DieLayoutRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ShapeElement ** -->
	<xs:element name="ShapeElement" />

	<!-- ** Complex type definition for ShrinkingParams ** -->
	<xs:element name="ShrinkingParams" type="ShrinkingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ShrinkingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="ShrinkingMethod" use="optional" />
				<xs:attribute name="Temperature" type="double" use="optional" />
				<xs:attribute name="Duration" type="duration" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Signature ** -->
	<xs:element name="Signature">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ContentObject" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="TransferCurvePool" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="InsertSheet" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PageCondition" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="LayerList" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="MarkObject" />
			</xs:sequence>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="SheetCountReset" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="OrdsConsumed" type="IntegerRangeList" use="optional" />
			<xs:attribute name="BaseOrdReset" use="optional" />
			<xs:attribute name="SheetNameFormat" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="SurfaceContentsBox" type="rectangle" use="optional" />
			<xs:attribute name="StackDepth" type="integer" use="optional" />
			<xs:attribute name="LockOrigins" type="boolean" use="optional" />
			<xs:attribute name="OrdReset" use="optional" />
			<xs:attribute name="SheetNameTemplate" type="string" use="optional" />
			<xs:attribute name="Automated" type="boolean" use="optional" />
			<xs:attribute name="MaxCollect" type="integer" use="optional" />
			<xs:attribute name="SourceWorkStyle" type="EnumWorkStyle" use="optional" />
			<xs:attribute name="MinCollect" type="integer" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="MediaRef" type="IDREF" use="optional" />
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for SoftCoverBinding ** -->
	<xs:element name="SoftCoverBinding">
		<xs:complexType>
			<xs:attribute name="Scoring" use="optional" />
			<xs:attribute name="GlueProcedure" use="optional" />
			<xs:attribute name="FoldingWidthBack" type="double" use="optional" />
			<xs:attribute name="SpineLevelling" type="boolean" use="optional" />
			<xs:attribute name="SpineSanding" type="boolean" use="optional" />
			<xs:attribute name="SpineFiberRoughing" type="boolean" use="optional" />
			<xs:attribute name="SpineNotching" type="boolean" use="optional" />
			<xs:attribute name="SpineBrushing" type="boolean" use="optional" />
			<xs:attribute name="EndSheets" type="boolean" use="optional" />
			<xs:attribute name="BlockThreadSewing" type="boolean" use="optional" />
			<xs:attribute name="FoldingWidth" type="double" use="optional" />
			<xs:attribute name="SpineGlue" use="optional" />
			<xs:attribute name="SpineShredding" type="boolean" use="optional" />
			<xs:attribute name="SpineMilling" type="boolean" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for SpinePreparationParams ** -->
	<xs:element name="SpinePreparationParams" type="SpinePreparationParams" substitutionGroup="ParameterType" />
	<xs:complexType name="SpinePreparationParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="WorkingLength" type="double" use="optional" />
				<xs:attribute name="MillingDepth" type="double" use="optional" />
				<xs:attribute name="StartPosition" type="double" use="optional" />
				<xs:attribute name="NotchingDepth" type="double" use="optional" />
				<xs:attribute name="NotchingDistance" type="double" use="optional" />
				<xs:attribute name="Operations" type="NMTOKENS" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for SpineTapingParams ** -->
	<xs:element name="SpineTapingParams" type="SpineTapingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="SpineTapingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueApplication" />
				</xs:sequence>
				<xs:attribute name="HorizontalExcess" type="double" use="optional" />
				<xs:attribute name="TopExcess" type="double" use="optional" />
				<xs:attribute name="HorizontalExcessBack" type="double" use="optional" />
				<xs:attribute name="StripColorDetails" type="string" use="optional" />
				<xs:attribute name="StripMaterial" use="optional" />
				<xs:attribute name="StripLength" type="double" use="optional" />
				<xs:attribute name="StripBrand" type="string" use="optional" />
				<xs:attribute name="StripColor" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for StackingParams ** -->
	<xs:element name="StackingParams" type="StackingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="StackingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Disjointing" />
				</xs:sequence>
				<xs:attribute name="MaxWeight" type="double" use="optional" />
				<xs:attribute name="MaxHeight" type="integer" use="optional" />
				<xs:attribute name="StandardAmount" type="integer" use="optional" />
				<xs:attribute name="LayerCompression" type="boolean" use="optional" />
				<xs:attribute name="Compensate" type="boolean" use="optional" />
				<xs:attribute name="BundleDepth" type="integer" use="optional" />
				<xs:attribute name="UnderLays" type="IntegerList" use="optional" />
				<xs:attribute name="MaxAmount" type="integer" use="optional" />
				<xs:attribute name="StackCompression" type="boolean" use="optional" />
				<xs:attribute name="LayerLift" type="boolean" use="optional" />
				<xs:attribute name="MinAmount" type="integer" use="optional" />
				<xs:attribute name="PreStackMethod" use="optional" />
				<xs:attribute name="LayerAmount" type="IntegerList" use="optional" />
				<xs:attribute name="PreStackAmount" type="integer" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Strap ** -->
	<xs:element name="Strap" type="Strap" substitutionGroup="ResourceType" />
	<xs:complexType name="Strap">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
				<xs:attribute name="StrapColor" type="string" use="optional" />
				<xs:attribute name="Material" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for StrappingParams ** -->
	<xs:element name="StrappingParams" type="StrappingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="StrappingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="StrappingType" use="optional" />
				<xs:attribute name="StrapPositions" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for StripBinding ** -->
	<xs:element name="StripBinding">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="HoleList" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for SystemTimeSet ** -->
	<xs:element name="SystemTimeSet">
		<xs:complexType>
			<xs:attribute name="OldTime" type="dateTime" use="optional" />
			<xs:attribute name="NewTime" type="dateTime" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Tabs ** -->
	<xs:element name="Tabs">
		<xs:complexType>
			<xs:attribute name="TabCount" type="integer" use="optional" />
			<xs:attribute name="TabsPerBank" type="integer" use="optional" />
			<xs:attribute name="TabBanks" type="integer" use="optional" />
			<xs:attribute name="TabExtensionDistance" type="double" use="optional" />
			<xs:attribute name="TabBodyCopy" type="boolean" use="optional" />
			<xs:attribute name="TabExtensionMylar" type="boolean" use="optional" />
			<xs:attribute name="TabMylarColor" type="EnumNamedColor" use="optional" />
			<xs:attribute name="TabMylarColorDetails" type="string" use="optional" />
			<xs:attribute name="TabBindMylar" type="boolean" use="optional" />
			<xs:attribute name="TabBrand" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Tape ** -->
	<xs:element name="Tape" />

	<!-- ** Complex type definition for ThreadSealingParams ** -->
	<xs:element name="ThreadSealingParams" type="ThreadSealingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ThreadSealingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="ThreadMaterial" use="optional" />
				<xs:attribute name="ThreadLength" type="double" use="optional" />
				<xs:attribute name="SealingTemperature" type="integer" use="optional" />
				<xs:attribute name="BlindStitch" type="boolean" use="optional" />
				<xs:attribute name="ThreadPositions" type="string" use="optional" />
				<xs:attribute name="ThreadStitchWidth" type="double" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Tool ** -->
	<xs:element name="Tool" type="Tool" substitutionGroup="ResourceType" />
	<xs:complexType name="Tool">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
				<xs:attribute name="ToolType" type="NMTOKEN" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for TransferFunctionControl ** -->
	<xs:element name="TransferFunctionControl" type="TransferFunctionControl" substitutionGroup="ParameterType" />
	<xs:complexType name="TransferFunctionControl">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TransferCurvePool" />
				</xs:sequence>
				<xs:attribute name="TransferFunctionSource" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Value ** -->
	<xs:element name="Value" />

	<!-- ** Complex type definition for VarnishingParams ** -->
	<xs:element name="VarnishingParams" type="VarnishingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="VarnishingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Anchor" type="EnumAnchor" use="optional" />
				<xs:attribute name="VarnishMethod" use="optional" />
				<xs:attribute name="AbsoluteWidth" type="NMTOKEN" use="optional" />
				<xs:attribute name="ModuleIndex" type="integer" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for VerificationParams ** -->
	<xs:element name="VerificationParams" type="VerificationParams" substitutionGroup="ParameterType" />
	<xs:complexType name="VerificationParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="InsertError" type="string" use="optional" />
				<xs:attribute name="FieldRange" type="IntegerRangeList" use="optional" />
				<xs:attribute name="InsertOK" type="string" use="optional" />
				<xs:attribute name="Tolerance" type="double" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for WrappingParams ** -->
	<xs:element name="WrappingParams" type="WrappingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="WrappingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="WrappingKind" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for AbstractState ** -->
	<xs:element name="AbstractState" />

	<!-- ** Complex type definition for Action ** -->
	<xs:element name="Action">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PreflightAction" />
			</xs:sequence>
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="Severity" use="optional" />
			<xs:attribute name="TestRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ActionPool ** -->
	<xs:element name="ActionPool">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Action" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for and ** -->
	<xs:element name="and" type="and" substitutionGroup="TermType" />
	<xs:complexType name="and">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TermType" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for BasicPreflightTest ** -->
	<xs:element name="BasicPreflightTest">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PreflightArgument" />
			</xs:sequence>
			<xs:attribute name="ClassName" type="NMTOKEN" use="optional" />
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="Name" type="NMTOKEN" use="optional" />
			<xs:attribute name="MaxOccurs" type="integer" use="optional" />
			<xs:attribute name="Classes" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for BooleanEvaluation ** -->
	<xs:element name="BooleanEvaluation" type="BooleanEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="BooleanEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
				</xs:sequence>
				<xs:attribute name="ValueList" use="optional">
					<xs:simpleType>
						<xs:list itemType="EnumValueList" />
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for BooleanState ** -->
	<xs:element name="BooleanState">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ValueLoc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
			</xs:sequence>
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="HasDefault" type="boolean" use="optional" />
			<xs:attribute name="Required" type="boolean" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
			<xs:attribute name="MaxOccurs" type="unbounded" use="optional" />
			<xs:attribute name="CurrentValue" type="boolean" use="optional" />
			<xs:attribute name="PresentValueList" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPresentValueList" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="AllowedValueList" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumAllowedValueList" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="ModuleRefs" type="IDREFS" use="optional" />
			<xs:attribute name="MacroRefs" type="IDREFS" use="optional" />
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DependentMacroRef" type="IDREF" use="optional" />
			<xs:attribute name="DefaultValue" type="boolean" use="optional" />
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for call ** -->
	<xs:element name="call">
		<xs:complexType>
			<xs:attribute name="rRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for choice ** -->
	<xs:element name="choice">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="otherwise" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="when" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DateTimeEvaluation ** -->
	<xs:element name="DateTimeEvaluation" type="DateTimeEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="DateTimeEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
				</xs:sequence>
				<xs:attribute name="ValueDurationList" type="DurationRangeList" use="optional" />
				<xs:attribute name="ValueList" type="DateTimeRangeList" use="optional" />
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for DateTimeState ** -->
	<xs:element name="DateTimeState">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ValueLoc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
			</xs:sequence>
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="HasDefault" type="boolean" use="optional" />
			<xs:attribute name="Required" type="boolean" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
			<xs:attribute name="MaxOccurs" type="unbounded" use="optional" />
			<xs:attribute name="CurrentValue" type="dateTime" use="optional" />
			<xs:attribute name="PresentValueList" type="DateTimeRangeList" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="AllowedValueList" type="DateTimeRangeList" use="optional" />
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="ModuleRefs" type="IDREFS" use="optional" />
			<xs:attribute name="MacroRefs" type="IDREFS" use="optional" />
			<xs:attribute name="PresentValueDurationList" type="DurationRangeList" use="optional" />
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DependentMacroRef" type="IDREF" use="optional" />
			<xs:attribute name="DefaultValue" type="dateTime" use="optional" />
			<xs:attribute name="AllowedValueDurationList" type="DurationRangeList" use="optional" />
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DeviceCap ** -->
	<xs:element name="DeviceCap">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="BooleanState" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="StringState" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="EnumState" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="XYPairState" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="DateTimeState" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="MacroPool" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ShapeState" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ActionPool" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PDFPathState" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="RectangleState" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="NumberState" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="IntegerState" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="DurationState" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="NameState" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ModulePool" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Performance" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="MatrixState" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="TestPool" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ElementState" />
			</xs:sequence>
			<xs:attribute name="Lang" type="languages" use="optional" />
		</xs:complexType>
	</xs:element>
	<!--** abstract type for substitution only ** -->
	<xs:element abstract="true" name="TermType" type="TermType" />
	<xs:complexType name="TermType" />

	<!-- ** Complex type definition for DisplayGroup ** -->
	<xs:element name="DisplayGroup">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DurationEvaluation ** -->
	<xs:element name="DurationEvaluation" type="DurationEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="DurationEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
				</xs:sequence>
				<xs:attribute name="ValueList" type="DurationRangeList" use="optional" />
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for DurationState ** -->
	<xs:element name="DurationState">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ValueLoc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
			</xs:sequence>
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="HasDefault" type="boolean" use="optional" />
			<xs:attribute name="Required" type="boolean" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
			<xs:attribute name="MaxOccurs" type="unbounded" use="optional" />
			<xs:attribute name="CurrentValue" type="duration" use="optional" />
			<xs:attribute name="PresentValueList" type="DurationRangeList" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="AllowedValueList" type="DurationRangeList" use="optional" />
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="ModuleRefs" type="IDREFS" use="optional" />
			<xs:attribute name="MacroRefs" type="IDREFS" use="optional" />
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DependentMacroRef" type="IDREF" use="optional" />
			<xs:attribute name="DefaultValue" type="duration" use="optional" />
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for EnumEvaluation ** -->
	<xs:element name="EnumEvaluation" type="EnumEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="EnumEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
				</xs:sequence>
				<xs:attribute name="RegExp" type="RegExp" use="optional" />
				<xs:attribute name="ValueList" type="NMTOKENS" use="optional" />
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for EnumState ** -->
	<xs:element name="EnumState">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ValueLoc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
			</xs:sequence>
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="HasDefault" type="boolean" use="optional" />
			<xs:attribute name="Required" type="boolean" use="optional" />
			<xs:attribute name="AllowedRegExp" type="RegExp" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
			<xs:attribute name="MaxOccurs" type="unbounded" use="optional" />
			<xs:attribute name="CurrentValue" type="NMTOKEN" use="optional" />
			<xs:attribute name="PresentValueList" type="NMTOKENS" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="AllowedValueList" type="NMTOKENS" use="optional" />
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="ModuleRefs" type="IDREFS" use="optional" />
			<xs:attribute name="MacroRefs" type="IDREFS" use="optional" />
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DependentMacroRef" type="IDREF" use="optional" />
			<xs:attribute name="DefaultValue" type="NMTOKEN" use="optional" />
			<xs:attribute name="PresentRegExp" type="RegExp" use="optional" />
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Evaluation ** -->
	<xs:element name="Evaluation" />

	<!-- ** Complex type definition for FeatureAttribute ** -->
	<xs:element name="FeatureAttribute">
		<xs:complexType>
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="CurrentValue" type="string" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for IntegerEvaluation ** -->
	<xs:element name="IntegerEvaluation" type="IntegerEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="IntegerEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
				</xs:sequence>
				<xs:attribute name="ValueMod" type="XYPair" use="optional" />
				<xs:attribute name="ValueList" type="IntegerRangeList" use="optional" />
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for IntegerState ** -->
	<xs:element name="IntegerState">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ValueLoc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
			</xs:sequence>
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="HasDefault" type="boolean" use="optional" />
			<xs:attribute name="Required" type="boolean" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
			<xs:attribute name="PresentValueMod" type="XYPair" use="optional" />
			<xs:attribute name="MaxOccurs" type="unbounded" use="optional" />
			<xs:attribute name="CurrentValue" type="IntegerList" use="optional" />
			<xs:attribute name="PresentValueList" type="IntegerRangeList" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="AllowedValueList" type="IntegerRangeList" use="optional" />
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="AllowedValueMod" type="XYPair" use="optional" />
			<xs:attribute name="UnitType" type="NMTOKEN" use="optional" />
			<xs:attribute name="ModuleRefs" type="IDREFS" use="optional" />
			<xs:attribute name="MacroRefs" type="IDREFS" use="optional" />
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DependentMacroRef" type="IDREF" use="optional" />
			<xs:attribute name="DefaultValue" type="IntegerList" use="optional" />
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for IsPresentEvaluation ** -->
	<xs:element name="IsPresentEvaluation" type="IsPresentEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="IsPresentEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
				</xs:sequence>
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Loc ** -->
	<xs:element name="Loc">
		<xs:complexType>
			<xs:attribute name="HelpText" type="string" use="optional" />
			<xs:attribute name="ShortValue" type="string" use="optional" />
			<xs:attribute name="Value" type="string" use="optional" />
			<xs:attribute name="Lang" type="language" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for macro ** -->
	<xs:element name="macro">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="set" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="choice" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="call" />
			</xs:sequence>
			<xs:attribute name="ID" type="ID" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for MacroPool ** -->
	<xs:element name="MacroPool">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="macro" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for MatrixEvaluation ** -->
	<xs:element name="MatrixEvaluation" type="MatrixEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="MatrixEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
				</xs:sequence>
				<xs:attribute name="RotateMod" type="double" use="optional" />
				<xs:attribute name="Shift" type="NumberList" use="optional" />
				<xs:attribute name="Tolerance" type="XYPair" use="optional" />
				<xs:attribute name="Transforms" type="EnumOrientation" use="optional" />
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for MatrixState ** -->
	<xs:element name="MatrixState">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Value" />
			</xs:sequence>
			<xs:attribute name="PresentRotateMod" type="double" use="optional" />
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="PresentShift" type="NumberList" use="optional" />
			<xs:attribute name="HasDefault" type="boolean" use="optional" />
			<xs:attribute name="Required" type="boolean" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
			<xs:attribute name="MaxOccurs" type="unbounded" use="optional" />
			<xs:attribute name="CurrentValue" type="matrix" use="optional" />
			<xs:attribute name="AllowedRotateMod" type="double" use="optional" />
			<xs:attribute name="AllowedTransforms" type="EnumOrientation" use="optional" />
			<xs:attribute name="AllowedShift" type="NumberList" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="ModuleRefs" type="IDREFS" use="optional" />
			<xs:attribute name="MacroRefs" type="IDREFS" use="optional" />
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DependentMacroRef" type="IDREF" use="optional" />
			<xs:attribute name="DefaultValue" type="matrix" use="optional" />
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Module ** -->
	<xs:element name="Module">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Module" />
			</xs:sequence>
			<xs:attribute name="ModelName" type="string" use="optional" />
			<xs:attribute name="Manufacturer" type="string" use="optional" />
			<xs:attribute name="ModelURL" type="string" use="optional" />
			<xs:attribute name="SerialNumber" type="string" use="optional" />
			<xs:attribute name="ModuleType" type="NMTOKEN" use="optional" />
			<xs:attribute name="ModelDescription" type="string" use="optional" />
			<xs:attribute name="DeviceType" type="string" use="optional" />
			<xs:attribute name="ModuleID" type="string" use="optional" />
			<xs:attribute name="ModelNumber" type="string" use="optional" />
			<xs:attribute name="SubModuleIndex" type="integer" use="optional" />
			<xs:attribute name="ManufacturerURL" type="string" use="optional" />
			<xs:attribute name="ModuleIndex" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ModuleCap ** -->
	<xs:element name="ModuleCap">
		<xs:complexType>
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ModuleIndex" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ModulePool ** -->
	<xs:element name="ModulePool">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ModuleCap" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for NameEvaluation ** -->
	<xs:element name="NameEvaluation" type="NameEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="NameEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
				</xs:sequence>
				<xs:attribute name="RegExp" type="RegExp" use="optional" />
				<xs:attribute name="ValueList" type="NMTOKENS" use="optional" />
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for NameState ** -->
	<xs:element name="NameState">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ValueLoc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
			</xs:sequence>
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="HasDefault" type="boolean" use="optional" />
			<xs:attribute name="Required" type="boolean" use="optional" />
			<xs:attribute name="AllowedRegExp" type="RegExp" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
			<xs:attribute name="MaxOccurs" type="unbounded" use="optional" />
			<xs:attribute name="CurrentValue" type="NMTOKENS" use="optional" />
			<xs:attribute name="PresentValueList" type="NMTOKENS" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="AllowedValueList" type="NMTOKENS" use="optional" />
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="ModuleRefs" type="IDREFS" use="optional" />
			<xs:attribute name="MacroRefs" type="IDREFS" use="optional" />
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DependentMacroRef" type="IDREF" use="optional" />
			<xs:attribute name="DefaultValue" type="NMTOKENS" use="optional" />
			<xs:attribute name="PresentRegExp" type="RegExp" use="optional" />
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for NodeTerm ** -->
	<xs:element name="NodeTerm" />

	<!-- ** Complex type definition for not ** -->
	<xs:element name="not" type="not" substitutionGroup="TermType" />
	<xs:complexType name="not">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TermType" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for NumberEvaluation ** -->
	<xs:element name="NumberEvaluation" type="NumberEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="NumberEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
				</xs:sequence>
				<xs:attribute name="ValueMod" type="XYPair" use="optional" />
				<xs:attribute name="ValueList" type="NumberRangeList" use="optional" />
				<xs:attribute name="Tolerance" type="XYPair" use="optional" />
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for NumberState ** -->
	<xs:element name="NumberState">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ValueLoc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
			</xs:sequence>
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="HasDefault" type="boolean" use="optional" />
			<xs:attribute name="Required" type="boolean" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
			<xs:attribute name="PresentValueMod" type="XYPair" use="optional" />
			<xs:attribute name="MaxOccurs" type="unbounded" use="optional" />
			<xs:attribute name="CurrentValue" type="NumberList" use="optional" />
			<xs:attribute name="PresentValueList" type="NumberRangeList" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="AllowedValueList" type="NumberRangeList" use="optional" />
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="AllowedValueMod" type="XYPair" use="optional" />
			<xs:attribute name="UnitType" type="NMTOKEN" use="optional" />
			<xs:attribute name="ModuleRefs" type="IDREFS" use="optional" />
			<xs:attribute name="MacroRefs" type="IDREFS" use="optional" />
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DependentMacroRef" type="IDREF" use="optional" />
			<xs:attribute name="DefaultValue" type="NumberList" use="optional" />
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for or ** -->
	<xs:element name="or" type="or" substitutionGroup="TermType" />
	<xs:complexType name="or">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TermType" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for otherwise ** -->
	<xs:element name="otherwise">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="set" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PDFPathEvaluation ** -->
	<xs:element name="PDFPathEvaluation" type="PDFPathEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="PDFPathEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Value" />
				</xs:sequence>
				<xs:attribute name="Length" type="IntegerRange" use="optional" />
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PDFPathState ** -->
	<xs:element name="PDFPathState">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Value" />
			</xs:sequence>
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="HasDefault" type="boolean" use="optional" />
			<xs:attribute name="Required" type="boolean" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
			<xs:attribute name="MaxOccurs" type="unbounded" use="optional" />
			<xs:attribute name="CurrentValue" type="PDFPath" use="optional" />
			<xs:attribute name="AllowedLength" type="IntegerRange" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="ModuleRefs" type="IDREFS" use="optional" />
			<xs:attribute name="MacroRefs" type="IDREFS" use="optional" />
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DependentMacroRef" type="IDREF" use="optional" />
			<xs:attribute name="DefaultValue" type="PDFPath" use="optional" />
			<xs:attribute name="PresentLength" type="IntegerRange" use="optional" />
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for RectangleEvaluation ** -->
	<xs:element name="RectangleEvaluation" type="RectangleEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="RectangleEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
				</xs:sequence>
				<xs:attribute name="HWRelation" type="EnumXYRelation" use="optional" />
				<xs:attribute name="ValueList" type="RectangleRangeList" use="optional" />
				<xs:attribute name="Tolerance" type="XYPair" use="optional" />
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for RectangleState ** -->
	<xs:element name="RectangleState">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ValueLoc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
			</xs:sequence>
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="HasDefault" type="boolean" use="optional" />
			<xs:attribute name="PresentHWRelation" type="EnumXYRelation" use="optional" />
			<xs:attribute name="Required" type="boolean" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
			<xs:attribute name="MaxOccurs" type="unbounded" use="optional" />
			<xs:attribute name="CurrentValue" type="rectangle" use="optional" />
			<xs:attribute name="AllowedHWRelation" type="EnumXYRelation" use="optional" />
			<xs:attribute name="PresentValueList" type="RectangleRangeList" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="AllowedValueList" type="RectangleRangeList" use="optional" />
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="ModuleRefs" type="IDREFS" use="optional" />
			<xs:attribute name="MacroRefs" type="IDREFS" use="optional" />
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DependentMacroRef" type="IDREF" use="optional" />
			<xs:attribute name="DefaultValue" type="rectangle" use="optional" />
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for set ** -->
	<xs:element name="set">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="FeatureAttribute" />
			</xs:sequence>
			<xs:attribute name="rRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ShapeEvaluation ** -->
	<xs:element name="ShapeEvaluation" type="ShapeEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="ShapeEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
				</xs:sequence>
				<xs:attribute name="Z" type="NumberRangeList" use="optional" />
				<xs:attribute name="X" type="NumberRangeList" use="optional" />
				<xs:attribute name="Y" type="NumberRangeList" use="optional" />
				<xs:attribute name="ValueList" type="ShapeRangeList" use="optional" />
				<xs:attribute name="Tolerance" type="XYPair" use="optional" />
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ShapeState ** -->
	<xs:element name="ShapeState">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ValueLoc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
			</xs:sequence>
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="HasDefault" type="boolean" use="optional" />
			<xs:attribute name="Required" type="boolean" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
			<xs:attribute name="PresentZ" type="NumberRangeList" use="optional" />
			<xs:attribute name="PresentY" type="NumberRangeList" use="optional" />
			<xs:attribute name="PresentX" type="NumberRangeList" use="optional" />
			<xs:attribute name="MaxOccurs" type="unbounded" use="optional" />
			<xs:attribute name="CurrentValue" type="shape" use="optional" />
			<xs:attribute name="PresentValueList" type="ShapeRangeList" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="AllowedValueList" type="ShapeRangeList" use="optional" />
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="ModuleRefs" type="IDREFS" use="optional" />
			<xs:attribute name="MacroRefs" type="IDREFS" use="optional" />
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DependentMacroRef" type="IDREF" use="optional" />
			<xs:attribute name="DefaultValue" type="shape" use="optional" />
			<xs:attribute name="AllowedY" type="NumberRangeList" use="optional" />
			<xs:attribute name="AllowedX" type="NumberRangeList" use="optional" />
			<xs:attribute name="AllowedZ" type="NumberRangeList" use="optional" />
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for StringEvaluation ** -->
	<xs:element name="StringEvaluation" type="StringEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="StringEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Value" />
				</xs:sequence>
				<xs:attribute name="RegExp" type="RegExp" use="optional" />
				<xs:attribute name="Length" type="IntegerRange" use="optional" />
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for StringState ** -->
	<xs:element name="StringState">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Value" />
			</xs:sequence>
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="HasDefault" type="boolean" use="optional" />
			<xs:attribute name="Required" type="boolean" use="optional" />
			<xs:attribute name="AllowedRegExp" type="RegExp" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
			<xs:attribute name="MaxOccurs" type="unbounded" use="optional" />
			<xs:attribute name="CurrentValue" type="string" use="optional" />
			<xs:attribute name="AllowedLength" type="IntegerRange" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="ModuleRefs" type="IDREFS" use="optional" />
			<xs:attribute name="MacroRefs" type="IDREFS" use="optional" />
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DependentMacroRef" type="IDREF" use="optional" />
			<xs:attribute name="DefaultValue" type="string" use="optional" />
			<xs:attribute name="PresentRegExp" type="RegExp" use="optional" />
			<xs:attribute name="PresentLength" type="IntegerRange" use="optional" />
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Term ** -->
	<xs:element name="Term" />

	<!-- ** Complex type definition for Test ** -->
	<xs:element name="Test" type="Test" substitutionGroup="TermType" />
	<xs:complexType name="Test">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TermType" />
				</xs:sequence>
				<xs:attribute name="ID" type="ID" use="optional" />
				<xs:attribute name="Context" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for TestPool ** -->
	<xs:element name="TestPool">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Test" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for TestRef ** -->
	<xs:element name="TestRef" type="TestRef" substitutionGroup="TermType" />
	<xs:complexType name="TestRef">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:attribute name="rRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ValueLoc ** -->
	<xs:element name="ValueLoc">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
			</xs:sequence>
			<xs:attribute name="Value" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for when ** -->
	<xs:element name="when">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="set" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for xor ** -->
	<xs:element name="xor" type="xor" substitutionGroup="TermType" />
	<xs:complexType name="xor">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TermType" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for XYPairEvaluation ** -->
	<xs:element name="XYPairEvaluation" type="XYPairEvaluation" substitutionGroup="TermType" />
	<xs:complexType name="XYPairEvaluation">
		<xs:complexContent>
			<xs:extension base="TermType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BasicPreflightTest" />
				</xs:sequence>
				<xs:attribute name="EnumXYRelation" type="EnumXYRelation" use="optional" />
				<xs:attribute name="ValueList" type="XYPairRangeList" use="optional" />
				<xs:attribute name="Tolerance" type="XYPair" use="optional" />
				<xs:attribute name="XPath" type="XPath" use="required" />
				<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for XYPairState ** -->
	<xs:element name="XYPairState">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ValueLoc" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Loc" />
			</xs:sequence>
			<xs:attribute name="UserDisplay" type="EnumUserDisplay" use="optional" />
			<xs:attribute name="HasDefault" type="boolean" use="optional" />
			<xs:attribute name="Required" type="boolean" use="optional" />
			<xs:attribute name="Editable" type="boolean" use="optional" />
			<xs:attribute name="MaxOccurs" type="unbounded" use="optional" />
			<xs:attribute name="CurrentValue" type="XYPair" use="optional" />
			<xs:attribute name="AllowedXYRelation" type="EnumXYRelation" use="optional" />
			<xs:attribute name="PresentValueList" type="XYPairRangeList" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="AllowedValueList" type="XYPairRangeList" use="optional" />
			<xs:attribute name="DevNS" type="URI" use="optional" />
			<xs:attribute name="Availability" type="EnumAvailability" use="optional" />
			<xs:attribute name="ListType" type="EnumListType" use="optional" />
			<xs:attribute name="MinOccurs" type="integer" use="optional" />
			<xs:attribute name="UnitType" type="NMTOKEN" use="optional" />
			<xs:attribute name="ModuleRefs" type="IDREFS" use="optional" />
			<xs:attribute name="MacroRefs" type="IDREFS" use="optional" />
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
			<xs:attribute name="DependentMacroRef" type="IDREF" use="optional" />
			<xs:attribute name="DefaultValue" type="XYPair" use="optional" />
			<xs:attribute name="PresentXYRelation" type="EnumXYRelation" use="optional" />
			<xs:attribute name="XPath" type="XPath" use="required" />
			<xs:attribute name="XPathRoot" type="XPath" use="optional" />
			<xs:attribute name="DescriptiveName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ArtDelivery ** -->
	<xs:element name="ArtDelivery">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="DigitalMedia" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
			</xs:sequence>
			<xs:attribute name="HasBleeds" type="boolean" use="optional" />
			<xs:attribute name="ArtDeliveryType" type="NMTOKEN" use="optional" />
			<xs:attribute name="IsTrapped" type="boolean" use="optional" />
			<xs:attribute name="PreflightOutput" type="URL" use="optional" />
			<xs:attribute name="PreflightStatus" use="optional" />
			<xs:attribute name="PageList" type="IntegerRangeList" use="optional" />
			<xs:attribute name="Amount" type="integer" use="optional" />
			<xs:attribute name="ToolRef" type="IDREF" use="optional" />
			<xs:attribute name="ScanParamsRef" type="IDREF" use="optional" />
			<xs:attribute name="ExposedMediaRef" type="IDREF" use="optional" />
			<xs:attribute name="RunListRef" type="IDREF" use="optional" />
			<xs:attribute name="ComponentRef" type="IDREF" use="optional" />
			<xs:attribute name="ReturnMethod" type="NMTOKEN" use="optional" />
			<xs:attribute name="Method" type="NMTOKEN" use="optional" />
			<xs:attribute name="ArtDeliveryDate" type="dateTime" use="optional" />
			<xs:attribute name="Transfer" use="optional" />
			<xs:attribute name="DeliveryCharge" use="optional" />
			<xs:attribute name="ArtHandling" use="optional" />
			<xs:attribute name="ServiceLevel" type="string" use="optional" />
			<xs:attribute name="ArtDeliveryDuration" type="duration" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ArtDeliveryType ** -->
	<xs:element name="ArtDeliveryType">
		<xs:complexType>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for BindingIntent ** -->
	<xs:element name="BindingIntent" type="BindingIntent" substitutionGroup="IntentType" />
	<xs:complexType name="BindingIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BindList" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ThreadSealing" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Tabs" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="EdgeGluing" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="SoftCoverBinding" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="HardCoverBinding" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Tape" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="SideSewing" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="PlasticCombBinding" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="WireCombBinding" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="CoilBinding" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="SideStitching" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="RingBinding" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ChannelBinding" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ThreadSewing" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="SaddleStitching" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="StripBinding" />
				</xs:sequence>
				<xs:attribute name="BindingOrder" use="optional" />
				<xs:attribute name="BindingType" use="optional" />
				<xs:attribute name="BackCoverColorDetails" type="string" use="optional" />
				<xs:attribute name="BindingColor" type="EnumNamedColor" use="optional" />
				<xs:attribute name="BindingColorDetails" type="string" use="optional" />
				<xs:attribute name="BindingSide" use="optional" />
				<xs:attribute name="CoverColor" type="EnumNamedColor" use="optional" />
				<xs:attribute name="BackCoverColor" type="EnumNamedColor" use="optional" />
				<xs:attribute name="BindingLength" use="optional" />
				<xs:attribute name="CoverColorDetails" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for BookCase ** -->
	<xs:element name="BookCase" />

	<!-- ** Complex type definition for ColorIntent ** -->
	<xs:element name="ColorIntent" type="ColorIntent" substitutionGroup="IntentType" />
	<xs:complexType name="ColorIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:attribute name="NumColors" type="IntegerList" use="optional" />
				<xs:attribute name="ColorRef" type="IDREF" use="optional" />
				<xs:attribute name="ColorsUsed" type="NMTOKENS" use="optional" />
				<xs:attribute name="ColorsUsedBack" type="NMTOKENS" use="optional" />
				<xs:attribute name="Coverage" type="double" use="optional" />
				<xs:attribute name="ColorStandard" type="NMTOKEN" use="optional" />
				<xs:attribute name="ColorICCStandard" type="string" use="optional" />
				<xs:attribute name="Coatings" type="string" use="optional" />
				<xs:attribute name="CoatingsBack" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ProductionIntent ** -->
	<xs:element name="ProductionIntent" type="ProductionIntent" substitutionGroup="IntentType" />
	<xs:complexType name="ProductionIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:attribute name="PrintPreference" type="EnumPrintPreference" use="optional" />
				<xs:attribute name="PrintProcess" type="NMTOKEN" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for EmbossingIntent ** -->
	<xs:element name="EmbossingIntent" type="EmbossingIntent" substitutionGroup="IntentType" />
	<xs:complexType name="EmbossingIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="EmbossingItem" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for FoldingIntent ** -->
	<xs:element name="FoldingIntent" type="FoldingIntent" substitutionGroup="IntentType" />
	<xs:complexType name="FoldingIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Fold" />
				</xs:sequence>
				<xs:attribute name="FoldingCatalog" type="NMTOKEN" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for HoleMakingIntent ** -->
	<xs:element name="HoleMakingIntent" type="HoleMakingIntent" substitutionGroup="IntentType" />
	<xs:complexType name="HoleMakingIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="HoleList" />
				</xs:sequence>
				<xs:attribute name="HoleReferenceEdge" use="optional" />
				<xs:attribute name="Extent" type="XYPair" use="optional" />
				<xs:attribute name="HoleType" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for InsertingIntent ** -->
	<xs:element name="InsertingIntent" type="InsertingIntent" substitutionGroup="IntentType" />
	<xs:complexType name="InsertingIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="InsertList" />
				</xs:sequence>
				<xs:attribute name="GlueType" use="optional" />
				<xs:attribute name="Method" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for IntentResource ** -->
	<xs:element name="IntentResource" type="IntentResource" substitutionGroup="IntentType" />
	<xs:complexType name="IntentResource">
		<xs:complexContent>
			<xs:extension base="IntentType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for LaminatingIntent ** -->
	<xs:element name="LaminatingIntent" type="LaminatingIntent" substitutionGroup="IntentType" />
	<xs:complexType name="LaminatingIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:attribute name="Temperature" use="optional" />
				<xs:attribute name="Thickness" type="double" use="optional" />
				<xs:attribute name="Texture" type="NMTOKEN" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for LayoutIntent ** -->
	<xs:element name="LayoutIntent" type="LayoutIntent" substitutionGroup="IntentType" />
	<xs:complexType name="LayoutIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:attribute name="RotatePolicy" use="optional" />
				<xs:attribute name="FolioCount" use="optional" />
				<xs:attribute name="NumberUp" type="XYPair" use="optional" />
				<xs:attribute name="Sides" use="optional" />
				<xs:attribute name="LayoutRef" type="IDREF" use="optional" />
				<xs:attribute name="SizePolicy" use="optional" />
				<xs:attribute name="Pages" type="integer" use="optional" />
				<xs:attribute name="PageVariance" type="integer" use="optional" />
				<xs:attribute name="FinishedDimensions" type="shape" use="optional" />
				<xs:attribute name="Dimensions" type="XYPair" use="optional" />
				<xs:attribute name="FinishedGrainDirection" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for MediaIntent ** -->
	<xs:element name="MediaIntent" type="MediaIntent" substitutionGroup="IntentType" />
	<xs:complexType name="MediaIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="MediaLayers" />
				</xs:sequence>
				<xs:attribute name="MediaSetCount" type="integer" use="optional" />
				<xs:attribute name="UserMediaType" type="NMTOKEN" use="optional" />
				<xs:attribute name="PrePrinted" type="boolean" use="optional" />
				<xs:attribute name="MediaType" use="optional" />
				<xs:attribute name="HoleType" type="string" use="optional" />
				<xs:attribute name="MediaQuality" type="string" use="optional" />
				<xs:attribute name="Thickness" type="double" use="optional" />
				<xs:attribute name="FluteDirection" use="optional" />
				<xs:attribute name="Texture" type="NMTOKEN" use="optional" />
				<xs:attribute name="OpacityLevel" type="double" use="optional" />
				<xs:attribute name="MediaColorDetails" type="string" use="optional" />
				<xs:attribute name="Weight" type="double" use="optional" />
				<xs:attribute name="Grade" type="integer" use="optional" />
				<xs:attribute name="RecycledPercentage" type="double" use="optional" />
				<xs:attribute name="MediaTypeDetails" type="string" use="optional" />
				<xs:attribute name="MediaColor" type="EnumNamedColor" use="optional" />
				<xs:attribute name="Brightness" type="double" use="optional" />
				<xs:attribute name="Brand" type="string" use="optional" />
				<xs:attribute name="FrontCoatings" use="optional" />
				<xs:attribute name="Opacity" use="optional" />
				<xs:attribute name="StockType" type="NMTOKEN" use="optional" />
				<xs:attribute name="BuyerSupplied" type="boolean" use="optional" />
				<xs:attribute name="Flute" type="NMTOKEN" use="optional" />
				<xs:attribute name="GrainDirection" use="optional" />
				<xs:attribute name="BackCoatings" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for NumberingIntent ** -->
	<xs:element name="NumberingIntent" type="NumberingIntent" substitutionGroup="IntentType" />
	<xs:complexType name="NumberingIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="NumberItem" />
				</xs:sequence>
				<xs:attribute name="ColorRef" type="IDREF" use="optional" />
				<xs:attribute name="ColorName" type="EnumNamedColor" use="optional" />
				<xs:attribute name="ColorNameDetails" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PackingIntent ** -->
	<xs:element name="PackingIntent" type="PackingIntent" substitutionGroup="IntentType" />
	<xs:complexType name="PackingIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:attribute name="BoxedQuantity" type="integer" use="optional" />
				<xs:attribute name="WrappingMaterial" type="NMTOKEN" use="optional" />
				<xs:attribute name="PalletType" type="NMTOKEN" use="optional" />
				<xs:attribute name="PalletCornerBoards" type="NMTOKEN" use="optional" />
				<xs:attribute name="PalletSize" type="XYPair" use="optional" />
				<xs:attribute name="CartonMaxWeight" type="double" use="optional" />
				<xs:attribute name="PalletWrapping" type="NMTOKEN" use="optional" />
				<xs:attribute name="CartonQuantity" type="integer" use="optional" />
				<xs:attribute name="CartonShape" type="shape" use="optional" />
				<xs:attribute name="PalletMaxHeight" type="double" use="optional" />
				<xs:attribute name="CartonStrength" type="double" use="optional" />
				<xs:attribute name="WrappedQuantity" type="integer" use="optional" />
				<xs:attribute name="PalletMaxWeight" type="double" use="optional" />
				<xs:attribute name="PalletQuantity" type="integer" use="optional" />
				<xs:attribute name="BoxShape" type="shape" use="optional" />
				<xs:attribute name="FoldingCatalog" type="NMTOKEN" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Pricing ** -->
	<xs:element name="Pricing" />

	<!-- ** Complex type definition for ProofingIntent ** -->
	<xs:element name="ProofingIntent" type="ProofingIntent" substitutionGroup="IntentType" />
	<xs:complexType name="ProofingIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ProofItem" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PublishingIntent ** -->
	<xs:element name="PublishingIntent" type="PublishingIntent" substitutionGroup="IntentType" />
	<xs:complexType name="PublishingIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:attribute name="ContentDataRefs" type="IDREFS" use="optional" />
				<xs:attribute name="ContentListRef" type="IDREF" use="optional" />
				<xs:attribute name="IssueType" type="NMTOKEN" use="optional" />
				<xs:attribute name="IssueDate" type="dateTime" use="optional" />
				<xs:attribute name="IssueName" type="string" use="optional" />
				<xs:attribute name="Circulation" type="integer" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ScreeningIntent ** -->
	<xs:element name="ScreeningIntent" type="ScreeningIntent" substitutionGroup="IntentType" />
	<xs:complexType name="ScreeningIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:attribute name="DotSize" type="double" use="optional" />
				<xs:attribute name="ScreeningType" use="optional" />
				<xs:attribute name="Frequency" type="double" use="optional" />
				<xs:attribute name="FrequencySelection" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ShapeCut ** -->
	<xs:element name="ShapeCut">
		<xs:complexType>
			<xs:attribute name="CutOut" type="boolean" use="optional" />
			<xs:attribute name="CutPath" type="PDFPath" use="optional" />
			<xs:attribute name="Pages" type="IntegerRangeList" use="optional" />
			<xs:attribute name="CutBox" type="rectangle" use="optional" />
			<xs:attribute name="ShapeType" use="optional" />
			<xs:attribute name="Material" type="string" use="optional" />
			<xs:attribute name="CutType" use="optional" />
			<xs:attribute name="TeethPerDimension" type="double" use="optional" />
			<xs:attribute name="ShapeDepth" type="double" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ShapeCuttingIntent ** -->
	<xs:element name="ShapeCuttingIntent" type="ShapeCuttingIntent" substitutionGroup="IntentType" />
	<xs:complexType name="ShapeCuttingIntent">
		<xs:complexContent>
			<xs:extension base="IntentType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ShapeCut" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for SizeIntent ** -->
	<xs:element name="SizeIntent" type="SizeIntent" substitutionGroup="IntentType" />
	<xs:complexType name="SizeIntent">
		<xs:complexContent>
			<xs:extension base="IntentType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Address ** -->
	<xs:element name="Address" type="Address" substitutionGroup="ParameterType" />
	<xs:complexType name="Address">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" name="ExtendedAddress" type="TextElement" />
				</xs:sequence>
				<xs:attribute name="PostalCode" type="string" use="optional" />
				<xs:attribute name="City" type="string" use="optional" />
				<xs:attribute name="PostBox" type="string" use="optional" />
				<xs:attribute name="Country" type="string" use="optional" />
				<xs:attribute name="CountryCode" type="string" use="optional" />
				<xs:attribute name="Region" type="string" use="optional" />
				<xs:attribute name="Street" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for AdvancedParams ** -->
	<xs:element name="AdvancedParams">
		<xs:complexType>
			<xs:attribute name="PreserveOPIComments" type="boolean" use="optional" />
			<xs:attribute name="PreserveCopyPage" type="boolean" use="optional" />
			<xs:attribute name="UsePrologue" type="boolean" use="optional" />
			<xs:attribute name="AllowTransparency" type="boolean" use="optional" />
			<xs:attribute name="EmitDSCWarnings" type="boolean" use="optional" />
			<xs:attribute name="PreserveOverprintSettings" type="boolean" use="optional" />
			<xs:attribute name="UCRandBGInfo" use="optional" />
			<xs:attribute name="ParseDSCComments" type="boolean" use="optional" />
			<xs:attribute name="PassThroughJPEGImages" type="boolean" use="optional" />
			<xs:attribute name="LockDistillerParams" type="boolean" use="optional" />
			<xs:attribute name="AllowPSXObjects" type="boolean" use="optional" />
			<xs:attribute name="EmbedJobOptions" type="boolean" use="optional" />
			<xs:attribute name="PreserveHalftoneInfo" type="boolean" use="optional" />
			<xs:attribute name="PreserveEPSInfo" type="boolean" use="optional" />
			<xs:attribute name="TransferFunctionInfo" use="optional" />
			<xs:attribute name="AutoPositionEPSInfo" type="boolean" use="optional" />
			<xs:attribute name="ParseDSCCommentsForDocInfo" type="boolean" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ApprovalDetails ** -->
	<xs:element name="ApprovalDetails">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
			</xs:sequence>
			<xs:attribute name="ApprovalState" use="optional" />
			<xs:attribute name="ApprovalStateDetails" type="string" use="optional" />
			<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ApprovalParams ** -->
	<xs:element name="ApprovalParams" type="ApprovalParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ApprovalParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="MinApprovals" type="integer" use="optional" />
				<xs:attribute name="ApprovalPersonRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ApprovalPerson ** -->
	<xs:element name="ApprovalPerson">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
			</xs:sequence>
			<xs:attribute name="ApprovalRole" use="optional" />
			<xs:attribute name="ApprovalRoleDetails" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ApprovalSuccess ** -->
	<xs:element name="ApprovalSuccess" type="ApprovalSuccess" substitutionGroup="ParameterType" />
	<xs:complexType name="ApprovalSuccess">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ApprovalDetails" />
				</xs:sequence>
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ArgumentValue ** -->
	<xs:element name="ArgumentValue">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PreflightArgument" />
			</xs:sequence>
			<xs:attribute name="Name" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Assembly ** -->
	<xs:element name="Assembly" type="Assembly" substitutionGroup="ParameterType" />
	<xs:complexType name="Assembly">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="PageAssignedList" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="AssemblySection" />
				</xs:sequence>
				<xs:attribute name="JobID" type="shortString" use="optional" />
				<xs:attribute name="PhysicalSection" type="IntegerList" use="optional" />
				<xs:attribute name="AssemblyIDs" type="NMTOKENS" use="optional" />
				<xs:attribute name="BindingSide" use="optional" />
				<xs:attribute name="JogSide" use="optional" />
				<xs:attribute name="Order" use="optional" />
				<xs:attribute name="PageListRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for AssemblySection ** -->
	<xs:element name="AssemblySection">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PageAssignedList" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="AssemblySection" />
			</xs:sequence>
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="Order" use="optional" />
			<xs:attribute name="AssemblyIDs" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for AutomatedOverPrintParams ** -->
	<xs:element name="AutomatedOverPrintParams" type="AutomatedOverPrintParams" substitutionGroup="ParameterType" />
	<xs:complexType name="AutomatedOverPrintParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="TextBlackLevel" type="double" use="optional" />
				<xs:attribute name="KnockOutCMYKWhite" type="boolean" use="optional" />
				<xs:attribute name="TextSizeThreshold" type="integer" use="optional" />
				<xs:attribute name="LineArtBlackLevel" type="double" use="optional" />
				<xs:attribute name="OverPrintBlackLineArt" type="boolean" use="optional" />
				<xs:attribute name="OverPrintBlackText" type="boolean" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for BarcodeCompParams ** -->
	<xs:element name="BarcodeCompParams" type="BarcodeCompParams" substitutionGroup="ParameterType" />
	<xs:complexType name="BarcodeCompParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="CompensationValue" type="double" use="optional" />
				<xs:attribute name="CompensationProcess" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for BarcodeDetails ** -->
	<xs:element name="BarcodeDetails">
		<xs:complexType>
			<xs:attribute name="BarcodeVersion" type="NMTOKEN" use="optional" />
			<xs:attribute name="XCells" type="integer" use="optional" />
			<xs:attribute name="ErrorCorrectionLevel" type="NMTOKEN" use="optional" />
			<xs:attribute name="YCells" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for BarcodeProductionParams ** -->
	<xs:element name="BarcodeProductionParams">
		<xs:complexType>
			<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
			<xs:attribute name="BarcodeReproParamsRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for BarcodeReproParams ** -->
	<xs:element name="BarcodeReproParams" type="BarcodeReproParams" substitutionGroup="ParameterType" />
	<xs:complexType name="BarcodeReproParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Magnification" type="double" use="optional" />
				<xs:attribute name="ModuleHeight" type="double" use="optional" />
				<xs:attribute name="Height" type="double" use="optional" />
				<xs:attribute name="Masking" use="optional" />
				<xs:attribute name="ModuleWidth" type="double" use="optional" />
				<xs:attribute name="Ratio" type="double" use="optional" />
				<xs:attribute name="BearerBars" use="optional" />
				<xs:attribute name="BarcodeCompParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for BendingParams ** -->
	<xs:element name="BendingParams" type="BendingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="BendingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Bend" type="boolean" use="optional" />
				<xs:attribute name="PunchType" type="string" use="optional" />
				<xs:attribute name="Punch" type="boolean" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for BinderySignature ** -->
	<xs:element name="BinderySignature" type="BinderySignature" substitutionGroup="ParameterType" />
	<xs:complexType name="BinderySignature">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Fold" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="SignatureCell" />
				</xs:sequence>
				<xs:attribute name="BindingEdge" use="optional" />
				<xs:attribute name="BindingOrientation" use="optional" />
				<xs:attribute name="JogEdge" use="optional" />
				<xs:attribute name="FoldCatalog" type="string" use="optional" />
				<xs:attribute name="WebCellAlignment" type="XYPair" use="optional" />
				<xs:attribute name="StaggerContinuous" type="boolean" use="optional" />
				<xs:attribute name="StaggerRows" type="string" use="optional" />
				<xs:attribute name="BinderySignatureType" use="optional" />
				<xs:attribute name="FoldLay" use="optional" />
				<xs:attribute name="AlignmentReferenceWeb" type="NMTOKEN" use="optional" />
				<xs:attribute name="OutsideGutter" type="boolean" use="optional" />
				<xs:attribute name="NumberUp" type="XYPair" use="optional" />
				<xs:attribute name="StaggerColumns" type="string" use="optional" />
				<xs:attribute name="DieLayoutRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for BindingQualityMeasurement ** -->
	<xs:element name="BindingQualityMeasurement">
		<xs:complexType>
			<xs:attribute name="PullOutValue" type="double" use="optional" />
			<xs:attribute name="FlexValue" type="double" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for BindingQualityParams ** -->
	<xs:element name="BindingQualityParams">
		<xs:complexType>
			<xs:attribute name="PullOutValue" type="double" use="optional" />
			<xs:attribute name="FlexValue" type="double" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for BoxApplication ** -->
	<xs:element name="BoxApplication">
		<xs:complexType>
			<xs:attribute name="ComponentRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for BoxArgument ** -->
	<xs:element name="BoxArgument">
		<xs:complexType>
			<xs:attribute name="Overlap" type="boolean" use="optional" />
			<xs:attribute name="Box" use="optional" />
			<xs:attribute name="MirrorMargins" use="optional" />
			<xs:attribute name="Offset" type="rectangle" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for BoxFoldAction ** -->
	<xs:element name="BoxFoldAction">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueLine" />
			</xs:sequence>
			<xs:attribute name="FoldIndex" type="XYPair" use="optional" />
			<xs:attribute name="Action" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for BoxFoldingParams ** -->
	<xs:element name="BoxFoldingParams" type="BoxFoldingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="BoxFoldingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BoxFoldAction" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueLine" />
				</xs:sequence>
				<xs:attribute name="BlankDimensionsY" type="string" use="optional" />
				<xs:attribute name="BoxFoldingType" use="optional" />
				<xs:attribute name="BlankDimensionsX" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for BoxToBoxDifference ** -->
	<xs:element name="BoxToBoxDifference">
		<xs:complexType>
			<xs:attribute name="ToBox" use="optional" />
			<xs:attribute name="FromBox" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ByteMap ** -->
	<xs:element name="ByteMap" type="ByteMap" substitutionGroup="ParameterType" />
	<xs:complexType name="ByteMap">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="PixelColorant" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Band" />
				</xs:sequence>
				<xs:attribute name="BandOrdering" use="optional" />
				<xs:attribute name="ElementType" use="optional" />
				<xs:attribute name="Halftoned" type="boolean" use="optional" />
				<xs:attribute name="Resolution" type="XYPair" use="optional" />
				<xs:attribute name="FrameWidth" type="integer" use="optional" />
				<xs:attribute name="Interleaved" type="boolean" use="optional" />
				<xs:attribute name="FrameHeight" type="integer" use="optional" />
				<xs:attribute name="PixelSkip" type="integer" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
				<xs:attribute name="ColorRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for CCITTFaxParams ** -->
	<xs:element name="CCITTFaxParams">
		<xs:complexType>
			<xs:attribute name="K" type="integer" use="optional" />
			<xs:attribute name="Uncompressed" type="boolean" use="optional" />
			<xs:attribute name="EncodedByteAlign" type="boolean" use="optional" />
			<xs:attribute name="EndOfBlock" type="boolean" use="optional" />
			<xs:attribute name="EndOfLine" type="boolean" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for CIELABMeasuringField ** -->
	<xs:element name="CIELABMeasuringField" type="CIELABMeasuringField" substitutionGroup="ParameterType" />
	<xs:complexType name="CIELABMeasuringField">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Percentages" type="string" use="optional" />
				<xs:attribute name="ScreenRuling" type="string" use="optional" />
				<xs:attribute name="ScreenShape" type="string" use="optional" />
				<xs:attribute name="Center" type="XYPair" use="optional" />
				<xs:attribute name="Diameter" type="double" use="optional" />
				<xs:attribute name="CIELab" type="LabColor" use="optional" />
				<xs:attribute name="Tolerance" type="double" use="optional" />
				<xs:attribute name="ColorMeasurementConditionsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for CollatingItem ** -->
	<xs:element name="CollatingItem">
		<xs:complexType>
			<xs:attribute name="BundleDepth" type="integer" use="optional" />
			<xs:attribute name="TransformationContext" use="optional" />
			<xs:attribute name="Orientation" type="EnumOrientation" use="optional" />
			<xs:attribute name="Amount" type="integer" use="optional" />
			<xs:attribute name="Transformation" type="matrix" use="optional" />
			<xs:attribute name="MediaRef" type="IDREF" use="optional" />
			<xs:attribute name="ComponentRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for CollectingParams ** -->
	<xs:element name="CollectingParams" type="CollectingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="CollectingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Color ** -->
	<xs:element name="Color" type="Color" substitutionGroup="ParameterType" />
	<xs:complexType name="Color">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TransferCurve" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="PrintConditionColor" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="DeviceNColor" />
				</xs:sequence>
				<xs:attribute name="Lab" type="LabColor" use="optional" />
				<xs:attribute name="RawName" type="hexBinary" use="optional" />
				<xs:attribute name="NeutralDensity" type="double" use="optional" />
				<xs:attribute name="MappingSelection" use="optional" />
				<xs:attribute name="ColorDetails" type="string" use="optional" />
				<xs:attribute name="Name" type="string" use="optional" />
				<xs:attribute name="Gray" type="double" use="optional" />
				<xs:attribute name="Density" type="double" use="optional" />
				<xs:attribute name="CMYK" type="CMYKColor" use="optional" />
				<xs:attribute name="ColorBookPrefix" type="string" use="optional" />
				<xs:attribute name="ActualColorName" type="string" use="optional" />
				<xs:attribute name="ColorBook" type="string" use="optional" />
				<xs:attribute name="ColorBookEntry" type="string" use="optional" />
				<xs:attribute name="ColorBookSuffix" type="string" use="optional" />
				<xs:attribute name="ColorType" use="optional" />
				<xs:attribute name="ColorName" type="string" use="optional" />
				<xs:attribute name="MediaType" type="string" use="optional" />
				<xs:attribute name="sRGB" type="string" use="optional" />
				<xs:attribute name="ColorMeasurementConditionsRef" type="IDREF" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ColorantAlias ** -->
	<xs:element name="ColorantAlias" type="ColorantAlias" substitutionGroup="ParameterType" />
	<xs:complexType name="ColorantAlias">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="RawNames" type="Any" use="optional" />
				<xs:attribute name="ReplacementColorantName" type="string" use="optional" />
				<xs:attribute name="SeparationNames" type="NMTOKENS" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ColorantControl ** -->
	<xs:element name="ColorantControl" type="ColorantControl" substitutionGroup="ParameterType" />
	<xs:complexType name="ColorantControl">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="DeviceNSpace" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ColorSpaceSubstitute" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ColorantAlias" />
				</xs:sequence>
				<xs:attribute name="ColorantParams" type="NMTOKENS" use="optional" />
				<xs:attribute name="ProcessColorModel" type="NMTOKEN" use="optional" />
				<xs:attribute name="ForceSeparations" type="boolean" use="optional" />
				<xs:attribute name="ColorRef" type="IDREF" use="optional" />
				<xs:attribute name="DeviceColorantOrder" type="NMTOKENS" use="optional" />
				<xs:attribute name="ColorantConvertProcess" type="NMTOKENS" use="optional" />
				<xs:attribute name="ColorantOrder" type="NMTOKENS" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ColorantZoneDetails ** -->
	<xs:element name="ColorantZoneDetails">
		<xs:complexType>
			<xs:attribute name="Colorant" type="string" use="optional" />
			<xs:attribute name="TrapColorScaling" type="double" use="optional" />
			<xs:attribute name="StepLimit" type="double" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ColorControlStrip ** -->
	<xs:element name="ColorControlStrip" type="ColorControlStrip" substitutionGroup="ParameterType" />
	<xs:complexType name="ColorControlStrip">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="DensityMeasuringField" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="CIELABMeasuringField" />
				</xs:sequence>
				<xs:attribute name="Rotation" type="double" use="optional" />
				<xs:attribute name="Size" type="XYPair" use="optional" />
				<xs:attribute name="Center" type="XYPair" use="optional" />
				<xs:attribute name="StripType" type="NMTOKEN" use="optional" />
				<xs:attribute name="SeparationNames" type="NMTOKENS" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ColorsResultsPool ** -->
	<xs:element name="ColorsResultsPool">
		<xs:complexType>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ComChannel ** -->
	<xs:element name="ComChannel" type="ComChannel" substitutionGroup="ParameterType" />
	<xs:complexType name="ComChannel">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="ChannelType" use="optional" />
				<xs:attribute name="ChannelTypeDetails" type="NMTOKEN" use="optional" />
				<xs:attribute name="ChannelUsage" type="NMTOKENS" use="optional" />
				<xs:attribute name="Locator" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Company ** -->
	<xs:element name="Company" type="Company" substitutionGroup="ParameterType" />
	<xs:complexType name="Company">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" name="OrganizationalUnit" type="TextElement" />
				</xs:sequence>
				<xs:attribute name="OrganizationName" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Component ** -->
	<xs:element name="Component" type="Component" substitutionGroup="ResourceType" />
	<xs:complexType name="Component">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Disjointing" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Bundle" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Assembly" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
				<xs:attribute name="AssemblyIDs" type="NMTOKENS" use="optional" />
				<xs:attribute name="Overfold" type="double" use="optional" />
				<xs:attribute name="ComponentType" use="optional">
					<xs:simpleType>
						<xs:list itemType="EnumComponentType" />
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="SpineThickness" type="double" use="optional" />
				<xs:attribute name="OverfoldSide" use="optional" />
				<xs:attribute name="SheetPart" type="rectangle" use="optional" />
				<xs:attribute name="Dimensions" type="shape" use="optional" />
				<xs:attribute name="PageListIndex" type="IntegerRangeList" use="optional" />
				<xs:attribute name="SurfaceCount" type="integer" use="optional" />
				<xs:attribute name="CartonTopFlaps" type="XYPair" use="optional" />
				<xs:attribute name="MaxHeat" type="double" use="optional" />
				<xs:attribute name="ReaderPageCount" type="integer" use="optional" />
				<xs:attribute name="MediaRef" type="IDREF" use="optional" />
				<xs:attribute name="PageListRef" type="IDREF" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
				<xs:attribute name="LayoutRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ConstraintValue ** -->
	<xs:element name="ConstraintValue">
		<xs:complexType>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Contact ** -->
	<xs:element name="Contact" type="Contact" substitutionGroup="ParameterType" />
	<xs:complexType name="Contact">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Person" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Company" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ComChannel" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Address" />
				</xs:sequence>
				<xs:attribute name="ContactTypeDetails" type="string" use="optional" />
				<xs:attribute name="ContactTypes" type="NMTOKENS" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Container ** -->
	<xs:element name="Container">
		<xs:complexType>
			<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ContentData ** -->
	<xs:element name="ContentData">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ContentMetaData" />
			</xs:sequence>
			<xs:attribute name="HasBleeds" type="boolean" use="optional" />
			<xs:attribute name="ContentType" type="NMTOKEN" use="optional" />
			<xs:attribute name="IsBlank" type="boolean" use="optional" />
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="JobID" type="string" use="optional" />
			<xs:attribute name="CatalogDetails" type="string" use="optional" />
			<xs:attribute name="IsTrapped" type="boolean" use="optional" />
			<xs:attribute name="ContentRefs" type="IDREFS" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="CatalogID" type="string" use="optional" />
			<xs:attribute name="ElementColorParamsRef" type="IDREF" use="optional" />
			<xs:attribute name="ImageCompressionParamsRef" type="IDREF" use="optional" />
			<xs:attribute name="ScreeningParamsRef" type="IDREF" use="optional" />
			<xs:attribute name="SeparationNames" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ContentList ** -->
	<xs:element name="ContentList" type="ContentList" substitutionGroup="ParameterType" />
	<xs:complexType name="ContentList">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="ContentDataRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ContentMetaData ** -->
	<xs:element name="ContentMetaData">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Employee" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
			</xs:sequence>
			<xs:attribute name="Title" type="string" use="optional" />
			<xs:attribute name="ISBN13" type="string" use="optional" />
			<xs:attribute name="ISBN10" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ContentObject ** -->
	<xs:element name="ContentObject" substitutionGroup="PlacedObject" type="ContentObject" />
	<xs:complexType name="ContentObject">
		<xs:complexContent>
			<xs:extension base="PlacedObject">
				<xs:attribute name="CompensationCTMTemplate" type="string" use="optional" />
				<xs:attribute name="OrdExpression" type="string" use="optional" />
				<xs:attribute name="TrimClipPath" type="PDFPath" use="optional" />
				<xs:attribute name="ClipBox" type="rectangle" use="optional" />
				<xs:attribute name="OrdID" type="integer" use="optional" />
				<xs:attribute name="LogicalStackOrd" type="integer" use="optional" />
				<xs:attribute name="Anchor" type="EnumAnchor" use="optional" />
				<xs:attribute name="ClipBoxFormat" type="string" use="optional" />
				<xs:attribute name="TrimCTM" type="matrix" use="optional" />
				<xs:attribute name="LayerID" type="integer" use="optional" />
				<xs:attribute name="SourceClipPath" type="PDFPath" use="optional" />
				<xs:attribute name="ClipBoxTemplate" type="string" use="optional" />
				<xs:attribute name="ClipPath" type="PDFPath" use="optional" />
				<xs:attribute name="SetOrd" type="integer" use="optional" />
				<xs:attribute name="Ord" type="integer" use="optional" />
				<xs:attribute name="DocOrd" type="integer" use="optional" />
				<xs:attribute name="TrimSize" type="XYPair" use="optional" />
				<xs:attribute name="HalfTonePhaseOrigin" type="XYPair" use="optional" />
				<xs:attribute name="CompensationCTMFormat" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>


	<!-- ** Complex type definition for ConventionalPrintingParams ** -->
	<xs:element name="ConventionalPrintingParams" type="ConventionalPrintingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ConventionalPrintingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="WorkStyle" type="EnumWorkStyle" use="optional" />
				<xs:attribute name="ModuleDrying" use="optional" />
				<xs:attribute name="MediaLocation" type="string" use="optional" />
				<xs:attribute name="NonPrintableMarginLeft" type="double" use="optional" />
				<xs:attribute name="Speed" type="double" use="optional" />
				<xs:attribute name="DirectProof" type="boolean" use="optional" />
				<xs:attribute name="NonPrintableMarginTop" type="double" use="optional" />
				<xs:attribute name="NonPrintableMarginRight" type="double" use="optional" />
				<xs:attribute name="Drying" use="optional" />
				<xs:attribute name="SheetLay" use="optional" />
				<xs:attribute name="PrintingTechnology" use="optional" />
				<xs:attribute name="PerfectingModule" type="integer" use="optional" />
				<xs:attribute name="FountainSolution" use="optional" />
				<xs:attribute name="PrintingType" use="optional" />
				<xs:attribute name="NonPrintableMarginBottom" type="double" use="optional" />
				<xs:attribute name="FirstSurface" use="optional" />
				<xs:attribute name="Powder" type="double" use="optional" />
				<xs:attribute name="ApprovalParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ConvertingConfig ** -->
	<xs:element name="ConvertingConfig">
		<xs:complexType>
			<xs:attribute name="SheetHeight" type="string" use="optional" />
			<xs:attribute name="MarginBottom" type="double" use="optional" />
			<xs:attribute name="SheetWidth" type="string" use="optional" />
			<xs:attribute name="MarginLeft" type="double" use="optional" />
			<xs:attribute name="MarginTop" type="double" use="optional" />
			<xs:attribute name="MarginRight" type="double" use="optional" />
			<xs:attribute name="DeviceRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for CostCenter ** -->
	<xs:element name="CostCenter">
		<xs:complexType>
			<xs:attribute name="CostCenterID" type="shortString" use="optional" />
			<xs:attribute name="Name" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Cover ** -->
	<xs:element name="Cover">
		<xs:complexType>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for CutBlock ** -->
	<xs:element name="CutBlock" type="CutBlock" substitutionGroup="ParameterType" />
	<xs:complexType name="CutBlock">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="BlockSubdivision" type="XYPair" use="optional" />
				<xs:attribute name="AssemblyIDs" type="NMTOKENS" use="optional" />
				<xs:attribute name="BlockType" use="optional" />
				<xs:attribute name="BlockElementSize" type="XYPair" use="optional" />
				<xs:attribute name="CutWidth" type="double" use="optional" />
				<xs:attribute name="BlockSize" type="XYPair" use="optional" />
				<xs:attribute name="BlockTrf" type="matrix" use="optional" />
				<xs:attribute name="BlockElementType" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for CylinderLayout ** -->
	<xs:element name="CylinderLayout" type="CylinderLayout" substitutionGroup="ParameterType" />
	<xs:complexType name="CylinderLayout">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="CylinderPosition" />
				</xs:sequence>
				<xs:attribute name="DeviceID" type="NMTOKEN" use="optional" />
				<xs:attribute name="LayoutRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for CylinderLayoutPreparationParams ** -->
	<xs:element name="CylinderLayoutPreparationParams" type="CylinderLayoutPreparationParams" substitutionGroup="ParameterType" />
	<xs:complexType name="CylinderLayoutPreparationParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ProductionPath" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for CylinderPosition ** -->
	<xs:element name="CylinderPosition">
		<xs:complexType>
			<xs:attribute name="PlatePosition" type="XYPairRangeList" use="optional" />
			<xs:attribute name="PlateUsage" use="optional" />
			<xs:attribute name="PlateType" use="optional" />
			<xs:attribute name="DeviceModuleIndex" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DBMergeParams ** -->
	<xs:element name="DBMergeParams" type="DBMergeParams" substitutionGroup="ParameterType" />
	<xs:complexType name="DBMergeParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="SplitDocuments" type="integer" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for DBRules ** -->
	<xs:element name="DBRules" type="DBRules" substitutionGroup="ParameterType" />
	<xs:complexType name="DBRules">
		<xs:complexContent>
			<xs:extension base="ParameterType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for DBSelection ** -->
	<xs:element name="DBSelection" type="DBSelection" substitutionGroup="ParameterType" />
	<xs:complexType name="DBSelection">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Select" type="string" use="optional" />
				<xs:attribute name="Records" type="IntegerRangeList" use="optional" />
				<xs:attribute name="DataBase" type="URL" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for DCTParams ** -->
	<xs:element name="DCTParams">
		<xs:complexType>
			<xs:attribute name="QuantTable" type="string" use="optional" />
			<xs:attribute name="SourceCSs" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumSourceCSs" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="HuffTable" type="string" use="optional" />
			<xs:attribute name="HSamples" type="IntegerList" use="optional" />
			<xs:attribute name="VSamples" type="IntegerList" use="optional" />
			<xs:attribute name="ColorTransform" use="optional" />
			<xs:attribute name="QFactor" type="double" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DeliveryParams ** -->
	<xs:element name="DeliveryParams" type="DeliveryParams" substitutionGroup="ParameterType" />
	<xs:complexType name="DeliveryParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Drop" />
				</xs:sequence>
				<xs:attribute name="Required" type="dateTime" use="optional" />
				<xs:attribute name="Transfer" use="optional" />
				<xs:attribute name="ServiceLevel" type="string" use="optional" />
				<xs:attribute name="Earliest" type="dateTime" use="optional" />
				<xs:attribute name="Method" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for DensityMeasuringField ** -->
	<xs:element name="DensityMeasuringField" type="DensityMeasuringField" substitutionGroup="ParameterType" />
	<xs:complexType name="DensityMeasuringField">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="ToleranceDotGain" type="XYPair" use="optional" />
				<xs:attribute name="Setup" type="string" use="optional" />
				<xs:attribute name="Density" type="string" use="optional" />
				<xs:attribute name="DotGain" type="double" use="optional" />
				<xs:attribute name="Percentage" type="double" use="optional" />
				<xs:attribute name="ToleranceCyan" type="XYPair" use="optional" />
				<xs:attribute name="ToleranceMagenta" type="XYPair" use="optional" />
				<xs:attribute name="ToleranceBlack" type="XYPair" use="optional" />
				<xs:attribute name="ToleranceYellow" type="XYPair" use="optional" />
				<xs:attribute name="Screen" type="string" use="optional" />
				<xs:attribute name="Center" type="XYPair" use="optional" />
				<xs:attribute name="Diameter" type="double" use="optional" />
				<xs:attribute name="ColorMeasurementConditionsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Dependencies ** -->
	<xs:element name="Dependencies">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="RunList" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DeviceNColor ** -->
	<xs:element name="DeviceNColor">
		<xs:complexType>
			<xs:attribute name="N" type="integer" use="optional" />
			<xs:attribute name="ColorList" type="string" use="optional" />
			<xs:attribute name="Name" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DeviceNSpace ** -->
	<xs:element name="DeviceNSpace" type="DeviceNSpace" substitutionGroup="ParameterType" />
	<xs:complexType name="DeviceNSpace">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Name" type="string" use="optional" />
				<xs:attribute name="N" type="integer" use="optional" />
				<xs:attribute name="SeparationNames" type="NMTOKENS" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for DieLayout ** -->
	<xs:element name="DieLayout" type="DieLayout" substitutionGroup="ParameterType" />
	<xs:complexType name="DieLayout">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="RuleLength" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Station" />
				</xs:sequence>
				<xs:attribute name="Waste" type="double" use="optional" />
				<xs:attribute name="DieSide" use="optional" />
				<xs:attribute name="MediaSide" use="optional" />
				<xs:attribute name="Rotated" type="boolean" use="optional" />
				<xs:attribute name="MediaRef" type="IDREF" use="optional" />
				<xs:attribute name="DeviceRef" type="IDREF" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for DieLayoutProductionParams ** -->
	<xs:element name="DieLayoutProductionParams" type="DieLayoutProductionParams" substitutionGroup="ParameterType" />
	<xs:complexType name="DieLayoutProductionParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="RepeatDesc" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ConvertingConfig" />
				</xs:sequence>
				<xs:attribute name="Position" use="optional" />
				<xs:attribute name="Estimate" type="boolean" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for DigitalMedia ** -->
	<xs:element name="DigitalMedia" type="DigitalMedia" substitutionGroup="ResourceType" />
	<xs:complexType name="DigitalMedia">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
				<xs:attribute name="Capacity" type="integer" use="optional" />
				<xs:attribute name="MediaTypeDetails" type="string" use="optional" />
				<xs:attribute name="MediaLabel" type="string" use="optional" />
				<xs:attribute name="MediaType" type="NMTOKEN" use="optional" />
				<xs:attribute name="RunListRef" type="IDREF" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for DigitalPrintingParams ** -->
	<xs:element name="DigitalPrintingParams" type="DigitalPrintingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="DigitalPrintingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Disjointing" />
				</xs:sequence>
				<xs:attribute name="NonPrintableMarginLeft" type="double" use="optional" />
				<xs:attribute name="NonPrintableMarginTop" type="double" use="optional" />
				<xs:attribute name="NonPrintableMarginRight" type="double" use="optional" />
				<xs:attribute name="DirectProofAmount" type="integer" use="optional" />
				<xs:attribute name="SheetLay" use="optional" />
				<xs:attribute name="ManualFeed" type="boolean" use="optional" />
				<xs:attribute name="Collate" use="optional" />
				<xs:attribute name="PageDelivery" use="optional" />
				<xs:attribute name="OutputBin" type="NMTOKEN" use="optional" />
				<xs:attribute name="PrintingType" use="optional" />
				<xs:attribute name="NonPrintableMarginBottom" type="double" use="optional" />
				<xs:attribute name="Sides" use="optional" />
				<xs:attribute name="MediaRef" type="IDREF" use="optional" />
				<xs:attribute name="ApprovalParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="ComponentRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Disjointing ** -->
	<xs:element name="Disjointing">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="InsertSheet" />
			</xs:sequence>
			<xs:attribute name="OffsetAmount" type="integer" use="optional" />
			<xs:attribute name="OffsetDirection" use="optional" />
			<xs:attribute name="Offset" type="XYPair" use="optional" />
			<xs:attribute name="Number" type="integer" use="optional" />
			<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Disposition ** -->
	<xs:element name="Disposition">
		<xs:complexType>
			<xs:attribute name="Until" type="dateTime" use="optional" />
			<xs:attribute name="MinDuration" type="duration" use="optional" />
			<xs:attribute name="ExtraDuration" type="duration" use="optional" />
			<xs:attribute name="Priority" type="integer" use="optional" />
			<xs:attribute name="DispositionUsage" use="optional" />
			<xs:attribute name="DispositionAction" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DividingParams ** -->
	<xs:element name="DividingParams" type="DividingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="DividingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for DocumentResultsPool ** -->
	<xs:element name="DocumentResultsPool">
		<xs:complexType>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Drop ** -->
	<xs:element name="Drop">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="DropItem" />
			</xs:sequence>
			<xs:attribute name="TrackingID" type="string" use="optional" />
			<xs:attribute name="ServiceLevel" type="string" use="optional" />
			<xs:attribute name="Required" type="dateTime" use="optional" />
			<xs:attribute name="Earliest" type="dateTime" use="optional" />
			<xs:attribute name="Transfer" use="optional" />
			<xs:attribute name="Method" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DropItem ** -->
	<xs:element name="DropItem">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="RegisterRibbon" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Pallet" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Strap" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Ink" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Bundle" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="RollStand" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="DigitalMedia" />
			</xs:sequence>
			<xs:attribute name="TotalAmount" type="integer" use="optional" />
			<xs:attribute name="TrackingID" type="string" use="optional" />
			<xs:attribute name="TotalWeight" type="double" use="optional" />
			<xs:attribute name="Unit" type="string" use="optional" />
			<xs:attribute name="ActualAmount" type="integer" use="optional" />
			<xs:attribute name="TotalVolume" type="double" use="optional" />
			<xs:attribute name="TotalDimensions" type="shape" use="optional" />
			<xs:attribute name="Amount" type="integer" use="optional" />
			<xs:attribute name="ActualTotalAmount" type="integer" use="optional" />
			<xs:attribute name="MediaRef" type="IDREF" use="optional" />
			<xs:attribute name="ToolRef" type="IDREF" use="optional" />
			<xs:attribute name="ExposedMediaRef" type="IDREF" use="optional" />
			<xs:attribute name="ComponentRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DynamicField ** -->
	<xs:element name="DynamicField">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="DeviceMark" />
			</xs:sequence>
			<xs:attribute name="OrdExpression" type="string" use="optional" />
			<xs:attribute name="ReplaceField" type="string" use="optional" />
			<xs:attribute name="Ord" type="integer" use="optional" />
			<xs:attribute name="Format" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DynamicInput ** -->
	<xs:element name="DynamicInput" />

	<!-- ** Complex type definition for ElementColorParams ** -->
	<xs:element name="ElementColorParams" type="ElementColorParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ElementColorParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ColorSpaceConversionOp" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ColorantAlias" />
				</xs:sequence>
				<xs:attribute name="ICCOutputProfileUsage" use="optional" />
				<xs:attribute name="ColorManagementSystem" type="NMTOKEN" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
				<xs:attribute name="AutomatedOverPrintParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Employee ** -->
	<xs:element name="Employee" type="Employee" substitutionGroup="ResourceType" />
	<xs:complexType name="Employee">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Person" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="CostCenter" />
				</xs:sequence>
				<xs:attribute name="Shift" type="string" use="optional" />
				<xs:attribute name="Roles" type="NMTOKENS" use="optional" />
				<xs:attribute name="PersonalID" type="shortString" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ExposedMedia ** -->
	<xs:element name="ExposedMedia" type="ExposedMedia" substitutionGroup="ResourceType" />
	<xs:complexType name="ExposedMedia">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
				<xs:attribute name="Polarity" type="boolean" use="optional" />
				<xs:attribute name="PunchType" type="string" use="optional" />
				<xs:attribute name="PageListIndex" type="IntegerRangeList" use="optional" />
				<xs:attribute name="ProofName" type="string" use="optional" />
				<xs:attribute name="Resolution" type="XYPair" use="optional" />
				<xs:attribute name="ProofQuality" use="optional" />
				<xs:attribute name="PlateType" use="optional" />
				<xs:attribute name="ProofType" use="optional" />
				<xs:attribute name="ColorType" use="optional" />
				<xs:attribute name="MediaRef" type="IDREF" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
				<xs:attribute name="PageListRef" type="IDREF" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
				<xs:attribute name="ScreeningParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Expr ** -->
	<xs:element name="Expr">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Term" />
			</xs:sequence>
			<xs:attribute name="Path" type="XPath" use="optional" />
			<xs:attribute name="Value" type="string" use="optional" />
			<xs:attribute name="Name" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ExternalImpositionTemplate ** -->
	<xs:element name="ExternalImpositionTemplate" type="ExternalImpositionTemplate" substitutionGroup="ParameterType" />
	<xs:complexType name="ExternalImpositionTemplate">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ExtraValues ** -->
	<xs:element name="ExtraValues">
		<xs:complexType>
			<xs:attribute name="Usage" type="NMTOKEN" use="optional" />
			<xs:attribute name="Value" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Feeder ** -->
	<xs:element name="Feeder">
		<xs:complexType>
			<xs:attribute name="Position" type="integer" use="optional" />
			<xs:attribute name="Opening" use="optional" />
			<xs:attribute name="FeederType" type="NMTOKEN" use="optional" />
			<xs:attribute name="AlternatePositions" type="IntegerList" use="optional" />
			<xs:attribute name="FeederSynchronization" use="optional" />
			<xs:attribute name="Loading" type="NMTOKEN" use="optional" />
			<xs:attribute name="MediaRef" type="IDREF" use="optional" />
			<xs:attribute name="ComponentRef" type="IDREF" use="optional" />
			<xs:attribute name="FeederQualityParamsRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for FeederQualityParams ** -->
	<xs:element name="FeederQualityParams">
		<xs:complexType>
			<xs:attribute name="DoubleFeeds" type="integer" use="optional" />
			<xs:attribute name="IncorrectComponentQuality" use="optional" />
			<xs:attribute name="BadFeeds" type="integer" use="optional" />
			<xs:attribute name="BadFeedQuality" use="optional" />
			<xs:attribute name="DoubleFeedQuality" use="optional" />
			<xs:attribute name="IncorrectComponents" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for FeedingParams ** -->
	<xs:element name="FeedingParams" type="FeedingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="FeedingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="CollatingItem" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Feeder" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for FileAlias ** -->
	<xs:element name="FileAlias">
		<xs:complexType>
			<xs:attribute name="RawAlias" type="hexBinary" use="optional" />
			<xs:attribute name="Alias" type="string" use="optional" />
			<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for FileSpec ** -->
	<xs:element name="FileSpec" type="FileSpec" substitutionGroup="ParameterType" />
	<xs:complexType name="FileSpec">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Container" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Disposition" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="FileAlias" />
				</xs:sequence>
				<xs:attribute name="DocumentNaturalLang" type="language" use="optional" />
				<xs:attribute name="Compression" type="NMTOKEN" use="optional" />
				<xs:attribute name="ResourceUsage" type="NMTOKEN" use="optional" />
				<xs:attribute name="URL" type="URL" use="optional" />
				<xs:attribute name="FileVersion" type="string" use="optional" />
				<xs:attribute name="Password" type="string" use="optional" />
				<xs:attribute name="MimeType" type="string" use="optional" />
				<xs:attribute name="AppOS" type="string" use="optional" />
				<xs:attribute name="Encoding" type="string" use="optional" />
				<xs:attribute name="SearchDepth" type="integer" use="optional" />
				<xs:attribute name="CheckSum" type="hexBinary" use="optional" />
				<xs:attribute name="Application" type="string" use="optional" />
				<xs:attribute name="UID" type="string" use="optional" />
				<xs:attribute name="FileFormat" type="string" use="optional" />
				<xs:attribute name="RequestQuality" type="double" use="optional" />
				<xs:attribute name="FileTemplate" type="string" use="optional" />
				<xs:attribute name="FileSize" type="integer" use="optional" />
				<xs:attribute name="MimeTypeVersion" type="string" use="optional" />
				<xs:attribute name="AppVersion" type="string" use="optional" />
				<xs:attribute name="UserFileName" type="string" use="optional" />
				<xs:attribute name="PageOrder" use="optional" />
				<xs:attribute name="FileTargetDeviceModel" type="string" use="optional" />
				<xs:attribute name="OSVersion" type="string" use="optional" />
				<xs:attribute name="OverwritePolicy" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for FlateParams ** -->
	<xs:element name="FlateParams">
		<xs:complexType>
			<xs:attribute name="Effort" type="integer" use="optional" />
			<xs:attribute name="Predictor" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for FolderProduction ** -->
	<xs:element name="FolderProduction">
		<xs:complexType>
			<xs:attribute name="FolderModuleIndex" type="integer" use="optional" />
			<xs:attribute name="ProductionType" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for FoldOperation ** -->
	<xs:element name="FoldOperation" type="FoldOperation" substitutionGroup="ParameterType" />
	<xs:complexType name="FoldOperation">
		<xs:complexContent>
			<xs:extension base="ParameterType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for FontParams ** -->
	<xs:element name="FontParams" type="FontParams" substitutionGroup="ParameterType" />
	<xs:complexType name="FontParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="SubsetFonts" type="boolean" use="optional" />
				<xs:attribute name="MaxSubsetPct" type="integer" use="optional" />
				<xs:attribute name="CannotEmbedFontPolicy" use="optional" />
				<xs:attribute name="NeverEmbed" type="NMTOKENS" use="optional" />
				<xs:attribute name="EmbedAllFonts" type="boolean" use="optional" />
				<xs:attribute name="AlwaysEmbed" type="NMTOKENS" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for FontPolicy ** -->
	<xs:element name="FontPolicy" type="FontPolicy" substitutionGroup="ParameterType" />
	<xs:complexType name="FontPolicy">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="UseDefaultFont" type="boolean" use="optional" />
				<xs:attribute name="UseFontEmulation" type="boolean" use="optional" />
				<xs:attribute name="PreferredFont" type="NMTOKEN" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for GeneralID ** -->
	<xs:element name="GeneralID">
		<xs:complexType>
			<xs:attribute name="IDValue" type="string" use="optional" />
			<xs:attribute name="DataType" use="optional" />
			<xs:attribute name="IDUsage" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for IdentificationField ** -->
	<xs:element name="IdentificationField" type="IdentificationField" substitutionGroup="ParameterType" />
	<xs:complexType name="IdentificationField">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Purpose" use="optional" />
				<xs:attribute name="Position" use="optional" />
				<xs:attribute name="EncodingDetails" type="NMTOKEN" use="optional" />
				<xs:attribute name="BoundingBox" type="rectangle" use="optional" />
				<xs:attribute name="ValueFormat" type="string" use="optional" />
				<xs:attribute name="Orientation" type="matrix" use="optional" />
				<xs:attribute name="PurposeDetails" type="NMTOKEN" use="optional" />
				<xs:attribute name="Value" type="string" use="optional" />
				<xs:attribute name="Page" type="integer" use="optional" />
				<xs:attribute name="ValueTemplate" type="string" use="optional" />
				<xs:attribute name="Encoding" use="optional" />
				<xs:attribute name="Format" type="Any" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ImageCompressionParams ** -->
	<xs:element name="ImageCompressionParams" type="ImageCompressionParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ImageCompressionParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ImageCompression" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ImageReplacementParams ** -->
	<xs:element name="ImageReplacementParams" type="ImageReplacementParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ImageReplacementParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="MaxSearchRecursion" type="integer" use="optional" />
				<xs:attribute name="MinResolution" type="double" use="optional" />
				<xs:attribute name="IgnoreExtensions" type="NMTOKENS" use="optional" />
				<xs:attribute name="ImageReplacementStrategy" use="optional" />
				<xs:attribute name="ImagePreScanStrategy" type="NMTOKEN" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ImageSetterParams ** -->
	<xs:element name="ImageSetterParams" type="ImageSetterParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ImageSetterParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="FitPolicy" />
				</xs:sequence>
				<xs:attribute name="TransferCurve" type="TransferFunction" use="optional" />
				<xs:attribute name="Polarity" use="optional" />
				<xs:attribute name="CenterAcross" use="optional" />
				<xs:attribute name="CutMedia" type="boolean" use="optional" />
				<xs:attribute name="NonPrintableMarginLeft" type="double" use="optional" />
				<xs:attribute name="NonPrintableMarginTop" type="double" use="optional" />
				<xs:attribute name="MirrorAround" use="optional" />
				<xs:attribute name="NonPrintableMarginRight" type="double" use="optional" />
				<xs:attribute name="AdvanceDistance" type="double" use="optional" />
				<xs:attribute name="Resolution" type="XYPair" use="optional" />
				<xs:attribute name="ManualFeed" type="boolean" use="optional" />
				<xs:attribute name="RollCut" type="double" use="optional" />
				<xs:attribute name="SourceWorkStyle" type="EnumWorkStyle" use="optional" />
				<xs:attribute name="NonPrintableMarginBottom" type="double" use="optional" />
				<xs:attribute name="Sides" use="optional" />
				<xs:attribute name="BurnOutArea" type="XYPair" use="optional" />
				<xs:attribute name="MediaRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ImagesResultsPool ** -->
	<xs:element name="ImagesResultsPool">
		<xs:complexType>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for InsertSheet ** -->
	<xs:element name="InsertSheet" type="InsertSheet" substitutionGroup="ParameterType" />
	<xs:complexType name="InsertSheet">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="SheetType" use="optional" />
				<xs:attribute name="IsWaste" type="boolean" use="optional" />
				<xs:attribute name="MarkList" type="NMTOKENS" use="optional" />
				<xs:attribute name="SheetFormat" type="NMTOKEN" use="optional" />
				<xs:attribute name="SheetUsage" use="optional" />
				<xs:attribute name="IncludeInBundleItem" use="optional" />
				<xs:attribute name="LayoutRef" type="IDREF" use="optional" />
				<xs:attribute name="RunListRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for InterpretedPDLData ** -->
	<xs:element name="InterpretedPDLData" type="InterpretedPDLData" substitutionGroup="ParameterType" />
	<xs:complexType name="InterpretedPDLData">
		<xs:complexContent>
			<xs:extension base="ParameterType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for JBIG2Params ** -->
	<xs:element name="JBIG2Params">
		<xs:complexType>
			<xs:attribute name="JBIG2Lossless" type="boolean" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for JPEG2000Params ** -->
	<xs:element name="JPEG2000Params">
		<xs:complexType>
			<xs:attribute name="LayersPerTile" type="integer" use="optional" />
			<xs:attribute name="TileSize" type="XYPair" use="optional" />
			<xs:attribute name="LayerRates" type="string" use="optional" />
			<xs:attribute name="ProgressionOrder" use="optional" />
			<xs:attribute name="CodeBlockSize" type="integer" use="optional" />
			<xs:attribute name="NumResolutions" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Layout ** -->
	<xs:element name="Layout" type="Layout" substitutionGroup="ParameterType" />
	<xs:complexType name="Layout">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="PlacedObject" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TransferCurvePool" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="InsertSheet" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="PageCondition" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="LayerList" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Position" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="StripMark" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="BinderySignature" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="SignatureCell" />
				</xs:sequence>
				<xs:attribute name="SheetCountReset" use="optional" />
				<xs:attribute name="OrdsConsumed" type="IntegerRangeList" use="optional" />
				<xs:attribute name="BaseOrdReset" use="optional" />
				<xs:attribute name="SheetNameFormat" type="string" use="optional" />
				<xs:attribute name="SurfaceContentsBox" type="rectangle" use="optional" />
				<xs:attribute name="StackDepth" type="integer" use="optional" />
				<xs:attribute name="LockOrigins" type="boolean" use="optional" />
				<xs:attribute name="OrdReset" use="optional" />
				<xs:attribute name="SheetNameTemplate" type="string" use="optional" />
				<xs:attribute name="Automated" type="boolean" use="optional" />
				<xs:attribute name="MaxCollect" type="integer" use="optional" />
				<xs:attribute name="SourceWorkStyle" type="EnumWorkStyle" use="optional" />
				<xs:attribute name="MinCollect" type="integer" use="optional" />
				<xs:attribute name="WorkStyle" type="EnumWorkStyle" use="optional" />
				<xs:attribute name="JobID" type="shortString" use="optional" />
				<xs:attribute name="SectionList" type="IntegerList" use="optional" />
				<xs:attribute name="InnermostShingling" type="double" use="optional" />
				<xs:attribute name="AssemblyIDs" type="NMTOKENS" use="optional" />
				<xs:attribute name="AssemblyID" type="string" use="optional" />
				<xs:attribute name="DeviceRef" type="IDREF" use="optional" />
				<xs:attribute name="MediaRef" type="IDREF" use="optional" />
				<xs:attribute name="OutermostShingling" type="double" use="optional" />
				<xs:attribute name="ExternalImpositionTemplateRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for LayoutElementPart ** -->
	<xs:element name="LayoutElementPart">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PositionObj" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="RunList" />
			</xs:sequence>
			<xs:attribute name="ID" type="ID" use="optional" />
			<xs:attribute name="BarcodeProductionParamsRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for LayoutElementProductionParams ** -->
	<xs:element name="LayoutElementProductionParams" type="LayoutElementProductionParams" substitutionGroup="ParameterType" />
	<xs:complexType name="LayoutElementProductionParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ShapeDef" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TestPool" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ActionPool" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="LayoutElementPart" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for LayoutShift ** -->
	<xs:element name="LayoutShift" type="LayoutShift" substitutionGroup="ParameterType" />
	<xs:complexType name="LayoutShift">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ShiftPoint" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for LongFold ** -->
	<xs:element name="LongFold" />

	<!-- ** Complex type definition for LongGlue ** -->
	<xs:element name="LongGlue" />

	<!-- ** Complex type definition for LongitudinalRibbonOperationParams ** -->
	<xs:element name="LongitudinalRibbonOperationParams" type="LongitudinalRibbonOperationParams" substitutionGroup="ParameterType" />
	<xs:complexType name="LongitudinalRibbonOperationParams">
		<xs:complexContent>
			<xs:extension base="ParameterType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for LongPerforate ** -->
	<xs:element name="LongPerforate" />

	<!-- ** Complex type definition for LongSlit ** -->
	<xs:element name="LongSlit" />

	<!-- ** Complex type definition for Lot ** -->
	<xs:element name="Lot">
		<xs:complexType>
			<xs:attribute name="LotID" type="string" use="optional" />
			<xs:attribute name="ActualAmount" type="double" use="optional" />
			<xs:attribute name="Consumption" use="optional" />
			<xs:attribute name="Amount" type="double" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for LZWParams ** -->
	<xs:element name="LZWParams">
		<xs:complexType>
			<xs:attribute name="EarlyChange" type="integer" use="optional" />
			<xs:attribute name="Predictor" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ManualLaborParams ** -->
	<xs:element name="ManualLaborParams" type="ManualLaborParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ManualLaborParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="LaborType" type="NMTOKEN" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Media ** -->
	<xs:element name="Media" type="Media" substitutionGroup="ParameterType" />
	<xs:complexType name="Media">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="MediaLayers" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="HoleList" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TabDimensions" />
				</xs:sequence>
				<xs:attribute name="GrainDirection" use="optional" />
				<xs:attribute name="FrontGlossValue" type="double" use="optional" />
				<xs:attribute name="StockType" type="NMTOKEN" use="optional" />
				<xs:attribute name="Dimension" type="XYPair" use="optional" />
				<xs:attribute name="FrontCoatings" type="EnumCoatings" use="optional" />
				<xs:attribute name="SleeveInterlock" type="NMTOKEN" use="optional" />
				<xs:attribute name="CIEWhiteness" type="double" use="optional" />
				<xs:attribute name="RollDiameter" type="double" use="optional" />
				<xs:attribute name="ShrinkIndex" type="XYPair" use="optional" />
				<xs:attribute name="Grade" type="integer" use="optional" />
				<xs:attribute name="OpacityLevel" type="double" use="optional" />
				<xs:attribute name="InsideLoss" type="double" use="optional" />
				<xs:attribute name="Thickness" type="double" use="optional" />
				<xs:attribute name="MediaQuality" type="string" use="optional" />
				<xs:attribute name="CIETint" type="double" use="optional" />
				<xs:attribute name="ImagableSide" use="optional" />
				<xs:attribute name="PrePrinted" type="boolean" use="optional" />
				<xs:attribute name="WrapperWeight" type="double" use="optional" />
				<xs:attribute name="PlateTechnology" use="optional" />
				<xs:attribute name="MediaUnit" use="optional" />
				<xs:attribute name="BackCoatingDetail" type="NMTOKEN" use="optional" />
				<xs:attribute name="BackCoatings" type="EnumCoatings" use="optional" />
				<xs:attribute name="FrontCoatingDetail" type="NMTOKEN" use="optional" />
				<xs:attribute name="Flute" type="NMTOKEN" use="optional" />
				<xs:attribute name="Polarity" use="optional" />
				<xs:attribute name="MediaSetCount" type="integer" use="optional" />
				<xs:attribute name="MediaColorName" type="string" use="optional" />
				<xs:attribute name="MediaColorNameDetails" type="string" use="optional" />
				<xs:attribute name="Opacity" use="optional" />
				<xs:attribute name="OuterCoreDiameter" type="double" use="optional" />
				<xs:attribute name="Brightness" type="double" use="optional" />
				<xs:attribute name="PrintingTechnology" type="NMTOKEN" use="optional" />
				<xs:attribute name="MediaTypeDetails" type="NMTOKEN" use="optional" />
				<xs:attribute name="BackGlossValue" type="double" use="optional" />
				<xs:attribute name="RecycledPercentage" type="double" use="optional" />
				<xs:attribute name="CoreWeight" type="double" use="optional" />
				<xs:attribute name="Weight" type="double" use="optional" />
				<xs:attribute name="LabColorValue" type="LabColor" use="optional" />
				<xs:attribute name="Texture" type="NMTOKEN" use="optional" />
				<xs:attribute name="FluteDirection" use="optional" />
				<xs:attribute name="HoleType" use="optional">
					<xs:simpleType>
						<xs:list itemType="EnumHoleType" />
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="MediaType" use="optional" />
				<xs:attribute name="OutsideGain" type="double" use="optional" />
				<xs:attribute name="ReliefThickness" type="double" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
				<xs:attribute name="ColorRef" type="IDREF" use="optional" />
				<xs:attribute name="ColorMeasurementConditionsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for MediaLayers ** -->
	<xs:element name="MediaLayers">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueLine" />
			</xs:sequence>
			<xs:attribute name="MediaRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for MediaSource ** -->
	<xs:element name="MediaSource" type="MediaSource" substitutionGroup="ParameterType" />
	<xs:complexType name="MediaSource">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="MediaRef" type="IDREF" use="optional" />
				<xs:attribute name="ComponentRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for MetadataMap ** -->
	<xs:element name="MetadataMap">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Expr" />
			</xs:sequence>
			<xs:attribute name="ValueFormat" type="string" use="optional" />
			<xs:attribute name="Context" use="optional" />
			<xs:attribute name="ValueTemplate" type="string" use="optional" />
			<xs:attribute name="DataType" use="optional" />
			<xs:attribute name="Name" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for MiscConsumable ** -->
	<xs:element name="MiscConsumable" type="MiscConsumable" substitutionGroup="ResourceType" />
	<xs:complexType name="MiscConsumable">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
				<xs:attribute name="ConsumableType" type="NMTOKEN" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for MISDetails ** -->
	<xs:element name="MISDetails">
		<xs:complexType>
			<xs:attribute name="WorkTypeDetails" type="string" use="optional" />
			<xs:attribute name="WorkType" use="optional" />
			<xs:attribute name="DeviceOperationMode" use="optional" />
			<xs:attribute name="CostType" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for NotificationFilter ** -->
	<xs:element name="NotificationFilter">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Part" />
			</xs:sequence>
			<xs:attribute name="JobPartID" type="shortString" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="SignalTypes" type="NMTOKENS" use="optional" />
			<xs:attribute name="QueueEntryID" type="shortString" use="optional" />
			<xs:attribute name="MileStoneTypes" type="NMTOKENS" use="optional" />
			<xs:attribute name="Classes" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumClasses" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Types" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for NumberingParam ** -->
	<xs:element name="NumberingParam">
		<xs:complexType>
			<xs:attribute name="XPosition" type="double" use="optional" />
			<xs:attribute name="Orientation" type="double" use="optional" />
			<xs:attribute name="YPosition" type="string" use="optional" />
			<xs:attribute name="Step" type="integer" use="optional" />
			<xs:attribute name="StartValue" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ObjectModel ** -->
	<xs:element name="ObjectModel">
		<xs:complexType>
			<xs:attribute name="Dimensions" type="shape" use="optional" />
			<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ObjectResolution ** -->
	<xs:element name="ObjectResolution" type="ObjectResolution" substitutionGroup="ParameterType" />
	<xs:complexType name="ObjectResolution">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="AntiAliasing" type="NMTOKEN" use="optional" />
				<xs:attribute name="SourceObjects" use="optional">
					<xs:simpleType>
						<xs:list itemType="EnumSourceObjects" />
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="Resolution" type="XYPair" use="optional" />
				<xs:attribute name="ObjectTags" type="NMTOKENS" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for OCGControl ** -->
	<xs:element name="OCGControl">
		<xs:complexType>
			<xs:attribute name="IncludeOCG" type="boolean" use="optional" />
			<xs:attribute name="OCGName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for OrderingParams ** -->
	<xs:element name="OrderingParams" type="OrderingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="OrderingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PackingParams ** -->
	<xs:element name="PackingParams" type="PackingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="PackingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PageAssignedList ** -->
	<xs:element name="PageAssignedList">
		<xs:complexType>
			<xs:attribute name="PageListIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="BroadsheetNumber" type="integer" use="optional" />
			<xs:attribute name="PagePlacementName" type="string" use="optional" />
			<xs:attribute name="LogicalPrinterSection" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PageAssignParams ** -->
	<xs:element name="PageAssignParams">
		<xs:complexType>
			<xs:attribute name="PreserveOPIComments" type="boolean" use="optional" />
			<xs:attribute name="PreserveCopyPage" type="boolean" use="optional" />
			<xs:attribute name="UsePrologue" type="boolean" use="optional" />
			<xs:attribute name="AllowTransparency" type="boolean" use="optional" />
			<xs:attribute name="EmitDSCWarnings" type="boolean" use="optional" />
			<xs:attribute name="PreserveOverprintSettings" type="boolean" use="optional" />
			<xs:attribute name="UCRandBGInfo" use="optional" />
			<xs:attribute name="ParseDSCComments" type="boolean" use="optional" />
			<xs:attribute name="PassThroughJPEGImages" type="boolean" use="optional" />
			<xs:attribute name="LockDistillerParams" type="boolean" use="optional" />
			<xs:attribute name="AllowPSXObjects" type="boolean" use="optional" />
			<xs:attribute name="EmbedJobOptions" type="boolean" use="optional" />
			<xs:attribute name="PreserveHalftoneInfo" type="boolean" use="optional" />
			<xs:attribute name="PreserveEPSInfo" type="boolean" use="optional" />
			<xs:attribute name="TransferFunctionInfo" use="optional" />
			<xs:attribute name="AutoPositionEPSInfo" type="boolean" use="optional" />
			<xs:attribute name="ParseDSCCommentsForDocInfo" type="boolean" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PageData ** -->
	<xs:element name="PageData">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PageElement" />
			</xs:sequence>
			<xs:attribute name="IsBlank" type="boolean" use="optional" />
			<xs:attribute name="JobID" type="shortString" use="optional" />
			<xs:attribute name="PageLabelSuffix" type="string" use="optional" />
			<xs:attribute name="FoldOutPages" type="IntegerList" use="optional" />
			<xs:attribute name="SourceTrimBox" type="rectangle" use="optional" />
			<xs:attribute name="CatalogDetails" type="string" use="optional" />
			<xs:attribute name="PageLabel" type="string" use="optional" />
			<xs:attribute name="PageStatus" type="NMTOKEN" use="optional" />
			<xs:attribute name="AssemblyIDs" type="NMTOKENS" use="optional" />
			<xs:attribute name="CatalogID" type="shortString" use="optional" />
			<xs:attribute name="HasBleeds" type="boolean" use="optional" />
			<xs:attribute name="PageFormat" type="NMTOKEN" use="optional" />
			<xs:attribute name="SourceClipBox" type="rectangle" use="optional" />
			<xs:attribute name="PageIndex" type="IntegerRangeList" use="optional" />
			<xs:attribute name="PageLabelPrefix" type="string" use="optional" />
			<xs:attribute name="IsTrapped" type="boolean" use="optional" />
			<xs:attribute name="IsPrintable" type="boolean" use="optional" />
			<xs:attribute name="ProductID" type="shortString" use="optional" />
			<xs:attribute name="SourceBleedBox" type="rectangle" use="optional" />
			<xs:attribute name="ElementColorParamsRef" type="IDREF" use="optional" />
			<xs:attribute name="ImageCompressionParamsRef" type="IDREF" use="optional" />
			<xs:attribute name="ScreeningParamsRef" type="IDREF" use="optional" />
			<xs:attribute name="SeparationNames" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PageElement ** -->
	<xs:element name="PageElement">
		<xs:complexType>
			<xs:attribute name="ContentType" type="NMTOKEN" use="optional" />
			<xs:attribute name="ContentDataRefs" type="IDREFS" use="optional" />
			<xs:attribute name="RelativeBox" type="rectangle" use="optional" />
			<xs:attribute name="ElementPages" type="IntegerRangeList" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PDFXParams ** -->
	<xs:element name="PDFXParams">
		<xs:complexType>
			<xs:attribute name="PDFXNoTrimBoxError" type="boolean" use="optional" />
			<xs:attribute name="PDFXOutputCondition" type="string" use="optional" />
			<xs:attribute name="PDFXRegistryName" type="URL" use="optional" />
			<xs:attribute name="PDFXCompliantPDFOnly" type="boolean" use="optional" />
			<xs:attribute name="PDFXTrimBoxToMediaBoxOffset" type="rectangle" use="optional" />
			<xs:attribute name="PDFX3Check" type="boolean" use="optional" />
			<xs:attribute name="PDFXSetBleedBoxToMediaBox" type="boolean" use="optional" />
			<xs:attribute name="PDFXTrapped" use="optional" />
			<xs:attribute name="PDFXOutputIntentProfile" type="string" use="optional" />
			<xs:attribute name="PDFX1aCheck" type="boolean" use="optional" />
			<xs:attribute name="PDFXBleedBoxToTrimBoxOffset" type="rectangle" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PDLCreationParams ** -->
	<xs:element name="PDLCreationParams" type="PDLCreationParams" substitutionGroup="ParameterType" />
	<xs:complexType name="PDLCreationParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="MimeType" type="string" use="optional" />
				<xs:attribute name="PDFToPSConversionParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="PSToPDFConversionParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Perforate ** -->
	<xs:element name="Perforate">
		<xs:complexType>
			<xs:attribute name="RelativeWorkingPath" type="XYPair" use="optional" />
			<xs:attribute name="TeethPerDimension" type="double" use="optional" />
			<xs:attribute name="StartPosition" type="XYPair" use="optional" />
			<xs:attribute name="WorkingPath" type="XYPair" use="optional" />
			<xs:attribute name="Depth" type="double" use="optional" />
			<xs:attribute name="RelativeStartPosition" type="XYPair" use="optional" />
			<xs:attribute name="WorkingDirection" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Person ** -->
	<xs:element name="Person" type="Person" substitutionGroup="ParameterType" />
	<xs:complexType name="Person">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ComChannel" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Address" />
				</xs:sequence>
				<xs:attribute name="JobTitle" type="string" use="optional" />
				<xs:attribute name="NamePrefix" type="string" use="optional" />
				<xs:attribute name="AdditionalNames" type="string" use="optional" />
				<xs:attribute name="Languages" type="languages" use="optional" />
				<xs:attribute name="FamilyName" type="string" use="optional" />
				<xs:attribute name="FirstName" type="string" use="optional" />
				<xs:attribute name="NameSuffix" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PixelColorant ** -->
	<xs:element name="PixelColorant">
		<xs:complexType>
			<xs:attribute name="PixelDepth" type="integer" use="optional" />
			<xs:attribute name="ColorantName" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PlateCopyParams ** -->
	<xs:element name="PlateCopyParams" type="PlateCopyParams" substitutionGroup="ParameterType" />
	<xs:complexType name="PlateCopyParams">
		<xs:complexContent>
			<xs:extension base="ParameterType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Position ** -->
	<xs:element name="Position">
		<xs:complexType>
			<xs:attribute name="MarginBottom" type="double" use="optional" />
			<xs:attribute name="MarginLeft" type="double" use="optional" />
			<xs:attribute name="MarginRight" type="double" use="optional" />
			<xs:attribute name="MarginTop" type="double" use="optional" />
			<xs:attribute name="RelativeBox" type="rectangle" use="optional" />
			<xs:attribute name="AbsoluteBox" type="rectangle" use="optional" />
			<xs:attribute name="Orientation" type="EnumOrientation" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PositionObj ** -->
	<xs:element name="PositionObj">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="RefAnchor" />
			</xs:sequence>
			<xs:attribute name="Size" type="XYPair" use="optional" />
			<xs:attribute name="CTM" type="matrix" use="optional" />
			<xs:attribute name="RelativeSize" type="XYPair" use="optional" />
			<xs:attribute name="Anchor" type="EnumAnchor" use="optional" />
			<xs:attribute name="RotationPolicy" use="optional" />
			<xs:attribute name="PageRange" type="IntegerRangeList" use="optional" />
			<xs:attribute name="SizePolicy" use="optional" />
			<xs:attribute name="PositionPolicy" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PreflightAction ** -->
	<xs:element name="PreflightAction">
		<xs:complexType>
			<xs:attribute name="SetRef" type="IDREF" use="optional" />
			<xs:attribute name="SetSplitBy" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PreflightArgument ** -->
	<xs:element name="PreflightArgument">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="BoxArgument" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="BoxToBoxDifference" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PreflightParams ** -->
	<xs:element name="PreflightParams" type="PreflightParams" substitutionGroup="ParameterType" />
	<xs:complexType name="PreflightParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TestPool" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ActionPool" />
				</xs:sequence>
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PreflightReport ** -->
	<xs:element name="PreflightReport" type="PreflightReport" substitutionGroup="ParameterType" />
	<xs:complexType name="PreflightReport">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="PreflightReportRulePool" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="PRItem" />
				</xs:sequence>
				<xs:attribute name="WarningCount" type="integer" use="optional" />
				<xs:attribute name="ErrorState" use="optional" />
				<xs:attribute name="ErrorCount" type="integer" use="optional" />
				<xs:attribute name="PreflightParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="RunListRef" type="IDREF" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PreflightReportRulePool ** -->
	<xs:element name="PreflightReportRulePool" type="PreflightReportRulePool" substitutionGroup="ParameterType" />
	<xs:complexType name="PreflightReportRulePool">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="PRRuleAttr" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="PRRule" />
				</xs:sequence>
				<xs:attribute name="MaxOccurrences" type="integer" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PRError ** -->
	<xs:element name="PRError">
		<xs:complexType>
			<xs:attribute name="Value" type="NMTOKEN" use="optional" />
			<xs:attribute name="ErrorType" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Preview ** -->
	<xs:element name="Preview" type="Preview" substitutionGroup="ParameterType" />
	<xs:complexType name="Preview">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Directory" type="URL" use="optional" />
				<xs:attribute name="PreviewUsage" use="optional" />
				<xs:attribute name="CTM" type="matrix" use="optional" />
				<xs:attribute name="MimeTypeDetails" type="string" use="optional" />
				<xs:attribute name="URL" type="URL" use="optional" />
				<xs:attribute name="PreviewFileType" use="optional" />
				<xs:attribute name="Compensation" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PrintConditionColor ** -->
	<xs:element name="PrintConditionColor">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="TransferCurve" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="DeviceNColor" />
			</xs:sequence>
			<xs:attribute name="Lab" type="LabColor" use="optional" />
			<xs:attribute name="ColorBookPrefix" type="string" use="optional" />
			<xs:attribute name="CMYK" type="CMYKColor" use="optional" />
			<xs:attribute name="NeutralDensity" type="double" use="optional" />
			<xs:attribute name="ColorBookSuffix" type="string" use="optional" />
			<xs:attribute name="ColorBookEntry" type="string" use="optional" />
			<xs:attribute name="ColorBook" type="string" use="optional" />
			<xs:attribute name="MappingSelection" use="optional" />
			<xs:attribute name="MediaSide" use="optional" />
			<xs:attribute name="Density" type="double" use="optional" />
			<xs:attribute name="PrintConditionName" type="NMTOKEN" use="optional" />
			<xs:attribute name="sRGB" type="string" use="optional" />
			<xs:attribute name="MediaRef" type="IDREF" use="optional" />
			<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PrintRollingParams ** -->
	<xs:element name="PrintRollingParams" type="PrintRollingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="PrintRollingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="MaxDiameter" type="double" use="optional" />
				<xs:attribute name="Copies" type="integer" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PRItem ** -->
	<xs:element name="PRItem">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PRError" />
			</xs:sequence>
			<xs:attribute name="PageSet" type="IntegerRangeList" use="optional" />
			<xs:attribute name="Occurrences" type="integer" use="optional" />
			<xs:attribute name="ActionRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ProductionPath ** -->
	<xs:element name="ProductionPath" type="ProductionPath" substitutionGroup="ParameterType" />
	<xs:complexType name="ProductionPath">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" name="PrintingUnitWebPath" type="ProductionSubPath" />
					<xs:element minOccurs="0" name="FolderSuperStructureWebPath" type="ProductionSubPath" />
					<xs:element minOccurs="0" name="PostPressComponentPath" type="ProductionSubPath" />
				</xs:sequence>
				<xs:attribute name="ProductionPathID" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ProductionSubPath ** -->
	<xs:complexType name="ProductionSubPath">
		<xs:attribute name="ProductionPathID" type="string" use="optional" />
	</xs:complexType>

	<!-- ** Complex type definition for ProofingParams ** -->
	<xs:element name="ProofingParams" type="ProofingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ProofingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="MediaRef" type="IDREF" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PRRule ** -->
	<xs:element name="PRRule">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PRRuleAttr" />
			</xs:sequence>
			<xs:attribute name="ActionRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PRRuleAttr ** -->
	<xs:element name="PRRuleAttr">
		<xs:complexType>
			<xs:attribute name="GroupBy" type="NMTOKENS" use="optional" />
			<xs:attribute name="LogErrors" type="integer" use="optional" />
			<xs:attribute name="ReportAttr" type="NMTOKENS" use="optional" />
			<xs:attribute name="MaxPerGroup" type="integer" use="optional" />
			<xs:attribute name="MaxGroups" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for QualityControlParams ** -->
	<xs:element name="QualityControlParams" type="QualityControlParams" substitutionGroup="ParameterType" />
	<xs:complexType name="QualityControlParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="SampleInterval" type="integer" use="optional" />
				<xs:attribute name="TimeInterval" type="duration" use="optional" />
				<xs:attribute name="BindingQualityParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for QualityControlResult ** -->
	<xs:element name="QualityControlResult" type="QualityControlResult" substitutionGroup="ParameterType" />
	<xs:complexType name="QualityControlResult">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="QualityMeasurement" />
				</xs:sequence>
				<xs:attribute name="Failed" type="integer" use="optional" />
				<xs:attribute name="Passed" type="integer" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
				<xs:attribute name="BindingQualityParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for QualityMeasurement ** -->
	<xs:element name="QualityMeasurement">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="BindingQualityMeasurement" />
			</xs:sequence>
			<xs:attribute name="Failed" type="integer" use="optional" />
			<xs:attribute name="Passed" type="integer" use="optional" />
			<xs:attribute name="Start" type="dateTime" use="optional" />
			<xs:attribute name="End" type="dateTime" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ReferenceXObjParams ** -->
	<xs:element name="ReferenceXObjParams">
		<xs:complexType>
			<xs:attribute name="Mode" type="NMTOKEN" use="optional" />
			<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for RegisterMark ** -->
	<xs:element name="RegisterMark" type="RegisterMark" substitutionGroup="ParameterType" />
	<xs:complexType name="RegisterMark">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Rotation" type="double" use="optional" />
				<xs:attribute name="MarkUsage" use="optional" />
				<xs:attribute name="Center" type="XYPair" use="optional" />
				<xs:attribute name="MarkType" type="NMTOKENS" use="optional" />
				<xs:attribute name="SeparationNames" type="NMTOKENS" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for RepeatDesc ** -->
	<xs:element name="RepeatDesc">
		<xs:complexType>
			<xs:attribute name="OrdereQuantity" type="integer" use="optional" />
			<xs:attribute name="UseBleeds" type="boolean" use="optional" />
			<xs:attribute name="GutterY2" type="double" use="optional" />
			<xs:attribute name="AllowedRotate" use="optional" />
			<xs:attribute name="GutterX2" type="double" use="optional" />
			<xs:attribute name="LayoutStyle" type="NMTOKENS" use="optional" />
			<xs:attribute name="GutterX" type="double" use="optional" />
			<xs:attribute name="GutterY" type="double" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ResourceDefinitionParams ** -->
	<xs:element name="ResourceDefinitionParams" type="ResourceDefinitionParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ResourceDefinitionParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ResourceParam" />
				</xs:sequence>
				<xs:attribute name="DefaultPriority" use="optional" />
				<xs:attribute name="DefaultJDF" type="URL" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for RollStand ** -->
	<xs:element name="RollStand" type="RollStand" substitutionGroup="ResourceType" />
	<xs:complexType name="RollStand">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
				<xs:attribute name="MaxDiameter" type="double" use="optional" />
				<xs:attribute name="MaxWidth" type="double" use="optional" />
				<xs:attribute name="DeviceRef" type="IDREF" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for RuleLength ** -->
	<xs:element name="RuleLength">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ShapeDef" />
			</xs:sequence>
			<xs:attribute name="StationName" type="string" use="optional" />
			<xs:attribute name="StationAmount" type="integer" use="optional" />
			<xs:attribute name="AssemblyIDs" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for RunList ** -->
	<xs:element name="RunList" type="RunList" substitutionGroup="ParameterType" />
	<xs:complexType name="RunList">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" ref="MetadataMap" />
					<xs:element minOccurs="0" ref="InsertSheet" />
					<xs:element minOccurs="0" ref="Disposition" />
					<xs:element minOccurs="0" ref="ByteMap" />
					<xs:element minOccurs="0" ref="FileSpec" />
					<xs:element minOccurs="0" ref="InterpretedPDLData" />
					<xs:element minOccurs="0" ref="Dependencies" />
				</xs:sequence>
				<xs:attribute name="Directory" type="URL" use="optional" />
				<xs:attribute name="Sets" type="IntegerRangeList" use="optional" />
				<xs:attribute name="SetCopies" type="integer" use="optional" />
				<xs:attribute name="SheetSides" use="optional" />
				<xs:attribute name="LogicalPage" type="integer" use="optional" />
				<xs:attribute name="NPage" type="integer" use="optional" />
				<xs:attribute name="IgnoreContext" type="NMTOKENS" use="optional" />
				<xs:attribute name="Sorted" type="boolean" use="optional" />
				<xs:attribute name="Docs" type="IntegerRangeList" use="optional" />
				<xs:attribute name="EndOfSet" type="boolean" use="optional" />
				<xs:attribute name="PageListIndex" type="IntegerRangeList" use="optional" />
				<xs:attribute name="Pages" type="IntegerRangeList" use="optional" />
				<xs:attribute name="PageCopies" type="integer" use="optional" />
				<xs:attribute name="FirstPage" type="integer" use="optional" />
				<xs:attribute name="SkipPage" type="integer" use="optional" />
				<xs:attribute name="DocNames" type="NameRangeList" use="optional" />
				<xs:attribute name="RunTag" type="NMTOKEN" use="optional" />
				<xs:attribute name="EndOfBundleItem" type="boolean" use="optional" />
				<xs:attribute name="IsPage" type="boolean" use="optional" />
				<xs:attribute name="SetNames" type="NameRangeList" use="optional" />
				<xs:attribute name="EndOfDocument" type="boolean" use="optional" />
				<xs:attribute name="PageNames" type="NameRangeList" use="optional" />
				<xs:attribute name="PageListRef" type="IDREF" use="optional" />
				<xs:attribute name="IsBlank" type="boolean" use="optional" />
				<xs:attribute name="IgnorePDLCopies" type="boolean" use="optional" />
				<xs:attribute name="SetLevel" type="XPath" use="optional" />
				<xs:attribute name="SourceTrimBox" type="rectangle" use="optional" />
				<xs:attribute name="SourceMediaBox" type="rectangle" use="optional" />
				<xs:attribute name="ContentDataRefs" type="IDREFS" use="optional" />
				<xs:attribute name="IgnorePDLImposition" type="boolean" use="optional" />
				<xs:attribute name="ElementType" use="optional" />
				<xs:attribute name="ClipPath" type="PDFPath" use="optional" />
				<xs:attribute name="HasBleeds" type="boolean" use="optional" />
				<xs:attribute name="SourceClipBox" type="rectangle" use="optional" />
				<xs:attribute name="IsTrapped" type="boolean" use="optional" />
				<xs:attribute name="IsPrintable" type="boolean" use="optional" />
				<xs:attribute name="SourceBleedBox" type="rectangle" use="optional" />
				<xs:attribute name="ElementColorParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="ContentListRef" type="IDREF" use="optional" />
				<xs:attribute name="ImageCompressionParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="ColorRef" type="IDREF" use="optional" />
				<xs:attribute name="ScreeningParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="SeparationNames" type="NMTOKENS" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ScreenSelector ** -->
	<xs:element name="ScreenSelector">
		<xs:complexType>
			<xs:attribute name="ObjectTags" type="NMTOKENS" use="optional" />
			<xs:attribute name="Frequency" type="double" use="optional" />
			<xs:attribute name="ScreeningType" use="optional" />
			<xs:attribute name="ScreeningFamily" type="string" use="optional" />
			<xs:attribute name="DotSize" type="double" use="optional" />
			<xs:attribute name="Angle" type="double" use="optional" />
			<xs:attribute name="SourceFrequency" type="string" use="optional" />
			<xs:attribute name="AngleMap" type="string" use="optional" />
			<xs:attribute name="SourceObjects" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumSourceObjects" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="SpotFunction" type="NMTOKEN" use="optional" />
			<xs:attribute name="Separation" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Sealing ** -->
	<xs:element name="Sealing">
		<xs:complexType>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for SeparationControlParams ** -->
	<xs:element name="SeparationControlParams" type="SeparationControlParams" substitutionGroup="ParameterType" />
	<xs:complexType name="SeparationControlParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TransferFunctionControl" />
				</xs:sequence>
				<xs:attribute name="AutomatedOverPrintParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ShapeDef ** -->
	<xs:element name="ShapeDef" type="ShapeDef" substitutionGroup="ParameterType" />
	<xs:complexType name="ShapeDef">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Shape" />
				</xs:sequence>
				<xs:attribute name="GrainDirection" use="optional" />
				<xs:attribute name="Dimensions" type="shape" use="optional" />
				<xs:attribute name="LockOrigins" type="boolean" use="optional" />
				<xs:attribute name="FluteDirection" use="optional" />
				<xs:attribute name="MediaSide" use="optional" />
				<xs:attribute name="Area" type="double" use="optional" />
				<xs:attribute name="CutBox" type="rectangle" use="optional" />
				<xs:attribute name="MediaRef" type="IDREF" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ShapeDefProductionParams ** -->
	<xs:element name="ShapeDefProductionParams" type="ShapeDefProductionParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ShapeDefProductionParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ObjectModel" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ShapeTemplate" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ShapeTemplate ** -->
	<xs:element name="ShapeTemplate">
		<xs:complexType>
			<xs:attribute name="InnerDimensions" type="shape" use="optional" />
			<xs:attribute name="Standard" type="string" use="optional" />
			<xs:attribute name="Name" type="string" use="optional" />
			<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ShiftPoint ** -->
	<xs:element name="ShiftPoint">
		<xs:complexType>
			<xs:attribute name="CTM" type="matrix" use="optional" />
			<xs:attribute name="Position" type="XYPair" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for SignatureCell ** -->
	<xs:element name="SignatureCell">
		<xs:complexType>
			<xs:attribute name="StationName" type="string" use="optional" />
			<xs:attribute name="BottleAxis" use="optional" />
			<xs:attribute name="FrontPages" type="IntegerList" use="optional" />
			<xs:attribute name="BackPages" type="IntegerList" use="optional" />
			<xs:attribute name="SectionIndex" type="integer" use="optional" />
			<xs:attribute name="FaceCells" type="IntegerList" use="optional" />
			<xs:attribute name="BottleAngle" type="double" use="optional" />
			<xs:attribute name="Orientation" type="EnumOrientation" use="optional" />
			<xs:attribute name="MaskSeparation" type="string" use="optional" />
			<xs:attribute name="CutWidthFoot" type="double" use="optional" />
			<xs:attribute name="TrimFoot" type="double" use="optional" />
			<xs:attribute name="FrontOverfold" type="double" use="optional" />
			<xs:attribute name="BleedFoot" type="double" use="optional" />
			<xs:attribute name="Spine" type="double" use="optional" />
			<xs:attribute name="Mask" use="optional" />
			<xs:attribute name="BleedHead" type="double" use="optional" />
			<xs:attribute name="BleedFace" type="double" use="optional" />
			<xs:attribute name="TrimHead" type="double" use="optional" />
			<xs:attribute name="TrimFace" type="double" use="optional" />
			<xs:attribute name="MillingDepth" type="double" use="optional" />
			<xs:attribute name="CutWidthHead" type="double" use="optional" />
			<xs:attribute name="BackOverfold" type="double" use="optional" />
			<xs:attribute name="Creep" type="XYPair" use="optional" />
			<xs:attribute name="TrimSize" type="XYPair" use="optional" />
			<xs:attribute name="MaskBleed" type="double" use="optional" />
			<xs:attribute name="Sides" use="optional" />
			<xs:attribute name="BleedSpine" type="double" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for SourceResource ** -->
	<xs:element name="SourceResource" />

	<!-- ** Complex type definition for Station ** -->
	<xs:element name="Station">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ShapeDef" />
			</xs:sequence>
			<xs:attribute name="StationName" type="string" use="optional" />
			<xs:attribute name="StationAmount" type="integer" use="optional" />
			<xs:attribute name="AssemblyIDs" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for StringListValue ** -->
	<xs:element name="StringListValue">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Value" />
			</xs:sequence>
			<xs:attribute name="Name" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for StripMark ** -->
	<xs:element name="StripMark">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Position" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="RefAnchor" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="JobField" />
			</xs:sequence>
			<xs:attribute name="MarkContext" use="optional" />
			<xs:attribute name="AbsoluteHeight" type="double" use="optional" />
			<xs:attribute name="MarkName" type="NMTOKEN" use="optional" />
			<xs:attribute name="ID" type="NMTOKEN" use="optional" />
			<xs:attribute name="Anchor" type="EnumAnchor" use="optional" />
			<xs:attribute name="RelativeHeight" type="double" use="optional" />
			<xs:attribute name="Ord" type="integer" use="optional" />
			<xs:attribute name="VerticalFitPolicy" use="optional" />
			<xs:attribute name="MarkSide" use="optional" />
			<xs:attribute name="AbsoluteWidth" type="double" use="optional" />
			<xs:attribute name="RelativeWidth" type="double" use="optional" />
			<xs:attribute name="HorizontalFitPolicy" use="optional" />
			<xs:attribute name="Offset" type="XYPair" use="optional" />
			<xs:attribute name="Orientation" type="EnumOrientation" use="optional" />
			<xs:attribute name="StripMarkDetails" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for TabDimensions ** -->
	<xs:element name="TabDimensions">
		<xs:complexType>
			<xs:attribute name="TabOffset" type="double" use="optional" />
			<xs:attribute name="TabsPerBank" type="integer" use="optional" />
			<xs:attribute name="TabExtensionDistance" type="double" use="optional" />
			<xs:attribute name="TabSetCollationOrder" type="NMTOKEN" use="optional" />
			<xs:attribute name="TabEdge" use="optional" />
			<xs:attribute name="TabWidth" type="double" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ThinPDFParams ** -->
	<xs:element name="ThinPDFParams">
		<xs:complexType>
			<xs:attribute name="SidelineImages" type="boolean" use="optional" />
			<xs:attribute name="FilePerPage" type="boolean" use="optional" />
			<xs:attribute name="SidelineFonts" type="boolean" use="optional" />
			<xs:attribute name="SidelineEPS" type="boolean" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for TIFFEmbeddedFile ** -->
	<xs:element name="TIFFEmbeddedFile">
		<xs:complexType>
			<xs:attribute name="TagNumber" type="integer" use="optional" />
			<xs:attribute name="TagType" type="integer" use="optional" />
			<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for TIFFFormatParams ** -->
	<xs:element name="TIFFFormatParams">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="TIFFEmbeddedFile" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="TIFFtag" />
			</xs:sequence>
			<xs:attribute name="WhiteIsZero" type="boolean" use="optional" />
			<xs:attribute name="Segmentation" use="optional" />
			<xs:attribute name="ByteOrder" use="optional" />
			<xs:attribute name="TileSize" type="XYPair" use="optional" />
			<xs:attribute name="RowsPerStrip" type="integer" use="optional" />
			<xs:attribute name="Interleaving" type="integer" use="optional" />
			<xs:attribute name="SeparationNameTag" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for TIFFtag ** -->
	<xs:element name="TIFFtag">
		<xs:complexType>
			<xs:attribute name="TagNumber" type="integer" use="optional" />
			<xs:attribute name="BinaryValue" type="hexBinary" use="optional" />
			<xs:attribute name="NumberValue" type="string" use="optional" />
			<xs:attribute name="TagType" type="integer" use="optional" />
			<xs:attribute name="StringValue" type="string" use="optional" />
			<xs:attribute name="IntegerValue" type="IntegerList" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Tile ** -->
	<xs:element name="Tile" type="Tile" substitutionGroup="ParameterType" />
	<xs:complexType name="Tile">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="MarkObject" />
				</xs:sequence>
				<xs:attribute name="ClipBox" type="rectangle" use="optional" />
				<xs:attribute name="CTM" type="matrix" use="optional" />
				<xs:attribute name="MediaRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for TransferCurve ** -->
	<xs:element name="TransferCurve" type="TransferCurve" substitutionGroup="ParameterType" />
	<xs:complexType name="TransferCurve">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Curve" type="TransferFunction" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for TransferCurvePool ** -->
	<xs:element name="TransferCurvePool" type="TransferCurvePool" substitutionGroup="ParameterType" />
	<xs:complexType name="TransferCurvePool">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TransferCurveSet" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for TransferCurveSet ** -->
	<xs:element name="TransferCurveSet">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="TransferCurve" />
			</xs:sequence>
			<xs:attribute name="CTM" type="matrix" use="optional" />
			<xs:attribute name="Name" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for TrapRegion ** -->
	<xs:element name="TrapRegion" type="TrapRegion" substitutionGroup="ParameterType" />
	<xs:complexType name="TrapRegion">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Pages" type="IntegerRangeList" use="optional" />
				<xs:attribute name="TrapZone" type="PDFPath" use="optional" />
				<xs:attribute name="TrappingParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for UsageCounter ** -->
	<xs:element name="UsageCounter" type="UsageCounter" substitutionGroup="ResourceType" />
	<xs:complexType name="UsageCounter">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
				<xs:attribute name="CounterID" type="string" use="optional" />
				<xs:attribute name="CounterTypes" type="NMTOKENS" use="optional" />
				<xs:attribute name="Scope" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for AdhesiveBinding ** -->
	<xs:element name="AdhesiveBinding" />

	<!-- ** Complex type definition for BundlingParams ** -->
	<xs:element name="BundlingParams" type="BundlingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="BundlingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="LengthJDF" type="double" use="optional" />
				<xs:attribute name="Copies" type="integer" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ChannelBinding ** -->
	<xs:element name="ChannelBinding">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Cover" />
			</xs:sequence>
			<xs:attribute name="ChannelBrand" type="string" use="optional" />
			<xs:attribute name="Thickness" type="double" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ChannelBindingParams ** -->
	<xs:element name="ChannelBindingParams" type="ChannelBindingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ChannelBindingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="ClampSize" type="shape" use="optional" />
				<xs:attribute name="ClampColor" type="string" use="optional" />
				<xs:attribute name="ClampSystem" type="boolean" use="optional" />
				<xs:attribute name="ClampColorDetails" type="string" use="optional" />
				<xs:attribute name="ClampD" type="double" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for CoilBinding ** -->
	<xs:element name="CoilBinding">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="HoleList" />
			</xs:sequence>
			<xs:attribute name="CoilMaterial" use="optional" />
			<xs:attribute name="CoilBrand" type="string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Crease ** -->
	<xs:element name="Crease">
		<xs:complexType>
			<xs:attribute name="RelativeWorkingPath" type="XYPair" use="optional" />
			<xs:attribute name="StartPosition" type="XYPair" use="optional" />
			<xs:attribute name="WorkingPath" type="XYPair" use="optional" />
			<xs:attribute name="Depth" type="double" use="optional" />
			<xs:attribute name="RelativeTravel" type="double" use="optional" />
			<xs:attribute name="RelativeStartPosition" type="XYPair" use="optional" />
			<xs:attribute name="WorkingDirection" use="optional" />
			<xs:attribute name="Travel" type="double" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Cut ** -->
	<xs:element name="Cut">
		<xs:complexType>
			<xs:attribute name="RelativeWorkingPath" type="XYPair" use="optional" />
			<xs:attribute name="StartPosition" type="XYPair" use="optional" />
			<xs:attribute name="CutWidth" type="double" use="optional" />
			<xs:attribute name="WorkingPath" type="XYPair" use="optional" />
			<xs:attribute name="RelativeStartPosition" type="XYPair" use="optional" />
			<xs:attribute name="WorkingDirection" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for CutMark ** -->
	<xs:element name="CutMark" type="CutMark" substitutionGroup="ParameterType" />
	<xs:complexType name="CutMark">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Assembly" />
				</xs:sequence>
				<xs:attribute name="Position" type="XYPair" use="optional" />
				<xs:attribute name="Blocks" type="NMTOKENS" use="optional" />
				<xs:attribute name="MarkType" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for EndSheet ** -->
	<xs:element name="EndSheet">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueLine" />
			</xs:sequence>
			<xs:attribute name="Side" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Fold ** -->
	<xs:element name="Fold" type="Fold" substitutionGroup="ParameterType" />
	<xs:complexType name="Fold">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="To" use="optional" />
				<xs:attribute name="From" use="optional" />
				<xs:attribute name="RelativeTravel" type="double" use="optional" />
				<xs:attribute name="Travel" type="double" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for FoldingParams ** -->
	<xs:element name="FoldingParams" type="FoldingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="FoldingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Fold" />
				</xs:sequence>
				<xs:attribute name="FoldCatalog" type="string" use="optional" />
				<xs:attribute name="SheetLay" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Glue ** -->
	<xs:element name="Glue">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueApplication" />
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueLine" />
			</xs:sequence>
			<xs:attribute name="WorkingDirection" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for GlueApplication ** -->
	<xs:element name="GlueApplication" type="GlueApplication" substitutionGroup="ParameterType" />
	<xs:complexType name="GlueApplication">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueLine" />
				</xs:sequence>
				<xs:attribute name="GluingTechnique" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for GlueLine ** -->
	<xs:element name="GlueLine" type="GlueLine" substitutionGroup="ParameterType" />
	<xs:complexType name="GlueLine">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="GlueBrand" type="string" use="optional" />
				<xs:attribute name="RelativeWorkingPath" type="XYPair" use="optional" />
				<xs:attribute name="MeltingTemperature" type="integer" use="optional" />
				<xs:attribute name="RelativeStartPosition" type="XYPair" use="optional" />
				<xs:attribute name="GlueType" use="optional" />
				<xs:attribute name="GlueLineWidth" type="double" use="optional" />
				<xs:attribute name="StartPosition" type="XYPair" use="optional" />
				<xs:attribute name="AreaGlue" type="boolean" use="optional" />
				<xs:attribute name="GluingPattern" type="XYPair" use="optional" />
				<xs:attribute name="WorkingPath" type="XYPair" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Hole ** -->
	<xs:element name="Hole" type="Hole" substitutionGroup="ParameterType" />
	<xs:complexType name="Hole">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Extent" type="XYPair" use="optional" />
				<xs:attribute name="Shape" use="optional" />
				<xs:attribute name="Center" type="XYPair" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for HoleList ** -->
	<xs:element name="HoleList" type="HoleList" substitutionGroup="ParameterType" />
	<xs:complexType name="HoleList">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Hole" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="HoleLine" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for HoleMakingParams ** -->
	<xs:element name="HoleMakingParams" type="HoleMakingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="HoleMakingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="RegisterMark" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Hole" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="HoleLine" />
				</xs:sequence>
				<xs:attribute name="HoleCount" type="IntegerList" use="optional" />
				<xs:attribute name="Extent" type="XYPair" use="optional" />
				<xs:attribute name="Shape" use="optional" />
				<xs:attribute name="CenterReference" use="optional" />
				<xs:attribute name="Center" type="XYPair" use="optional" />
				<xs:attribute name="HoleType" use="optional">
					<xs:simpleType>
						<xs:list itemType="EnumHoleType" />
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PlasticCombBinding ** -->
	<xs:element name="PlasticCombBinding">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="HoleList" />
			</xs:sequence>
			<xs:attribute name="CombBrand" type="string" use="optional" />
			<xs:attribute name="PlasticCombType" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PlasticCombBindingParams ** -->
	<xs:element name="PlasticCombBindingParams" type="PlasticCombBindingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="PlasticCombBindingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="ColorDetails" type="string" use="optional" />
				<xs:attribute name="Color" type="string" use="optional" />
				<xs:attribute name="Diameter" type="double" use="optional" />
				<xs:attribute name="Thickness" type="double" use="optional" />
				<xs:attribute name="HoleMakingParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for RingBinding ** -->
	<xs:element name="RingBinding">
		<xs:complexType>
			<xs:attribute name="RivetsExposed" type="boolean" use="optional" />
			<xs:attribute name="RingShape" type="NMTOKEN" use="optional" />
			<xs:attribute name="ViewBinder" type="NMTOKEN" use="optional" />
			<xs:attribute name="RingDiameter" type="double" use="optional" />
			<xs:attribute name="HoleType" use="optional" />
			<xs:attribute name="BinderBrand" type="string" use="optional" />
			<xs:attribute name="RingMechanic" type="boolean" use="optional" />
			<xs:attribute name="BinderMaterial" type="NMTOKEN" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for RingBindingParams ** -->
	<xs:element name="RingBindingParams" type="RingBindingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="RingBindingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="ViewBinder" type="NMTOKEN" use="optional" />
				<xs:attribute name="BinderColor" type="string" use="optional" />
				<xs:attribute name="SpineColor" type="string" use="optional" />
				<xs:attribute name="SpineColorDetails" type="string" use="optional" />
				<xs:attribute name="BinderColorDetails" type="string" use="optional" />
				<xs:attribute name="RingDiameter" type="double" use="optional" />
				<xs:attribute name="BinderName" type="string" use="optional" />
				<xs:attribute name="RingMechanic" type="boolean" use="optional" />
				<xs:attribute name="RivetsExposed" type="boolean" use="optional" />
				<xs:attribute name="BinderMaterial" type="NMTOKEN" use="optional" />
				<xs:attribute name="SpineWidth" type="double" use="optional" />
				<xs:attribute name="RingShape" type="NMTOKEN" use="optional" />
				<xs:attribute name="HoleMakingParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for SaddleStitching ** -->
	<xs:element name="SaddleStitching">
		<xs:complexType>
			<xs:attribute name="StitchNumber" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for SaddleStitchingParams ** -->
	<xs:element name="SaddleStitchingParams" type="SaddleStitchingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="SaddleStitchingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Score ** -->
	<xs:element name="Score">
		<xs:complexType>
			<xs:attribute name="Offset" type="double" use="optional" />
			<xs:attribute name="Side" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for SideSewing ** -->
	<xs:element name="SideSewing" />

	<!-- ** Complex type definition for SideSewingParams ** -->
	<xs:element name="SideSewingParams" type="SideSewingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="SideSewingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for SideStitching ** -->
	<xs:element name="SideStitching">
		<xs:complexType>
			<xs:attribute name="StitchNumber" type="integer" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for StitchingParams ** -->
	<xs:element name="StitchingParams" type="StitchingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="StitchingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="NumberOfStitches" type="integer" use="optional" />
				<xs:attribute name="StitchPositions" type="string" use="optional" />
				<xs:attribute name="StitchWidth" type="double" use="optional" />
				<xs:attribute name="StitchOrigin" use="optional" />
				<xs:attribute name="WireGauge" type="double" use="optional" />
				<xs:attribute name="StapleShape" use="optional" />
				<xs:attribute name="Angle" type="double" use="optional" />
				<xs:attribute name="StitchType" use="optional" />
				<xs:attribute name="Offset" type="double" use="optional" />
				<xs:attribute name="WireBrand" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for StripBindingParams ** -->
	<xs:element name="StripBindingParams" type="StripBindingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="StripBindingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="LengthJDF" type="double" use="optional" />
				<xs:attribute name="StripColorDetails" type="string" use="optional" />
				<xs:attribute name="StripColor" type="string" use="optional" />
				<xs:attribute name="HoleMakingParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ThreadSealing ** -->
	<xs:element name="ThreadSealing" />

	<!-- ** Complex type definition for ThreadSewing ** -->
	<xs:element name="ThreadSewing">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Sealing" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ThreadSewingParams ** -->
	<xs:element name="ThreadSewingParams" type="ThreadSewingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ThreadSewingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="GlueLine" />
				</xs:sequence>
				<xs:attribute name="ThreadBrand" type="string" use="optional" />
				<xs:attribute name="Sealing" type="boolean" use="optional" />
				<xs:attribute name="CastingMaterial" use="optional" />
				<xs:attribute name="CoreMaterial" use="optional" />
				<xs:attribute name="NumberOfNeedles" type="integer" use="optional" />
				<xs:attribute name="BlindStitch" type="boolean" use="optional" />
				<xs:attribute name="NeedlePositions" type="string" use="optional" />
				<xs:attribute name="GlueLineRefSheets" type="IntegerList" use="optional" />
				<xs:attribute name="Offset" type="double" use="optional" />
				<xs:attribute name="ThreadThickness" type="double" use="optional" />
				<xs:attribute name="SewingPattern" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for TrimmingParams ** -->
	<xs:element name="TrimmingParams" type="TrimmingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="TrimmingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="TrimmingOffset" type="double" use="optional" />
				<xs:attribute name="Height" type="double" use="optional" />
				<xs:attribute name="Width" type="double" use="optional" />
				<xs:attribute name="TrimCover" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for VeloBinding ** -->
	<xs:element name="VeloBinding">
		<xs:complexType>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for WebInlineFinishingParams ** -->
	<xs:element name="WebInlineFinishingParams" type="WebInlineFinishingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="WebInlineFinishingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="FolderProduction" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for WireCombBinding ** -->
	<xs:element name="WireCombBinding">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="HoleList" />
			</xs:sequence>
			<xs:attribute name="WireCombMaterial" use="optional" />
			<xs:attribute name="WireCombBrand" type="string" use="optional" />
			<xs:attribute name="WireCombShape" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for WireCombBindingParams ** -->
	<xs:element name="WireCombBindingParams" type="WireCombBindingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="WireCombBindingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="FlipBackCover" type="boolean" use="optional" />
				<xs:attribute name="Shape" use="optional" />
				<xs:attribute name="ColorDetails" type="string" use="optional" />
				<xs:attribute name="Color" type="string" use="optional" />
				<xs:attribute name="Diameter" type="double" use="optional" />
				<xs:attribute name="Thickness" type="double" use="optional" />
				<xs:attribute name="Material" use="optional" />
				<xs:attribute name="HoleMakingParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for AssetListCreationParams ** -->
	<xs:element name="AssetListCreationParams" type="AssetListCreationParams" substitutionGroup="ParameterType" />
	<xs:complexType name="AssetListCreationParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="AssetTypes" type="Any" use="optional" />
				<xs:attribute name="ListPolicy" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ColorCorrectionOp ** -->
	<xs:element name="ColorCorrectionOp">
		<xs:complexType>
			<xs:attribute name="AdjustContrast" type="double" use="optional" />
			<xs:attribute name="ObjectTags" type="NMTOKENS" use="optional" />
			<xs:attribute name="AdjustYellowBlue" type="double" use="optional" />
			<xs:attribute name="AdjustSaturation" type="double" use="optional" />
			<xs:attribute name="SourceObjects" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumSourceObjects" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="AdjustHue" type="double" use="optional" />
			<xs:attribute name="AdjustLightness" type="double" use="optional" />
			<xs:attribute name="AdjustMagentaGreen" type="double" use="optional" />
			<xs:attribute name="AdjustCyanRed" type="double" use="optional" />
			<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ColorCorrectionParams ** -->
	<xs:element name="ColorCorrectionParams" type="ColorCorrectionParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ColorCorrectionParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ColorCorrectionOp" />
				</xs:sequence>
				<xs:attribute name="ColorManagementSystem" type="string" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ColorSpaceConversionOp ** -->
	<xs:element name="ColorSpaceConversionOp">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="DeviceNSpace" />
			</xs:sequence>
			<xs:attribute name="RenderingIntent" use="optional" />
			<xs:attribute name="ObjectTags" type="NMTOKENS" use="optional" />
			<xs:attribute name="SourceObjects" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumSourceObjects" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="SourceRenderingIntent" use="optional" />
			<xs:attribute name="PreserveBlack" type="boolean" use="optional" />
			<xs:attribute name="RGBGray2BlackThreshold" type="double" use="optional" />
			<xs:attribute name="RGBGray2Black" type="boolean" use="optional" />
			<xs:attribute name="SourceCS" use="optional" />
			<xs:attribute name="Operation" use="optional" />
			<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			<xs:attribute name="SeparationNames" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for ColorSpaceConversionParams ** -->
	<xs:element name="ColorSpaceConversionParams" type="ColorSpaceConversionParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ColorSpaceConversionParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ColorSpaceConversionOp" />
				</xs:sequence>
				<xs:attribute name="ICCProfileUsage" use="optional" />
				<xs:attribute name="ColorManagementSystem" type="string" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ColorSpaceSubstitute ** -->
	<xs:element name="ColorSpaceSubstitute">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PDLResourceAlias" />
			</xs:sequence>
			<xs:attribute name="SeparationNames" type="NMTOKENS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for DigitalDeliveryParams ** -->
	<xs:element name="DigitalDeliveryParams" type="DigitalDeliveryParams" substitutionGroup="ParameterType" />
	<xs:complexType name="DigitalDeliveryParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
				<xs:attribute name="DigitalDeliveryProtocol" type="NMTOKEN" use="optional" />
				<xs:attribute name="Method" type="NMTOKEN" use="optional" />
				<xs:attribute name="DigitalDeliveryDirection" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for FileTypeResultsPool ** -->
	<xs:element name="FileTypeResultsPool">
		<xs:complexType>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for FontsResultsPool ** -->
	<xs:element name="FontsResultsPool">
		<xs:complexType>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for Ink ** -->
	<xs:element name="Ink" type="Ink" substitutionGroup="ResourceType" />
	<xs:complexType name="Ink">
		<xs:complexContent>
			<xs:extension base="ResourceType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Location" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="Contact" />
				</xs:sequence>
				<xs:attribute name="Family" type="NMTOKEN" use="optional" />
				<xs:attribute name="SpecificYield" type="double" use="optional" />
				<xs:attribute name="InkName" type="string" use="optional" />
				<xs:attribute name="SpecialInk" type="NMTOKEN" use="optional" />
				<xs:attribute name="ColorName" type="string" use="optional" />
				<xs:attribute name="IdentificationFieldRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for InkZoneCalculationParams ** -->
	<xs:element name="InkZoneCalculationParams" type="InkZoneCalculationParams" substitutionGroup="ParameterType" />
	<xs:complexType name="InkZoneCalculationParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="ZoneWidth" type="double" use="optional" />
				<xs:attribute name="ZonesY" type="integer" use="optional" />
				<xs:attribute name="FountainPositions" type="string" use="optional" />
				<xs:attribute name="Zones" type="integer" use="optional" />
				<xs:attribute name="ZoneHeight" type="double" use="optional" />
				<xs:attribute name="PrintableArea" type="rectangle" use="optional" />
				<xs:attribute name="DeviceRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for InkZoneProfile ** -->
	<xs:element name="InkZoneProfile" type="InkZoneProfile" substitutionGroup="ParameterType" />
	<xs:complexType name="InkZoneProfile">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="ZoneWidth" type="double" use="optional" />
				<xs:attribute name="ZoneHeight" type="double" use="optional" />
				<xs:attribute name="ZoneSettingsX" type="string" use="optional" />
				<xs:attribute name="ZoneSettingsY" type="string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PagesResultsPool ** -->
	<xs:element name="PagesResultsPool">
		<xs:complexType>
			<xs:attribute name="Locked" type="boolean" use="optional" />
			<xs:attribute name="PipeURL" type="URL" use="optional" />
			<xs:attribute name="Class" use="optional" />
			<xs:attribute name="PartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="PipeProtocol" type="NMTOKEN" use="optional" />
			<xs:attribute name="PipeID" type="string" use="optional" />
			<xs:attribute name="AgentName" type="string" use="optional" />
			<xs:attribute name="AgentVersion" type="string" use="optional" />
			<xs:attribute name="ProductID" type="string" use="optional" />
			<xs:attribute name="Author" type="string" use="optional" />
			<xs:attribute name="PipePartIDKeys" use="optional">
				<xs:simpleType>
					<xs:list itemType="EnumPartIDKeys" />
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="QualityControlResultRef" type="IDREF" use="optional" />
			<xs:attribute name="SourceResourceRefs" type="IDREFS" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PDFToPSConversionParams ** -->
	<xs:element name="PDFToPSConversionParams" type="PDFToPSConversionParams" substitutionGroup="ParameterType" />
	<xs:complexType name="PDFToPSConversionParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="IncludeProcSets" use="optional" />
				<xs:attribute name="IgnoreTTFontsFirst" type="boolean" use="optional" />
				<xs:attribute name="IgnoreTransfers" type="boolean" use="optional" />
				<xs:attribute name="IgnoreColorSeps" type="boolean" use="optional" />
				<xs:attribute name="ShrinkToFit" type="boolean" use="optional" />
				<xs:attribute name="SuppressRotate" type="boolean" use="optional" />
				<xs:attribute name="OutputType" use="optional" />
				<xs:attribute name="UseFontAliasNames" type="boolean" use="optional" />
				<xs:attribute name="IgnoreSeparableImagesOnly" type="boolean" use="optional" />
				<xs:attribute name="SetPageSize" type="boolean" use="optional" />
				<xs:attribute name="PSLevel" type="integer" use="optional" />
				<xs:attribute name="IncludeOtherResources" use="optional" />
				<xs:attribute name="IgnoreOverprint" type="boolean" use="optional" />
				<xs:attribute name="IncludeTrueTypeFonts" use="optional" />
				<xs:attribute name="GeneratePageStreams" type="boolean" use="optional" />
				<xs:attribute name="IncludeType1Fonts" use="optional" />
				<xs:attribute name="CenterCropBox" type="boolean" use="optional" />
				<xs:attribute name="IncludeType3Fonts" use="optional" />
				<xs:attribute name="BoundingBox" type="rectangle" use="optional" />
				<xs:attribute name="TTasT42" type="boolean" use="optional" />
				<xs:attribute name="IgnoreBG" type="boolean" use="optional" />
				<xs:attribute name="IgnoreHalftones" type="boolean" use="optional" />
				<xs:attribute name="SuppressCenter" type="boolean" use="optional" />
				<xs:attribute name="IgnoreExternStreamRef" type="boolean" use="optional" />
				<xs:attribute name="Scale" type="double" use="optional" />
				<xs:attribute name="IncludeBaseFonts" use="optional" />
				<xs:attribute name="IncludeCIDFonts" use="optional" />
				<xs:attribute name="IncludeEmbeddedFonts" use="optional" />
				<xs:attribute name="IgnoreDSC" type="boolean" use="optional" />
				<xs:attribute name="SetupProcsets" type="boolean" use="optional" />
				<xs:attribute name="IgnoreAnnotForms" type="boolean" use="optional" />
				<xs:attribute name="BinaryOK" type="boolean" use="optional" />
				<xs:attribute name="IgnoreShowPage" type="boolean" use="optional" />
				<xs:attribute name="IgnoreRawData" type="boolean" use="optional" />
				<xs:attribute name="IgnoreUCR" type="boolean" use="optional" />
				<xs:attribute name="IgnorePageRotation" type="boolean" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PDLResourceAlias ** -->
	<xs:element name="PDLResourceAlias" type="PDLResourceAlias" substitutionGroup="ParameterType" />
	<xs:complexType name="PDLResourceAlias">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="SourceName" type="string" use="optional" />
				<xs:attribute name="ResourceType" type="string" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PreflightConstraint ** -->
	<xs:element name="PreflightConstraint">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="ConstraintValue" />
			</xs:sequence>
			<xs:attribute name="AttemptFixupWarnings" type="boolean" use="optional" />
			<xs:attribute name="Constraint" type="string" use="optional" />
			<xs:attribute name="AttemptFixupErrors" type="boolean" use="optional" />
			<xs:attribute name="Status" type="EnumNodeStatus" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PreflightDetail ** -->
	<xs:element name="PreflightDetail">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Value" />
			</xs:sequence>
			<xs:attribute name="Property" type="string" use="optional" />
			<xs:attribute name="PageRefs" type="IntegerRangeList" use="optional" />
			<xs:attribute name="Status" type="EnumNodeStatus" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PreflightInstance ** -->
	<xs:element name="PreflightInstance">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="PreflightInstanceDetail" />
			</xs:sequence>
			<xs:attribute name="Identifier" type="string" use="optional" />
			<xs:attribute name="PageRefs" type="IntegerRangeList" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PreflightInstanceDetail ** -->
	<xs:element name="PreflightInstanceDetail">
		<xs:complexType>
			<xs:sequence>
				<xs:element minOccurs="0" maxOccurs="unbounded" ref="Value" />
			</xs:sequence>
			<xs:attribute name="Property" type="string" use="optional" />
			<xs:attribute name="Status" type="EnumNodeStatus" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ** Complex type definition for PreflightInventory ** -->
	<xs:element name="PreflightInventory" type="PreflightInventory" substitutionGroup="ParameterType" />
	<xs:complexType name="PreflightInventory">
		<xs:complexContent>
			<xs:extension base="ParameterType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PreflightProfile ** -->
	<xs:element name="PreflightProfile" type="PreflightProfile" substitutionGroup="ParameterType" />
	<xs:complexType name="PreflightProfile">
		<xs:complexContent>
			<xs:extension base="ParameterType" />
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PreviewGenerationParams ** -->
	<xs:element name="PreviewGenerationParams" type="PreviewGenerationParams" substitutionGroup="ParameterType" />
	<xs:complexType name="PreviewGenerationParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="PreviewUsage" use="optional" />
				<xs:attribute name="Resolution" type="XYPair" use="optional" />
				<xs:attribute name="Size" type="XYPair" use="optional" />
				<xs:attribute name="AspectRatio" use="optional" />
				<xs:attribute name="PreviewFileType" use="optional" />
				<xs:attribute name="Compensation" use="optional" />
				<xs:attribute name="ImageSetterParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PSToPDFConversionParams ** -->
	<xs:element name="PSToPDFConversionParams" type="PSToPDFConversionParams" substitutionGroup="ParameterType" />
	<xs:complexType name="PSToPDFConversionParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="DetectBlend" type="boolean" use="optional" />
				<xs:attribute name="CompressPages" type="boolean" use="optional" />
				<xs:attribute name="PDFVersion" type="double" use="optional" />
				<xs:attribute name="DefaultRenderingIntent" use="optional" />
				<xs:attribute name="Binding" use="optional" />
				<xs:attribute name="InitialResolution" type="XYPair" use="optional" />
				<xs:attribute name="Optimize" type="boolean" use="optional" />
				<xs:attribute name="AutoRotatePages" use="optional" />
				<xs:attribute name="InitialPageSize" type="XYPair" use="optional" />
				<xs:attribute name="ASCII85EncodePages" type="boolean" use="optional" />
				<xs:attribute name="DoThumbnails" type="boolean" use="optional" />
				<xs:attribute name="OverPrintMode" type="integer" use="optional" />
				<xs:attribute name="ThinPDFParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="AdvancedParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="PDFXParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for RenderingParams ** -->
	<xs:element name="RenderingParams" type="RenderingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="RenderingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ObjectResolution" />
				</xs:sequence>
				<xs:attribute name="BandWidth" type="integer" use="optional" />
				<xs:attribute name="BandHeight" type="integer" use="optional" />
				<xs:attribute name="ColorantDepth" type="integer" use="optional" />
				<xs:attribute name="BandOrdering" use="optional" />
				<xs:attribute name="Interleaved" type="boolean" use="optional" />
				<xs:attribute name="MediaRef" type="IDREF" use="optional" />
				<xs:attribute name="AutomatedOverPrintParamsRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ScanParams ** -->
	<xs:element name="ScanParams" type="ScanParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ScanParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Magnification" type="XYPair" use="optional" />
				<xs:attribute name="OutputResolution" type="XYPair" use="optional" />
				<xs:attribute name="BitDepth" type="integer" use="optional" />
				<xs:attribute name="Mounting" use="optional" />
				<xs:attribute name="InputBox" type="rectangle" use="optional" />
				<xs:attribute name="DCTQuality" type="double" use="optional" />
				<xs:attribute name="MountID" type="shortString" use="optional" />
				<xs:attribute name="SplitDocuments" type="integer" use="optional" />
				<xs:attribute name="OutputColorSpace" use="optional" />
				<xs:attribute name="CompressionFilter" use="optional" />
				<xs:attribute name="OutputSize" type="XYPair" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for ScreeningParams ** -->
	<xs:element name="ScreeningParams" type="ScreeningParams" substitutionGroup="ParameterType" />
	<xs:complexType name="ScreeningParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ScreenSelector" />
				</xs:sequence>
				<xs:attribute name="IgnoreSourceFile" type="boolean" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for TrappingDetails ** -->
	<xs:element name="TrappingDetails" type="TrappingDetails" substitutionGroup="ParameterType" />
	<xs:complexType name="TrappingDetails">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ObjectResolution" />
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="TrapRegion" />
				</xs:sequence>
				<xs:attribute name="DefaultTrapping" type="boolean" use="optional" />
				<xs:attribute name="TrappingParamsRef" type="IDREF" use="optional" />
				<xs:attribute name="TrappingOrder" type="NMTOKENS" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for TrappingParams ** -->
	<xs:element name="TrappingParams" type="TrappingParams" substitutionGroup="ParameterType" />
	<xs:complexType name="TrappingParams">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" ref="ColorantZoneDetails" />
				</xs:sequence>
				<xs:attribute name="HalftoneName" type="string" use="optional" />
				<xs:attribute name="TrapWidthY" type="double" use="optional" />
				<xs:attribute name="MinimumBlackWidth" type="double" use="optional" />
				<xs:attribute name="BlackDensityLimit" type="double" use="optional" />
				<xs:attribute name="StepLimit" type="double" use="optional" />
				<xs:attribute name="ImageToObjectTrapping" type="boolean" use="optional" />
				<xs:attribute name="ImageMaskTrapping" type="boolean" use="optional" />
				<xs:attribute name="BlackColorLimit" type="double" use="optional" />
				<xs:attribute name="ImageResolution" type="integer" use="optional" />
				<xs:attribute name="TrapJoinStyle" type="NMTOKEN" use="optional" />
				<xs:attribute name="ImageInternalTrapping" type="boolean" use="optional" />
				<xs:attribute name="ImageTrapWidthY" type="double" use="optional" />
				<xs:attribute name="TrapEndStyle" type="NMTOKEN" use="optional" />
				<xs:attribute name="TrapColorScaling" type="double" use="optional" />
				<xs:attribute name="SlidingTrapLimit" type="double" use="optional" />
				<xs:attribute name="ImageTrapPlacement" use="optional" />
				<xs:attribute name="TrapWidth" type="double" use="optional" />
				<xs:attribute name="ImageToImageTrapping" type="boolean" use="optional" />
				<xs:attribute name="ImageTrapWidth" type="double" use="optional" />
				<xs:attribute name="BlackWidth" type="double" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for PrintCondition ** -->
	<xs:element name="PrintCondition" type="PrintCondition" substitutionGroup="ParameterType" />
	<xs:complexType name="PrintCondition">
		<xs:complexContent>
			<xs:extension base="ParameterType">
				<xs:attribute name="Name" type="string" use="optional" />
				<xs:attribute name="Density" type="double" use="optional" />
				<xs:attribute name="AimCurve" type="TransferFunction" use="optional" />
				<xs:attribute name="ColorMeasurementConditionsRef" type="IDREF" use="optional" />
				<xs:attribute name="DeviceRef" type="IDREF" use="optional" />
				<xs:attribute name="FileSpecRef" type="IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ** Complex type definition for Date ** -->
	<xs:element name="Date" />

	<!-- ** Complex type definition for Duration ** -->
	<xs:element name="Duration" />
</xs:schema>